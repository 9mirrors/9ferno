/*
 * Forth dictionary
 */
enum {
	Sourceline,
	Here,
	There,
	Byte,	/* obsolete, all are counted strings now */
	Chars,
	Absolute,
	Absoluteptr,
	Relative,		/* fmem+ value, for defined memory locations */
	Relativevar,	/* fmem+FORTHVARS+ value */
	Relativedictionary,	/* fmem+DICTIONARY+ value */
	Dtop,
	End
};

typedef struct Fentry Fentry;
struct Fentry
{
	int what;	/* Source line or Here or There or Dtop value */
	char desc[1024];
	int type;	/* Byte, Chars, Absolute, Relative, End */
	intptr here;
	intptr there;
	/* union { */
		intptr p;	/* for Absolute and Relative */
		s8 b;		/* for immediates, write the value as immediate + length */
		char str[128];
		void *ptr;
	/* }; */
};
enum {
	M_fetch = 16,
	M_store = 40,
	M_cfetch = 64,
	M_cstore = 88,
	M_mmap = 112,
	M_terminate = 136,
	M_fthdump = 160,
	M_clear = 184,
	M_reset = 208,
	M_exitcolon = 232,
	M_literal = 256,
	M_sliteral = 280,
	M_doinit = 304,
	M_doloop = 328,
	M_doploop = 352,
	M_rfetch = 376,
	M_rpop = 400,
	M_rpush = 424,
	M_i = 448,
	M_j = 472,
	M_plus = 496,
	M_minus = 520,
	M_multiply = 544,
	M_cjump = 568,
	M_jump = 592,
	M_slashmod = 616,
	M_uslashmod = 640,
	M_binand = 664,
	M_binor = 688,
	M_binxor = 712,
	M_xswap = 736,
	M_drop = 760,
	M_dup = 784,
	M_over = 808,
	M_equal = 832,
	M_greater = 856,
	M_less = 880,
	M_lshift = 904,
	M_rshift = 928,
	M_rshifta = 952,
	M_execute = 976,
	M_unloop = 1000,
	M_cmove = 1024,
	M_cmoveb = 1048,
	M_variable = 1072,
	M_constant = 1096,
	M_colon = 1120,
	M_dodoes = 1144,
	M_cas = 1168,
	M_deferred = 1192,
	M_stackptr = 1216,
	M_sysbind = 1240,
	M_sysclose = 1264,
	M_syscreate = 1288,
	M_sysmount = 1312,
	M_sysopen = 1336,
	M_sysread = 1360,
	M_sysseek = 1384,
	M_syswrite = 1408,
	MC_STDIN = 1432,
	MC_STDOUT = 1464,
	MC_STDERR = 1496,
	MC_WORDNUM = 1528,
	MC_LINENUM = 1560,
	MC_DOUBLEQUOTENUM = 1592,
	MC_CLOSEPARENNUM = 1624,
	MC_NBUFFERS = 1656,
	MV_Dp = 1688,
	MV_Dtop = 1720,
	MV_Vp = 1752,
	MV_Pid = 1784,
	MV_Parentpid = 1816,
	MV_S0 = 1848,
	MV_Wordb = 1880,
	MV_Tib = 1912,
	MV_Argsfilename = 1944,
	MV_Iobuf = 1976,
	MV_Findadr = 2008,
	MV_Searchlen = 2040,
	MV_Base = 2072,
	MV_toNum = 2104,
	MV_State = 2136,
	MV_Abortvec = 2168,
	MV_Infd = 2200,
	MV_Outfd = 2232,
	MV_Errfd = 2264,
	MV_Eof = 2296,
	MV_Ninputs = 2328,
	MV_H0 = 2360,
	MV_Bufferfds = 2392,
	MV_Bufferfilenames = 2424,
	C_false = 2456,
	C_true = 2504,
	C_bl = 2552,
	C_on = 2600,
	C_off = 2664,
	C_tobody = 2728,
	C_aligned = 2784,
	C_cells = 2864,
	C_cells_plus = 2920,
	C_cell_plus = 2968,
	C_depth = 3024,
	C_nip = 3128,
	C_rot = 3176,
	C_2drop = 3240,
	C_2dup = 3288,
	C_2nip = 3336,
	C_2swap = 3384,
	C_qdup = 3448,
	L_C_qdup = 3520,
	C_pick = 3544,
	L_C_pick = 3648,
	L_C_pick_1 = 3656,
	C_tuck = 3680,
	C_divides = 3744,
	C_plusstore = 3792,
	C_invert = 3872,
	C_mod = 3928,
	C_1plus = 3976,
	C_1minus = 4032,
	C_negate = 4088,
	C_2multiplies = 4152,
	C_2divides = 4208,
	C_0eq = 4264,
	C_0lt = 4320,
	C_0gt = 4376,
	C_neq = 4432,
	C_0neq = 4480,
	C_max = 4536,
	L_C_max = 4600,
	L_C_max_1 = 4608,
	C_min = 4632,
	L_C_min = 4696,
	L_C_min_1 = 4704,
	C_signum = 4728,
	L_C_signum = 4808,
	L_C_signum_2 = 4864,
	L_C_signum_3 = 4880,
	L_C_signum_1 = 4880,
	C_within = 4904,
	C_abs = 5008,
	L_C_abs = 5056,
	C_emit = 5080,
	C_type = 5184,
	C_cr = 5280,
	C_space = 5336,
	C_emits = 5384,
	L_C_emits = 5392,
	L_C_emits_1 = 5456,
	C_spaces = 5488,
	C_count = 5544,
	C_compare = 5688,
	L_C_compare = 5760,
	L_C_compare_1 = 5896,
	C_erase = 5976,
	L_C_erase = 6008,
	C_fill = 6096,
	L_C_fill = 6136,
	C_blank = 6224,
	C_search = 6272,
	L_C_search = 6376,
	L_C_search_1 = 6560,
	C_here = 6624,
	C_there = 6672,
	C_comma = 6720,
	C_c = 6800,
	C_allot = 6880,
	C_vallot = 6928,
	C_pad = 6976,
	C_align = 7040,
	C_unused = 7104,
	C_fromhash = 7168,
	C_hash = 7248,
	L_C_hash = 7400,
	L_C_hash_1 = 7424,
	C_hashs = 7504,
	L_C_hashs = 7512,
	L_C_hashs_1 = 7560,
	C_hashfrom = 7584,
	C_hold = 7696,
	C_sign = 7800,
	L_C_sign = 7856,
	C_counted_paren_dot_paren = 7880,
	C_paren_dot_paren = 7976,
	C_dot = 8064,
	C_dotr = 8120,
	C_hex = 8280,
	C_decimal = 8344,
	C_digit = 8408,
	L_C_digit = 8520,
	L_C_digit_2 = 8624,
	L_C_digit_4 = 8728,
	L_C_digit_5 = 8752,
	L_C_digit_3 = 8752,
	L_C_digit_1 = 8752,
	L_C_digit_6 = 8824,
	L_C_digit_7 = 8840,
	C_number = 8864,
	L_C_number = 9000,
	L_C_number_1 = 9032,
	L_C_number_2 = 9096,
	L_C_number_3 = 9200,
	L_C_number_4 = 9256,
	C_abort = 9344,
	C_bufferfilename_fetch = 9400,
	C_bufferfilename_store = 9536,
	C_toword = 9600,
	C_wordfd_fetch = 9656,
	C_wordfd_store = 9712,
	C_wordfilename_fetch = 9768,
	C_wordfilename_store = 9824,
	C_toline = 9880,
	C_linefd_fetch = 9936,
	C_linefd_store = 9992,
	C_linefilename_fetch = 10048,
	C_linefilename_store = 10104,
	C_todoublequote = 10160,
	C_doublequotefd_fetch = 10216,
	C_doublequotefd_store = 10272,
	C_doublequotefilename_fetch = 10328,
	C_doublequotefilename_store = 10384,
	C_tocloseparen = 10440,
	C_closeparenfd_fetch = 10496,
	C_closeparenfd_store = 10552,
	C_closeparenfilename_fetch = 10608,
	C_closeparenfilename_store = 10664,
	C_stdinput = 10720,
	L_C_stdinput = 10792,
	C_args = 10904,
	L_C_args_read = 10976,
	C_input_fetch = 11064,
	L_C_input_fetch = 11112,
	C_input_store = 11296,
	L_C_input_store = 11456,
	L_C_input_store_1 = 11568,
	C_close_input = 11608,
	L_C_close_input = 11656,
	L_C_close_next = 11784,
	C_restore_input = 11944,
	L_restore_input = 12072,
	C_concat = 12096,
	C_buffername = 12272,
	C_get = 12448,
	L_C_get_opened = 12712,
	L_C_get = 12760,
	L_C_get_read_failed = 12952,
	L_C_get_read_0 = 13016,
	L_C_get_read_successful = 13056,
	C_parse = 13080,
	L_C_parse_1 = 13240,
	C_word = 13312,
	C_line = 13368,
	C_doublequote = 13416,
	C_counted_doublequote = 13464,
	C_closeparen = 13520,
	C_findname = 13568,
	L_C_findname = 13608,
	L_C_findname_2 = 13720,
	L_C_findname_4 = 13848,
	L_C_findname_3 = 13856,
	L_C_findname_1 = 13872,
	C_find = 13920,
	L_C_find_1 = 14112,
	L_C_find_2 = 14128,
	L_C_find = 14152,
	L_C_find_3 = 14160,
	C_single_quote = 14184,
	L_C_single_quote = 14304,
	C_qstack = 14328,
	L_C_qstack = 14424,
	C_interpret = 14488,
	L_C_interpret = 14496,
	L_C_interpret_2 = 14560,
	L_C_interpret_4 = 14664,
	L_C_interpret_3 = 14664,
	C_create = 14704,
	C_variable = 14936,
	C_constant = 15024,
	C_immediate = 15144,
	C_tocfa = 15256,
	C_compile = 15336,
	L_C_compile_1 = 15464,
	L_C_compile_2 = 15480,
	L_C_compile = 15496,
	L_C_compile_4 = 15616,
	L_C_compile_6 = 15648,
	L_C_compile_3 = 15648,
	C_close_bracket = 15672,
	L_C_close_bracket = 15696,
	L_C_close_bracket_1 = 15776,
	L_C_close_bracket_2 = 15800,
	L_C_close_bracket_3 = 15832,
	CI_open_bracket = 15856,
	C_smudge = 15904,
	C_reveal = 16016,
	C_colon = 16136,
	CI_semicolon = 16264,
	CI_recurse = 16344,
	C_char = 16416,
	C_literal = 16472,
	C_sliteral = 16536,
	C_string = 16688,
	CI_char_brackets = 16800,
	CI_quote_brackets = 16864,
	CI_openparen = 16912,
	CI_backslash = 16960,
	C_qabort_parens = 17000,
	L_C_qabort_parens = 17080,
	L_C_qabort_parens_1 = 17088,
	CI_abort_double_quote = 17112,
	C_double_quote = 17176,
	C_counted_double_quote = 17288,
	CI_sdouble_quote = 17408,
	CI_dotstr = 17448,
	CI_if = 17512,
	CI_else = 17600,
	CI_then = 17728,
	CI_begin = 17784,
	CI_again = 17824,
	CI_until = 17888,
	CI_while = 17952,
	CI_repeat = 18040,
	CI_do = 18136,
	CI_loop = 18216,
	L234 = 18304,
	CI_ploop = 18328,
	L236 = 18416,
	C_wo = 18440,
	C_ro = 18536,
	C_rw = 18584,
	C_cstring = 18632,
	C_cstring0 = 18808,
	C_cstring1 = 18864,
	C_open_file = 18920,
	C_close_file = 19016,
	C_read_file = 19064,
	C_write_file = 19136,
	C_reposition_file = 19200,
	C_qfcheck = 19264,
	L246 = 19352,
	C_create_file = 19376,
	C_bye = 19648,
	C_include = 19704,
	C_crash = 19816,
	C_quit = 19896,
	L_C_quit = 19920,
	C_parenabort = 19976,
	C_initialize = 20240,
	L_C_initialize = 20288,
	L_C_initialize_1 = 20424,
	C_boot = 20640,
	L_bin_prefix = 20864,
	L_line_filename = 20868,
	L_word_filename = 20874,
	L_doublequote_filename = 20880,
	L_closeparen_filename = 20893,
	L137 = 20905,
	L_open_failed = 20929,
	L_read_failed = 20946,
	L170 = 20963,
	L173 = 20967,
	L180 = 20984,
	L_C_compile_5 = 20988,
	L247 = 20992,
	L251 = 21002,
	L255 = 21033,
	L_C_get_too_long = 21037,
	L305 = 21089,
	L_C_long_word = 21100,
};
extern void *sliteral(void);
extern void *syscreate(void);
extern void *cjump(void);
extern void *syswrite(void);
extern void *i(void);
extern void *equal(void);
extern void *j(void);
extern void *drop(void);
extern void *rpop(void);
extern void *stackptr(void);
extern void *sysseek(void);
extern void *deferred(void);
extern void *cas(void);
extern void *xswap(void);
extern void *terminate(void);
extern void *greater(void);
extern void *slashmod(void);
extern void *cmoveb(void);
extern void *doinit(void);
extern void *multiply(void);
extern void *colon(void);
extern void *less(void);
extern void *lshift(void);
extern void *sysopen(void);
extern void *plus(void);
extern void *sysclose(void);
extern void *jump(void);
extern void *fthdump(void);
extern void *rshift(void);
extern void *cstore(void);
extern void *store(void);
extern void *cmove(void);
extern void *binor(void);
extern void *unloop(void);
extern void *sysbind(void);
extern void *cfetch(void);
extern void *sysmount(void);
extern void *constant(void);
extern void *variable(void);
extern void *fetch(void);
extern void *doloop(void);
extern void *mmap(void);
extern void *binxor(void);
extern void *sysread(void);
extern void *dup(void);
extern void *exitcolon(void);
extern void *clear(void);
extern void *binand(void);
extern void *literal(void);
extern void *rpush(void);
extern void *over(void);
extern void *minus(void);
extern void *rfetch(void);
extern void *reset(void);
extern void *dodoes(void);
extern void *uslashmod(void);
extern void *execute(void);
extern void *rshifta(void);
extern void *doploop(void);
Fentry fentries[] = {
	{.what Sourceline, .desc "MENTRY \"@\" fetch 1"},
		{.what Here, .desc "link",.here 0, .there 0,.type Absolute, .p 0 },
		{.what Here, .desc "len", .here 8, .there 0,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 9, .there 0,.type Chars, .str "@" },
		{.what Here, .desc "cfa", .here 16, .there 0,.type Absoluteptr, .ptr fetch },
	{.what Sourceline, .desc "MENTRY \"!\" store 1"},
		{.what Here, .desc "link",.here 24, .there 0,.type Relativedictionary, .p 0 },
		{.what Here, .desc "len", .here 32, .there 0,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 33, .there 0,.type Chars, .str "!" },
		{.what Here, .desc "cfa", .here 40, .there 0,.type Absoluteptr, .ptr store },
	{.what Sourceline, .desc "MENTRY \"c@\" cfetch 2"},
		{.what Here, .desc "link",.here 48, .there 0,.type Relativedictionary, .p 24 },
		{.what Here, .desc "len", .here 56, .there 0,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 57, .there 0,.type Chars, .str "c@" },
		{.what Here, .desc "cfa", .here 64, .there 0,.type Absoluteptr, .ptr cfetch },
	{.what Sourceline, .desc "MENTRY \"c!\" cstore 2"},
		{.what Here, .desc "link",.here 72, .there 0,.type Relativedictionary, .p 48 },
		{.what Here, .desc "len", .here 80, .there 0,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 81, .there 0,.type Chars, .str "c!" },
		{.what Here, .desc "cfa", .here 88, .there 0,.type Absoluteptr, .ptr cstore },
	{.what Sourceline, .desc "MENTRY \"mmap\" mmap 4"},
		{.what Here, .desc "link",.here 96, .there 0,.type Relativedictionary, .p 72 },
		{.what Here, .desc "len", .here 104, .there 0,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 105, .there 0,.type Chars, .str "mmap" },
		{.what Here, .desc "cfa", .here 112, .there 0,.type Absoluteptr, .ptr mmap },
	{.what Sourceline, .desc "MENTRY \"halt\" terminate 4"},
		{.what Here, .desc "link",.here 120, .there 0,.type Relativedictionary, .p 96 },
		{.what Here, .desc "len", .here 128, .there 0,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 129, .there 0,.type Chars, .str "halt" },
		{.what Here, .desc "cfa", .here 136, .there 0,.type Absoluteptr, .ptr terminate },
	{.what Sourceline, .desc "MENTRY \"dump\" fthdump 4"},
		{.what Here, .desc "link",.here 144, .there 0,.type Relativedictionary, .p 120 },
		{.what Here, .desc "len", .here 152, .there 0,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 153, .there 0,.type Chars, .str "dump" },
		{.what Here, .desc "cfa", .here 160, .there 0,.type Absoluteptr, .ptr fthdump },
	{.what Sourceline, .desc "MENTRY \"clear\" clear 5"},
		{.what Here, .desc "link",.here 168, .there 0,.type Relativedictionary, .p 144 },
		{.what Here, .desc "len", .here 176, .there 0,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 177, .there 0,.type Chars, .str "clear" },
		{.what Here, .desc "cfa", .here 184, .there 0,.type Absoluteptr, .ptr clear },
	{.what Sourceline, .desc "MENTRY \"reset\" reset 5"},
		{.what Here, .desc "link",.here 192, .there 0,.type Relativedictionary, .p 168 },
		{.what Here, .desc "len", .here 200, .there 0,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 201, .there 0,.type Chars, .str "reset" },
		{.what Here, .desc "cfa", .here 208, .there 0,.type Absoluteptr, .ptr reset },
	{.what Sourceline, .desc "MENTRY \"exit\" exitcolon 4"},
		{.what Here, .desc "link",.here 216, .there 0,.type Relativedictionary, .p 192 },
		{.what Here, .desc "len", .here 224, .there 0,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 225, .there 0,.type Chars, .str "exit" },
		{.what Here, .desc "cfa", .here 232, .there 0,.type Absoluteptr, .ptr exitcolon },
	{.what Sourceline, .desc "MENTRY \"(literal)\" literal 9"},
		{.what Here, .desc "link",.here 240, .there 0,.type Relativedictionary, .p 216 },
		{.what Here, .desc "len", .here 248, .there 0,.type Byte, .b 0 + 9 },
		{.what Here, .desc "name",.here 249, .there 0,.type Chars, .str "(literal)" },
		{.what Here, .desc "cfa", .here 256, .there 0,.type Absoluteptr, .ptr literal },
	{.what Sourceline, .desc "MENTRY \"(sliteral)\" sliteral 10"},
		{.what Here, .desc "link",.here 264, .there 0,.type Relativedictionary, .p 240 },
		{.what Here, .desc "len", .here 272, .there 0,.type Byte, .b 0 + 10 },
		{.what Here, .desc "name",.here 273, .there 0,.type Chars, .str "(sliteral)" },
		{.what Here, .desc "cfa", .here 280, .there 0,.type Absoluteptr, .ptr sliteral },
	{.what Sourceline, .desc "MENTRY \"(do)\" doinit 4"},
		{.what Here, .desc "link",.here 288, .there 0,.type Relativedictionary, .p 264 },
		{.what Here, .desc "len", .here 296, .there 0,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 297, .there 0,.type Chars, .str "(do)" },
		{.what Here, .desc "cfa", .here 304, .there 0,.type Absoluteptr, .ptr doinit },
	{.what Sourceline, .desc "MENTRY \"(loop)\" doloop 6"},
		{.what Here, .desc "link",.here 312, .there 0,.type Relativedictionary, .p 288 },
		{.what Here, .desc "len", .here 320, .there 0,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 321, .there 0,.type Chars, .str "(loop)" },
		{.what Here, .desc "cfa", .here 328, .there 0,.type Absoluteptr, .ptr doloop },
	{.what Sourceline, .desc "MENTRY \"(+loop)\" doploop 7"},
		{.what Here, .desc "link",.here 336, .there 0,.type Relativedictionary, .p 312 },
		{.what Here, .desc "len", .here 344, .there 0,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 345, .there 0,.type Chars, .str "(+loop)" },
		{.what Here, .desc "cfa", .here 352, .there 0,.type Absoluteptr, .ptr doploop },
	{.what Sourceline, .desc "MENTRY \"r@\" rfetch 2"},
		{.what Here, .desc "link",.here 360, .there 0,.type Relativedictionary, .p 336 },
		{.what Here, .desc "len", .here 368, .there 0,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 369, .there 0,.type Chars, .str "r@" },
		{.what Here, .desc "cfa", .here 376, .there 0,.type Absoluteptr, .ptr rfetch },
	{.what Sourceline, .desc "MENTRY \"r>\" rpop 2"},
		{.what Here, .desc "link",.here 384, .there 0,.type Relativedictionary, .p 360 },
		{.what Here, .desc "len", .here 392, .there 0,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 393, .there 0,.type Chars, .str "r>" },
		{.what Here, .desc "cfa", .here 400, .there 0,.type Absoluteptr, .ptr rpop },
	{.what Sourceline, .desc "MENTRY \">r\" rpush 2"},
		{.what Here, .desc "link",.here 408, .there 0,.type Relativedictionary, .p 384 },
		{.what Here, .desc "len", .here 416, .there 0,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 417, .there 0,.type Chars, .str ">r" },
		{.what Here, .desc "cfa", .here 424, .there 0,.type Absoluteptr, .ptr rpush },
	{.what Sourceline, .desc "MENTRY \"i\" i 1"},
		{.what Here, .desc "link",.here 432, .there 0,.type Relativedictionary, .p 408 },
		{.what Here, .desc "len", .here 440, .there 0,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 441, .there 0,.type Chars, .str "i" },
		{.what Here, .desc "cfa", .here 448, .there 0,.type Absoluteptr, .ptr i },
	{.what Sourceline, .desc "MENTRY \"j\" j 1"},
		{.what Here, .desc "link",.here 456, .there 0,.type Relativedictionary, .p 432 },
		{.what Here, .desc "len", .here 464, .there 0,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 465, .there 0,.type Chars, .str "j" },
		{.what Here, .desc "cfa", .here 472, .there 0,.type Absoluteptr, .ptr j },
	{.what Sourceline, .desc "MENTRY \"+\" plus 1"},
		{.what Here, .desc "link",.here 480, .there 0,.type Relativedictionary, .p 456 },
		{.what Here, .desc "len", .here 488, .there 0,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 489, .there 0,.type Chars, .str "+" },
		{.what Here, .desc "cfa", .here 496, .there 0,.type Absoluteptr, .ptr plus },
	{.what Sourceline, .desc "MENTRY \"-\" minus 1"},
		{.what Here, .desc "link",.here 504, .there 0,.type Relativedictionary, .p 480 },
		{.what Here, .desc "len", .here 512, .there 0,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 513, .there 0,.type Chars, .str "-" },
		{.what Here, .desc "cfa", .here 520, .there 0,.type Absoluteptr, .ptr minus },
	{.what Sourceline, .desc "MENTRY \"*\" multiply 1"},
		{.what Here, .desc "link",.here 528, .there 0,.type Relativedictionary, .p 504 },
		{.what Here, .desc "len", .here 536, .there 0,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 537, .there 0,.type Chars, .str "*" },
		{.what Here, .desc "cfa", .here 544, .there 0,.type Absoluteptr, .ptr multiply },
	{.what Sourceline, .desc "MENTRY \"(if)\" cjump 4"},
		{.what Here, .desc "link",.here 552, .there 0,.type Relativedictionary, .p 528 },
		{.what Here, .desc "len", .here 560, .there 0,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 561, .there 0,.type Chars, .str "(if)" },
		{.what Here, .desc "cfa", .here 568, .there 0,.type Absoluteptr, .ptr cjump },
	{.what Sourceline, .desc "MENTRY \"(else)\" jump 6"},
		{.what Here, .desc "link",.here 576, .there 0,.type Relativedictionary, .p 552 },
		{.what Here, .desc "len", .here 584, .there 0,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 585, .there 0,.type Chars, .str "(else)" },
		{.what Here, .desc "cfa", .here 592, .there 0,.type Absoluteptr, .ptr jump },
	{.what Sourceline, .desc "MENTRY \"/mod\" slashmod 4"},
		{.what Here, .desc "link",.here 600, .there 0,.type Relativedictionary, .p 576 },
		{.what Here, .desc "len", .here 608, .there 0,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 609, .there 0,.type Chars, .str "/mod" },
		{.what Here, .desc "cfa", .here 616, .there 0,.type Absoluteptr, .ptr slashmod },
	{.what Sourceline, .desc "MENTRY \"u/mod\" uslashmod 5"},
		{.what Here, .desc "link",.here 624, .there 0,.type Relativedictionary, .p 600 },
		{.what Here, .desc "len", .here 632, .there 0,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 633, .there 0,.type Chars, .str "u/mod" },
		{.what Here, .desc "cfa", .here 640, .there 0,.type Absoluteptr, .ptr uslashmod },
	{.what Sourceline, .desc "MENTRY \"and\" binand 3"},
		{.what Here, .desc "link",.here 648, .there 0,.type Relativedictionary, .p 624 },
		{.what Here, .desc "len", .here 656, .there 0,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 657, .there 0,.type Chars, .str "and" },
		{.what Here, .desc "cfa", .here 664, .there 0,.type Absoluteptr, .ptr binand },
	{.what Sourceline, .desc "MENTRY \"or\" binor 2"},
		{.what Here, .desc "link",.here 672, .there 0,.type Relativedictionary, .p 648 },
		{.what Here, .desc "len", .here 680, .there 0,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 681, .there 0,.type Chars, .str "or" },
		{.what Here, .desc "cfa", .here 688, .there 0,.type Absoluteptr, .ptr binor },
	{.what Sourceline, .desc "MENTRY \"xor\" binxor 3"},
		{.what Here, .desc "link",.here 696, .there 0,.type Relativedictionary, .p 672 },
		{.what Here, .desc "len", .here 704, .there 0,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 705, .there 0,.type Chars, .str "xor" },
		{.what Here, .desc "cfa", .here 712, .there 0,.type Absoluteptr, .ptr binxor },
	{.what Sourceline, .desc "MENTRY \"swap\" xswap 4"},
		{.what Here, .desc "link",.here 720, .there 0,.type Relativedictionary, .p 696 },
		{.what Here, .desc "len", .here 728, .there 0,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 729, .there 0,.type Chars, .str "swap" },
		{.what Here, .desc "cfa", .here 736, .there 0,.type Absoluteptr, .ptr xswap },
	{.what Sourceline, .desc "MENTRY \"drop\" drop 4"},
		{.what Here, .desc "link",.here 744, .there 0,.type Relativedictionary, .p 720 },
		{.what Here, .desc "len", .here 752, .there 0,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 753, .there 0,.type Chars, .str "drop" },
		{.what Here, .desc "cfa", .here 760, .there 0,.type Absoluteptr, .ptr drop },
	{.what Sourceline, .desc "MENTRY \"dup\" dup 3"},
		{.what Here, .desc "link",.here 768, .there 0,.type Relativedictionary, .p 744 },
		{.what Here, .desc "len", .here 776, .there 0,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 777, .there 0,.type Chars, .str "dup" },
		{.what Here, .desc "cfa", .here 784, .there 0,.type Absoluteptr, .ptr dup },
	{.what Sourceline, .desc "MENTRY \"over\" over 4"},
		{.what Here, .desc "link",.here 792, .there 0,.type Relativedictionary, .p 768 },
		{.what Here, .desc "len", .here 800, .there 0,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 801, .there 0,.type Chars, .str "over" },
		{.what Here, .desc "cfa", .here 808, .there 0,.type Absoluteptr, .ptr over },
	{.what Sourceline, .desc "MENTRY \"=\" equal 1"},
		{.what Here, .desc "link",.here 816, .there 0,.type Relativedictionary, .p 792 },
		{.what Here, .desc "len", .here 824, .there 0,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 825, .there 0,.type Chars, .str "=" },
		{.what Here, .desc "cfa", .here 832, .there 0,.type Absoluteptr, .ptr equal },
	{.what Sourceline, .desc "MENTRY \">\" greater 1"},
		{.what Here, .desc "link",.here 840, .there 0,.type Relativedictionary, .p 816 },
		{.what Here, .desc "len", .here 848, .there 0,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 849, .there 0,.type Chars, .str ">" },
		{.what Here, .desc "cfa", .here 856, .there 0,.type Absoluteptr, .ptr greater },
	{.what Sourceline, .desc "MENTRY \"<\" less 1"},
		{.what Here, .desc "link",.here 864, .there 0,.type Relativedictionary, .p 840 },
		{.what Here, .desc "len", .here 872, .there 0,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 873, .there 0,.type Chars, .str "<" },
		{.what Here, .desc "cfa", .here 880, .there 0,.type Absoluteptr, .ptr less },
	{.what Sourceline, .desc "MENTRY \"lshift\" lshift 6"},
		{.what Here, .desc "link",.here 888, .there 0,.type Relativedictionary, .p 864 },
		{.what Here, .desc "len", .here 896, .there 0,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 897, .there 0,.type Chars, .str "lshift" },
		{.what Here, .desc "cfa", .here 904, .there 0,.type Absoluteptr, .ptr lshift },
	{.what Sourceline, .desc "MENTRY \"rshift\" rshift 6"},
		{.what Here, .desc "link",.here 912, .there 0,.type Relativedictionary, .p 888 },
		{.what Here, .desc "len", .here 920, .there 0,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 921, .there 0,.type Chars, .str "rshift" },
		{.what Here, .desc "cfa", .here 928, .there 0,.type Absoluteptr, .ptr rshift },
	{.what Sourceline, .desc "MENTRY \"rshifta\" rshifta 7"},
		{.what Here, .desc "link",.here 936, .there 0,.type Relativedictionary, .p 912 },
		{.what Here, .desc "len", .here 944, .there 0,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 945, .there 0,.type Chars, .str "rshifta" },
		{.what Here, .desc "cfa", .here 952, .there 0,.type Absoluteptr, .ptr rshifta },
	{.what Sourceline, .desc "MENTRY \"execute\" execute 7"},
		{.what Here, .desc "link",.here 960, .there 0,.type Relativedictionary, .p 936 },
		{.what Here, .desc "len", .here 968, .there 0,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 969, .there 0,.type Chars, .str "execute" },
		{.what Here, .desc "cfa", .here 976, .there 0,.type Absoluteptr, .ptr execute },
	{.what Sourceline, .desc "MENTRY \"unloop\" unloop 6"},
		{.what Here, .desc "link",.here 984, .there 0,.type Relativedictionary, .p 960 },
		{.what Here, .desc "len", .here 992, .there 0,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 993, .there 0,.type Chars, .str "unloop" },
		{.what Here, .desc "cfa", .here 1000, .there 0,.type Absoluteptr, .ptr unloop },
	{.what Sourceline, .desc "MENTRY \"cmove\" cmove 5"},
		{.what Here, .desc "link",.here 1008, .there 0,.type Relativedictionary, .p 984 },
		{.what Here, .desc "len", .here 1016, .there 0,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 1017, .there 0,.type Chars, .str "cmove" },
		{.what Here, .desc "cfa", .here 1024, .there 0,.type Absoluteptr, .ptr cmove },
	{.what Sourceline, .desc "MENTRY \"cmove>\" cmoveb 6"},
		{.what Here, .desc "link",.here 1032, .there 0,.type Relativedictionary, .p 1008 },
		{.what Here, .desc "len", .here 1040, .there 0,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 1041, .there 0,.type Chars, .str "cmove>" },
		{.what Here, .desc "cfa", .here 1048, .there 0,.type Absoluteptr, .ptr cmoveb },
	{.what Sourceline, .desc "MENTRY \"(variable)\" variable 10"},
		{.what Here, .desc "link",.here 1056, .there 0,.type Relativedictionary, .p 1032 },
		{.what Here, .desc "len", .here 1064, .there 0,.type Byte, .b 0 + 10 },
		{.what Here, .desc "name",.here 1065, .there 0,.type Chars, .str "(variable)" },
		{.what Here, .desc "cfa", .here 1072, .there 0,.type Absoluteptr, .ptr variable },
	{.what Sourceline, .desc "MENTRY \"(constant)\" constant 10"},
		{.what Here, .desc "link",.here 1080, .there 0,.type Relativedictionary, .p 1056 },
		{.what Here, .desc "len", .here 1088, .there 0,.type Byte, .b 0 + 10 },
		{.what Here, .desc "name",.here 1089, .there 0,.type Chars, .str "(constant)" },
		{.what Here, .desc "cfa", .here 1096, .there 0,.type Absoluteptr, .ptr constant },
	{.what Sourceline, .desc "MENTRY \"(:)\" colon 3"},
		{.what Here, .desc "link",.here 1104, .there 0,.type Relativedictionary, .p 1080 },
		{.what Here, .desc "len", .here 1112, .there 0,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 1113, .there 0,.type Chars, .str "(:)" },
		{.what Here, .desc "cfa", .here 1120, .there 0,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "MENTRY \"(does)\" dodoes 6"},
		{.what Here, .desc "link",.here 1128, .there 0,.type Relativedictionary, .p 1104 },
		{.what Here, .desc "len", .here 1136, .there 0,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 1137, .there 0,.type Chars, .str "(does)" },
		{.what Here, .desc "cfa", .here 1144, .there 0,.type Absoluteptr, .ptr dodoes },
	{.what Sourceline, .desc "MENTRY \"cas\" cas 3"},
		{.what Here, .desc "link",.here 1152, .there 0,.type Relativedictionary, .p 1128 },
		{.what Here, .desc "len", .here 1160, .there 0,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 1161, .there 0,.type Chars, .str "cas" },
		{.what Here, .desc "cfa", .here 1168, .there 0,.type Absoluteptr, .ptr cas },
	{.what Sourceline, .desc "MENTRY \"(deferred)\" deferred 10"},
		{.what Here, .desc "link",.here 1176, .there 0,.type Relativedictionary, .p 1152 },
		{.what Here, .desc "len", .here 1184, .there 0,.type Byte, .b 0 + 10 },
		{.what Here, .desc "name",.here 1185, .there 0,.type Chars, .str "(deferred)" },
		{.what Here, .desc "cfa", .here 1192, .there 0,.type Absoluteptr, .ptr deferred },
	{.what Sourceline, .desc "MENTRY \"s@\" stackptr 2	; puts PSP on stack. Not a variable hence lower case."},
		{.what Here, .desc "link",.here 1200, .there 0,.type Relativedictionary, .p 1176 },
		{.what Here, .desc "len", .here 1208, .there 0,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 1209, .there 0,.type Chars, .str "s@" },
		{.what Here, .desc "cfa", .here 1216, .there 0,.type Absoluteptr, .ptr stackptr },
	{.what Sourceline, .desc "MENTRY \"sysbind\" sysbind 7"},
		{.what Here, .desc "link",.here 1224, .there 0,.type Relativedictionary, .p 1200 },
		{.what Here, .desc "len", .here 1232, .there 0,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 1233, .there 0,.type Chars, .str "sysbind" },
		{.what Here, .desc "cfa", .here 1240, .there 0,.type Absoluteptr, .ptr sysbind },
	{.what Sourceline, .desc "MENTRY \"sysclose\" sysclose 8"},
		{.what Here, .desc "link",.here 1248, .there 0,.type Relativedictionary, .p 1224 },
		{.what Here, .desc "len", .here 1256, .there 0,.type Byte, .b 0 + 8 },
		{.what Here, .desc "name",.here 1257, .there 0,.type Chars, .str "sysclose" },
		{.what Here, .desc "cfa", .here 1264, .there 0,.type Absoluteptr, .ptr sysclose },
	{.what Sourceline, .desc "MENTRY \"syscreate\" syscreate 9"},
		{.what Here, .desc "link",.here 1272, .there 0,.type Relativedictionary, .p 1248 },
		{.what Here, .desc "len", .here 1280, .there 0,.type Byte, .b 0 + 9 },
		{.what Here, .desc "name",.here 1281, .there 0,.type Chars, .str "syscreate" },
		{.what Here, .desc "cfa", .here 1288, .there 0,.type Absoluteptr, .ptr syscreate },
	{.what Sourceline, .desc "MENTRY \"sysmount\" sysmount 8"},
		{.what Here, .desc "link",.here 1296, .there 0,.type Relativedictionary, .p 1272 },
		{.what Here, .desc "len", .here 1304, .there 0,.type Byte, .b 0 + 8 },
		{.what Here, .desc "name",.here 1305, .there 0,.type Chars, .str "sysmount" },
		{.what Here, .desc "cfa", .here 1312, .there 0,.type Absoluteptr, .ptr sysmount },
	{.what Sourceline, .desc "MENTRY \"sysopen\" sysopen 7"},
		{.what Here, .desc "link",.here 1320, .there 0,.type Relativedictionary, .p 1296 },
		{.what Here, .desc "len", .here 1328, .there 0,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 1329, .there 0,.type Chars, .str "sysopen" },
		{.what Here, .desc "cfa", .here 1336, .there 0,.type Absoluteptr, .ptr sysopen },
	{.what Sourceline, .desc "MENTRY \"sysread\" sysread 7"},
		{.what Here, .desc "link",.here 1344, .there 0,.type Relativedictionary, .p 1320 },
		{.what Here, .desc "len", .here 1352, .there 0,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 1353, .there 0,.type Chars, .str "sysread" },
		{.what Here, .desc "cfa", .here 1360, .there 0,.type Absoluteptr, .ptr sysread },
	{.what Sourceline, .desc "MENTRY \"sysseek\" sysseek 7"},
		{.what Here, .desc "link",.here 1368, .there 0,.type Relativedictionary, .p 1344 },
		{.what Here, .desc "len", .here 1376, .there 0,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 1377, .there 0,.type Chars, .str "sysseek" },
		{.what Here, .desc "cfa", .here 1384, .there 0,.type Absoluteptr, .ptr sysseek },
	{.what Sourceline, .desc "MENTRY \"syswrite\" syswrite 8"},
		{.what Here, .desc "link",.here 1392, .there 0,.type Relativedictionary, .p 1368 },
		{.what Here, .desc "len", .here 1400, .there 0,.type Byte, .b 0 + 8 },
		{.what Here, .desc "name",.here 1401, .there 0,.type Chars, .str "syswrite" },
		{.what Here, .desc "cfa", .here 1408, .there 0,.type Absoluteptr, .ptr syswrite },
	{.what Sourceline, .desc "MCENTRY \"STDIN\" STDIN 5	0 ; 3 constants from here CAPITALS"},
		{.what Here, .desc "link",.here 1416, .there 0,.type Relativedictionary, .p 1392 },
		{.what Here, .desc "len", .here 1424, .there 0,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 1425, .there 0,.type Chars, .str "STDIN" },
		{.what Here, .desc "cfa", .here 1432, .there 0,.type Absoluteptr, .ptr constant },
		{.what Here, .desc "constant", .here 1440, .there 0,.type Absolute, .p 0 },
	{.what Sourceline, .desc "MCENTRY \"STDOUT\" STDOUT 6 1"},
		{.what Here, .desc "link",.here 1448, .there 0,.type Relativedictionary, .p 1416 },
		{.what Here, .desc "len", .here 1456, .there 0,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 1457, .there 0,.type Chars, .str "STDOUT" },
		{.what Here, .desc "cfa", .here 1464, .there 0,.type Absoluteptr, .ptr constant },
		{.what Here, .desc "constant", .here 1472, .there 0,.type Absolute, .p 1 },
	{.what Sourceline, .desc "MCENTRY \"STDERR\" STDERR 6 2"},
		{.what Here, .desc "link",.here 1480, .there 0,.type Relativedictionary, .p 1448 },
		{.what Here, .desc "len", .here 1488, .there 0,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 1489, .there 0,.type Chars, .str "STDERR" },
		{.what Here, .desc "cfa", .here 1496, .there 0,.type Absoluteptr, .ptr constant },
		{.what Here, .desc "constant", .here 1504, .there 0,.type Absolute, .p 2 },
	{.what Sourceline, .desc "MCENTRY	\"WORD#\" WORDNUM 5 0"},
		{.what Here, .desc "link",.here 1512, .there 0,.type Relativedictionary, .p 1480 },
		{.what Here, .desc "len", .here 1520, .there 0,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 1521, .there 0,.type Chars, .str "WORD#" },
		{.what Here, .desc "cfa", .here 1528, .there 0,.type Absoluteptr, .ptr constant },
		{.what Here, .desc "constant", .here 1536, .there 0,.type Absolute, .p 0 },
	{.what Sourceline, .desc "MCENTRY	\"LINE#\" LINENUM 5 1"},
		{.what Here, .desc "link",.here 1544, .there 0,.type Relativedictionary, .p 1512 },
		{.what Here, .desc "len", .here 1552, .there 0,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 1553, .there 0,.type Chars, .str "LINE#" },
		{.what Here, .desc "cfa", .here 1560, .there 0,.type Absoluteptr, .ptr constant },
		{.what Here, .desc "constant", .here 1568, .there 0,.type Absolute, .p 1 },
	{.what Sourceline, .desc "MCENTRY	\"DOUBLEQUOTE#\" DOUBLEQUOTENUM 12 2"},
		{.what Here, .desc "link",.here 1576, .there 0,.type Relativedictionary, .p 1544 },
		{.what Here, .desc "len", .here 1584, .there 0,.type Byte, .b 0 + 12 },
		{.what Here, .desc "name",.here 1585, .there 0,.type Chars, .str "DOUBLEQUOTE#" },
		{.what Here, .desc "cfa", .here 1592, .there 0,.type Absoluteptr, .ptr constant },
		{.what Here, .desc "constant", .here 1600, .there 0,.type Absolute, .p 2 },
	{.what Sourceline, .desc "MCENTRY	\"CLOSEPAREN#\" CLOSEPARENNUM 11 3"},
		{.what Here, .desc "link",.here 1608, .there 0,.type Relativedictionary, .p 1576 },
		{.what Here, .desc "len", .here 1616, .there 0,.type Byte, .b 0 + 11 },
		{.what Here, .desc "name",.here 1617, .there 0,.type Chars, .str "CLOSEPAREN#" },
		{.what Here, .desc "cfa", .here 1624, .there 0,.type Absoluteptr, .ptr constant },
		{.what Here, .desc "constant", .here 1632, .there 0,.type Absolute, .p 3 },
	{.what Sourceline, .desc "MCENTRY \"#BUFFERS\" NBUFFERS 8 16"},
		{.what Here, .desc "link",.here 1640, .there 0,.type Relativedictionary, .p 1608 },
		{.what Here, .desc "len", .here 1648, .there 0,.type Byte, .b 0 + 8 },
		{.what Here, .desc "name",.here 1649, .there 0,.type Chars, .str "#BUFFERS" },
		{.what Here, .desc "cfa", .here 1656, .there 0,.type Absoluteptr, .ptr constant },
		{.what Here, .desc "constant", .here 1664, .there 0,.type Absolute, .p 16 },
	{.what Sourceline, .desc "MVDENTRY \"Dp\" Dp 2 HERE		; here"},
		{.what Here, .desc "link",.here 1672, .there 0,.type Relativedictionary, .p 1640 },
		{.what Here, .desc "len", .here 1680, .there 0,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 1681, .there 0,.type Chars, .str "Dp" },
		{.what Here, .desc "cfa", .here 1688, .there 0,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 1696, .there 0,.type Relative, .p HERE },
	{.what Sourceline, .desc "MVDENTRY \"Dtop\" Dtop 4 DTOP	; last defined header"},
		{.what Here, .desc "link",.here 1704, .there 0,.type Relativedictionary, .p 1672 },
		{.what Here, .desc "len", .here 1712, .there 0,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 1713, .there 0,.type Chars, .str "Dtop" },
		{.what Here, .desc "cfa", .here 1720, .there 0,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 1728, .there 0,.type Relative, .p DTOP },
	{.what Sourceline, .desc "MVDENTRY \"Vp\" Vp 2 THERE	; here of the variables space"},
		{.what Here, .desc "link",.here 1736, .there 0,.type Relativedictionary, .p 1704 },
		{.what Here, .desc "len", .here 1744, .there 0,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 1745, .there 0,.type Chars, .str "Vp" },
		{.what Here, .desc "cfa", .here 1752, .there 0,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 1760, .there 0,.type Relative, .p THERE },
	{.what Sourceline, .desc "MVDENTRY \"Pid\" Pid 3 FTHPID"},
		{.what Here, .desc "link",.here 1768, .there 0,.type Relativedictionary, .p 1736 },
		{.what Here, .desc "len", .here 1776, .there 0,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 1777, .there 0,.type Chars, .str "Pid" },
		{.what Here, .desc "cfa", .here 1784, .there 0,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 1792, .there 0,.type Relative, .p FTHPID },
	{.what Sourceline, .desc "MVDENTRY \"Parentpid\" Parentpid 4 FTHPARENTPID"},
		{.what Here, .desc "link",.here 1800, .there 0,.type Relativedictionary, .p 1768 },
		{.what Here, .desc "len", .here 1808, .there 0,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 1809, .there 0,.type Chars, .str "Parentpid" },
		{.what Here, .desc "cfa", .here 1816, .there 0,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 1824, .there 0,.type Relative, .p FTHPARENTPID },
	{.what Sourceline, .desc "MVDENTRY \"S0\" S0 2 PSTACK"},
		{.what Here, .desc "link",.here 1832, .there 0,.type Relativedictionary, .p 1800 },
		{.what Here, .desc "len", .here 1840, .there 0,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 1841, .there 0,.type Chars, .str "S0" },
		{.what Here, .desc "cfa", .here 1848, .there 0,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 1856, .there 0,.type Relative, .p PSTACK },
	{.what Sourceline, .desc "MVDENTRY \"Wordb\" Wordb 5 WORDB"},
		{.what Here, .desc "link",.here 1864, .there 0,.type Relativedictionary, .p 1832 },
		{.what Here, .desc "len", .here 1872, .there 0,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 1873, .there 0,.type Chars, .str "Wordb" },
		{.what Here, .desc "cfa", .here 1880, .there 0,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 1888, .there 0,.type Relative, .p WORDB },
	{.what Sourceline, .desc "MVDENTRY \"Tib\" Tib 3 TIB"},
		{.what Here, .desc "link",.here 1896, .there 0,.type Relativedictionary, .p 1864 },
		{.what Here, .desc "len", .here 1904, .there 0,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 1905, .there 0,.type Chars, .str "Tib" },
		{.what Here, .desc "cfa", .here 1912, .there 0,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 1920, .there 0,.type Relative, .p TIB },
	{.what Sourceline, .desc "MVDENTRY \"Argsfilename\" Argsfilename 12 ARGSFILENAME ; counted string populated by forth starter from params"},
		{.what Here, .desc "link",.here 1928, .there 0,.type Relativedictionary, .p 1896 },
		{.what Here, .desc "len", .here 1936, .there 0,.type Byte, .b 0 + 12 },
		{.what Here, .desc "name",.here 1937, .there 0,.type Chars, .str "Argsfilename" },
		{.what Here, .desc "cfa", .here 1944, .there 0,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 1952, .there 0,.type Relative, .p ARGSFILENAME },
	{.what Sourceline, .desc "MVENTRY \"Iobuf\" Iobuf 5		; the values are not being used from the definition. All are initialized to 0."},
		{.what Here, .desc "link",.here 1960, .there 0,.type Relativedictionary, .p 1928 },
		{.what Here, .desc "len", .here 1968, .there 0,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 1969, .there 0,.type Chars, .str "Iobuf" },
		{.what Here, .desc "cfa", .here 1976, .there 0,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 1984, .there 0,.type Relativevar, .p FORTHVARS + 0 },
	{.what Sourceline, .desc "MVENTRY \"Findadr\" Findadr 7"},
		{.what Here, .desc "link",.here 1992, .there 8,.type Relativedictionary, .p 1960 },
		{.what Here, .desc "len", .here 2000, .there 8,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 2001, .there 8,.type Chars, .str "Findadr" },
		{.what Here, .desc "cfa", .here 2008, .there 8,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 2016, .there 8,.type Relativevar, .p FORTHVARS + 8 },
	{.what Sourceline, .desc "MVENTRY \"Searchlen\" Searchlen 9"},
		{.what Here, .desc "link",.here 2024, .there 16,.type Relativedictionary, .p 1992 },
		{.what Here, .desc "len", .here 2032, .there 16,.type Byte, .b 0 + 9 },
		{.what Here, .desc "name",.here 2033, .there 16,.type Chars, .str "Searchlen" },
		{.what Here, .desc "cfa", .here 2040, .there 16,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 2048, .there 16,.type Relativevar, .p FORTHVARS + 16 },
	{.what Sourceline, .desc "MVENTRY \"Base\" Base 4"},
		{.what Here, .desc "link",.here 2056, .there 24,.type Relativedictionary, .p 2024 },
		{.what Here, .desc "len", .here 2064, .there 24,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 2065, .there 24,.type Chars, .str "Base" },
		{.what Here, .desc "cfa", .here 2072, .there 24,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 2080, .there 24,.type Relativevar, .p FORTHVARS + 24 },
	{.what Sourceline, .desc "MVENTRY \">Num\" toNum 4"},
		{.what Here, .desc "link",.here 2088, .there 32,.type Relativedictionary, .p 2056 },
		{.what Here, .desc "len", .here 2096, .there 32,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 2097, .there 32,.type Chars, .str ">Num" },
		{.what Here, .desc "cfa", .here 2104, .there 32,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 2112, .there 32,.type Relativevar, .p FORTHVARS + 32 },
	{.what Sourceline, .desc "MVENTRY \"State\" State 5"},
		{.what Here, .desc "link",.here 2120, .there 40,.type Relativedictionary, .p 2088 },
		{.what Here, .desc "len", .here 2128, .there 40,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 2129, .there 40,.type Chars, .str "State" },
		{.what Here, .desc "cfa", .here 2136, .there 40,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 2144, .there 40,.type Relativevar, .p FORTHVARS + 40 },
	{.what Sourceline, .desc "MVENTRY \"Abortvec\" Abortvec 8	; not sure if these 3 can be constants instead?"},
		{.what Here, .desc "link",.here 2152, .there 48,.type Relativedictionary, .p 2120 },
		{.what Here, .desc "len", .here 2160, .there 48,.type Byte, .b 0 + 8 },
		{.what Here, .desc "name",.here 2161, .there 48,.type Chars, .str "Abortvec" },
		{.what Here, .desc "cfa", .here 2168, .there 48,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 2176, .there 48,.type Relativevar, .p FORTHVARS + 48 },
	{.what Sourceline, .desc "MVENTRY \"Infd\" Infd 4"},
		{.what Here, .desc "link",.here 2184, .there 56,.type Relativedictionary, .p 2152 },
		{.what Here, .desc "len", .here 2192, .there 56,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 2193, .there 56,.type Chars, .str "Infd" },
		{.what Here, .desc "cfa", .here 2200, .there 56,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 2208, .there 56,.type Relativevar, .p FORTHVARS + 56 },
	{.what Sourceline, .desc "MVENTRY \"Outfd\" Outfd 5"},
		{.what Here, .desc "link",.here 2216, .there 64,.type Relativedictionary, .p 2184 },
		{.what Here, .desc "len", .here 2224, .there 64,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 2225, .there 64,.type Chars, .str "Outfd" },
		{.what Here, .desc "cfa", .here 2232, .there 64,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 2240, .there 64,.type Relativevar, .p FORTHVARS + 64 },
	{.what Sourceline, .desc "MVENTRY \"Errfd\" Errfd 5"},
		{.what Here, .desc "link",.here 2248, .there 72,.type Relativedictionary, .p 2216 },
		{.what Here, .desc "len", .here 2256, .there 72,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 2257, .there 72,.type Chars, .str "Errfd" },
		{.what Here, .desc "cfa", .here 2264, .there 72,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 2272, .there 72,.type Relativevar, .p FORTHVARS + 72 },
	{.what Sourceline, .desc "MVENTRY \"Eof\" Eof 3"},
		{.what Here, .desc "link",.here 2280, .there 80,.type Relativedictionary, .p 2248 },
		{.what Here, .desc "len", .here 2288, .there 80,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 2289, .there 80,.type Chars, .str "Eof" },
		{.what Here, .desc "cfa", .here 2296, .there 80,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 2304, .there 80,.type Relativevar, .p FORTHVARS + 80 },
	{.what Sourceline, .desc "MVENTRY \"Ninputs\" Ninputs 7"},
		{.what Here, .desc "link",.here 2312, .there 88,.type Relativedictionary, .p 2280 },
		{.what Here, .desc "len", .here 2320, .there 88,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 2321, .there 88,.type Chars, .str "Ninputs" },
		{.what Here, .desc "cfa", .here 2328, .there 88,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 2336, .there 88,.type Relativevar, .p FORTHVARS + 88 },
	{.what Sourceline, .desc "MVENTRY \"H0\" H0 2		; here at startup"},
		{.what Here, .desc "link",.here 2344, .there 96,.type Relativedictionary, .p 2312 },
		{.what Here, .desc "len", .here 2352, .there 96,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 2353, .there 96,.type Chars, .str "H0" },
		{.what Here, .desc "cfa", .here 2360, .there 96,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 2368, .there 96,.type Relativevar, .p FORTHVARS + 96 },
	{.what Sourceline, .desc "MVENTRY \"Bufferfds\" Bufferfds 9 16"},
		{.what Here, .desc "link",.here 2376, .there 104,.type Relativedictionary, .p 2344 },
		{.what Here, .desc "len", .here 2384, .there 104,.type Byte, .b 0 + 9 },
		{.what Here, .desc "name",.here 2385, .there 104,.type Chars, .str "Bufferfds" },
		{.what Here, .desc "cfa", .here 2392, .there 104,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 2400, .there 104,.type Relativevar, .p FORTHVARS + 104 },
	{.what Sourceline, .desc "MVENTRY \"Bufferfilenames\" Bufferfilenames 15 16 ; counted string labels of the searchers populated by boot"},
		{.what Here, .desc "link",.here 2408, .there 232,.type Relativedictionary, .p 2376 },
		{.what Here, .desc "len", .here 2416, .there 232,.type Byte, .b 0 + 15 },
		{.what Here, .desc "name",.here 2417, .there 232,.type Chars, .str "Bufferfilenames" },
		{.what Here, .desc "cfa", .here 2424, .there 232,.type Absoluteptr, .ptr variable },
		{.what Here, .desc "pfa", .here 2432, .there 232,.type Relativevar, .p FORTHVARS + 232 },
	{.what Sourceline, .desc "CENTRY \"false\" false 5"},
		{.what Here, .desc "link",.here 2440, .there 360,.type Relativedictionary, .p 2408 },
		{.what Here, .desc "len", .here 2448, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 2449, .there 360,.type Chars, .str "false" },
		{.what Here, .desc "cfa", .here 2456, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 2464, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 2472, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 2480, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"true\" true 4"},
		{.what Here, .desc "link",.here 2488, .there 360,.type Relativedictionary, .p 2440 },
		{.what Here, .desc "len", .here 2496, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 2497, .there 360,.type Chars, .str "true" },
		{.what Here, .desc "cfa", .here 2504, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 2512, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1"},
		{.what Here, .desc "value", .here 2520, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 2528, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"bl\" bl 2"},
		{.what Here, .desc "link",.here 2536, .there 360,.type Relativedictionary, .p 2488 },
		{.what Here, .desc "len", .here 2544, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 2545, .there 360,.type Chars, .str "bl" },
		{.what Here, .desc "cfa", .here 2552, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 2560, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 32"},
		{.what Here, .desc "value", .here 2568, .there 360,.type Absolute, .p 32 },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 2576, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"on\" on 2 ; ( a -- ) (G stores -1 at a )"},
		{.what Here, .desc "link",.here 2584, .there 360,.type Relativedictionary, .p 2536 },
		{.what Here, .desc "len", .here 2592, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 2593, .there 360,.type Chars, .str "on" },
		{.what Here, .desc "cfa", .here 2600, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 2608, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1"},
		{.what Here, .desc "value", .here 2616, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 2624, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 2632, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 2640, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"off\" off 3 ; ( a -- ) (G stores 0 at a )"},
		{.what Here, .desc "link",.here 2648, .there 360,.type Relativedictionary, .p 2584 },
		{.what Here, .desc "len", .here 2656, .there 360,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 2657, .there 360,.type Chars, .str "off" },
		{.what Here, .desc "cfa", .here 2664, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 2672, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 2680, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 2688, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 2696, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 2704, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \">body\" tobody 5"},
		{.what Here, .desc "link",.here 2712, .there 360,.type Relativedictionary, .p 2648 },
		{.what Here, .desc "len", .here 2720, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 2721, .there 360,.type Chars, .str ">body" },
		{.what Here, .desc "cfa", .here 2728, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 2736, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 8"},
		{.what Here, .desc "value", .here 2744, .there 360,.type Absolute, .p 8 },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 2752, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 2760, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"aligned\" aligned 7 ; align a number to a multiple of 8"},
		{.what Here, .desc "link",.here 2768, .there 360,.type Relativedictionary, .p 2712 },
		{.what Here, .desc "len", .here 2776, .there 360,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 2777, .there 360,.type Chars, .str "aligned" },
		{.what Here, .desc "cfa", .here 2784, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 2792, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 7"},
		{.what Here, .desc "value", .here 2800, .there 360,.type Absolute, .p 7 },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 2808, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 2816, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -8"},
		{.what Here, .desc "value", .here 2824, .there 360,.type Absolute, .p -8 },
	{.what Sourceline, .desc "dd M_binand"},
		{.what Here, .desc "address", .here 2832, .there 360,.type Relativedictionary, .p M_binand },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 2840, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"cells\" cells 5"},
		{.what Here, .desc "link",.here 2848, .there 360,.type Relativedictionary, .p 2768 },
		{.what Here, .desc "len", .here 2856, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 2857, .there 360,.type Chars, .str "cells" },
		{.what Here, .desc "cfa", .here 2864, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 2872, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 3			; (index << 2) -> (index << 3) for amd64"},
		{.what Here, .desc "value", .here 2880, .there 360,.type Absolute, .p 3 },
	{.what Sourceline, .desc "dd M_lshift"},
		{.what Here, .desc "address", .here 2888, .there 360,.type Relativedictionary, .p M_lshift },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 2896, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"cells+\" cells_plus 6 ; ( n1 n2 -- n1+(n2*cellsize) )"},
		{.what Here, .desc "link",.here 2904, .there 360,.type Relativedictionary, .p 2848 },
		{.what Here, .desc "len", .here 2912, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 2913, .there 360,.type Chars, .str "cells+" },
		{.what Here, .desc "cfa", .here 2920, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_cells"},
		{.what Here, .desc "address", .here 2928, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 2936, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 2944, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"cell+\" cell_plus 5"},
		{.what Here, .desc "link",.here 2952, .there 360,.type Relativedictionary, .p 2904 },
		{.what Here, .desc "len", .here 2960, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 2961, .there 360,.type Chars, .str "cell+" },
		{.what Here, .desc "cfa", .here 2968, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 2976, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 2984, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd C_cells_plus"},
		{.what Here, .desc "address", .here 2992, .there 360,.type Relativedictionary, .p C_cells_plus },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 3000, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"depth\" depth 5"},
		{.what Here, .desc "link",.here 3008, .there 360,.type Relativedictionary, .p 2952 },
		{.what Here, .desc "len", .here 3016, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 3017, .there 360,.type Chars, .str "depth" },
		{.what Here, .desc "cfa", .here 3024, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_S0"},
		{.what Here, .desc "address", .here 3032, .there 360,.type Relativedictionary, .p MV_S0 },
	{.what Sourceline, .desc "dd M_stackptr"},
		{.what Here, .desc "address", .here 3040, .there 360,.type Relativedictionary, .p M_stackptr },
	{.what Sourceline, .desc "dd M_minus"},
		{.what Here, .desc "address", .here 3048, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 3056, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 3"},
		{.what Here, .desc "value", .here 3064, .there 360,.type Absolute, .p 3 },
	{.what Sourceline, .desc "dd M_rshift"},
		{.what Here, .desc "address", .here 3072, .there 360,.type Relativedictionary, .p M_rshift },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 3080, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 3088, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd M_minus"},
		{.what Here, .desc "address", .here 3096, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 3104, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"nip\" nip 3"},
		{.what Here, .desc "link",.here 3112, .there 360,.type Relativedictionary, .p 3008 },
		{.what Here, .desc "len", .here 3120, .there 360,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 3121, .there 360,.type Chars, .str "nip" },
		{.what Here, .desc "cfa", .here 3128, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 3136, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 3144, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 3152, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"rot\" rot 3"},
		{.what Here, .desc "link",.here 3160, .there 360,.type Relativedictionary, .p 3112 },
		{.what Here, .desc "len", .here 3168, .there 360,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 3169, .there 360,.type Chars, .str "rot" },
		{.what Here, .desc "cfa", .here 3176, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_rpush"},
		{.what Here, .desc "address", .here 3184, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 3192, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 3200, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 3208, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 3216, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"2drop\" 2drop 5"},
		{.what Here, .desc "link",.here 3224, .there 360,.type Relativedictionary, .p 3160 },
		{.what Here, .desc "len", .here 3232, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 3233, .there 360,.type Chars, .str "2drop" },
		{.what Here, .desc "cfa", .here 3240, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 3248, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 3256, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 3264, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"2dup\" 2dup 4"},
		{.what Here, .desc "link",.here 3272, .there 360,.type Relativedictionary, .p 3224 },
		{.what Here, .desc "len", .here 3280, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 3281, .there 360,.type Chars, .str "2dup" },
		{.what Here, .desc "cfa", .here 3288, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_over"},
		{.what Here, .desc "address", .here 3296, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd M_over"},
		{.what Here, .desc "address", .here 3304, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 3312, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"2nip\" 2nip 4"},
		{.what Here, .desc "link",.here 3320, .there 360,.type Relativedictionary, .p 3272 },
		{.what Here, .desc "len", .here 3328, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 3329, .there 360,.type Chars, .str "2nip" },
		{.what Here, .desc "cfa", .here 3336, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_nip"},
		{.what Here, .desc "address", .here 3344, .there 360,.type Relativedictionary, .p C_nip },
	{.what Sourceline, .desc "dd C_nip"},
		{.what Here, .desc "address", .here 3352, .there 360,.type Relativedictionary, .p C_nip },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 3360, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"2swap\" 2swap 5"},
		{.what Here, .desc "link",.here 3368, .there 360,.type Relativedictionary, .p 3320 },
		{.what Here, .desc "len", .here 3376, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 3377, .there 360,.type Chars, .str "2swap" },
		{.what Here, .desc "cfa", .here 3384, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_rot"},
		{.what Here, .desc "address", .here 3392, .there 360,.type Relativedictionary, .p C_rot },
	{.what Sourceline, .desc "dd M_rpush"},
		{.what Here, .desc "address", .here 3400, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd C_rot"},
		{.what Here, .desc "address", .here 3408, .there 360,.type Relativedictionary, .p C_rot },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 3416, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 3424, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"?dup\" qdup 4 ; if (n != 0) ( n -- n n) else ( n -- n )"},
		{.what Here, .desc "link",.here 3432, .there 360,.type Relativedictionary, .p 3368 },
		{.what Here, .desc "len", .here 3440, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 3441, .there 360,.type Chars, .str "?dup" },
		{.what Here, .desc "cfa", .here 3448, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_dup	; ( n -- n n )"},
		{.what Here, .desc "address", .here 3456, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_dup	; ( n n -- n n n )"},
		{.what Here, .desc "address", .here 3464, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 3472, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0		; ( n n n -- n n n 0 )"},
		{.what Here, .desc "value", .here 3480, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_equal	; ( n n n 0 -- n n f )"},
		{.what Here, .desc "address", .here 3488, .there 360,.type Relativedictionary, .p M_equal },
	{.what Sourceline, .desc "dd M_cjump	; ( n n f -- n n )"},
		{.what Here, .desc "address", .here 3496, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_qdup	; when n != 0, go to L20"},
		{.what Here, .desc "address", .here 3504, .there 360,.type Relativedictionary, .p L_C_qdup },
	{.what Sourceline, .desc "dd M_drop	; when n == 0 ( n n -- n)"},
		{.what Here, .desc "address", .here 3512, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "L_C_qdup:		; when n != 0 ( n n )"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 3520, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"pick\" pick 4"},
		{.what Here, .desc "link",.here 3528, .there 360,.type Relativedictionary, .p 3432 },
		{.what Here, .desc "len", .here 3536, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 3537, .there 360,.type Chars, .str "pick" },
		{.what Here, .desc "cfa", .here 3544, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_qdup"},
		{.what Here, .desc "address", .here 3552, .there 360,.type Relativedictionary, .p C_qdup },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 3560, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_pick"},
		{.what Here, .desc "address", .here 3568, .there 360,.type Relativedictionary, .p L_C_pick },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 3576, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 3584, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 3592, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd C_cells"},
		{.what Here, .desc "address", .here 3600, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd M_stackptr"},
		{.what Here, .desc "address", .here 3608, .there 360,.type Relativedictionary, .p M_stackptr },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 3616, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 3624, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 3632, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_pick_1"},
		{.what Here, .desc "address", .here 3640, .there 360,.type Relativedictionary, .p L_C_pick_1 },
	{.what Sourceline, .desc "L_C_pick:"},
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 3648, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "L_C_pick_1:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 3656, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"tuck\" tuck 4"},
		{.what Here, .desc "link",.here 3664, .there 360,.type Relativedictionary, .p 3528 },
		{.what Here, .desc "len", .here 3672, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 3673, .there 360,.type Chars, .str "tuck" },
		{.what Here, .desc "cfa", .here 3680, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 3688, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_rpush"},
		{.what Here, .desc "address", .here 3696, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 3704, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 3712, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 3720, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"/\" divides 1"},
		{.what Here, .desc "link",.here 3728, .there 360,.type Relativedictionary, .p 3664 },
		{.what Here, .desc "len", .here 3736, .there 360,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 3737, .there 360,.type Chars, .str "/" },
		{.what Here, .desc "cfa", .here 3744, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_slashmod"},
		{.what Here, .desc "address", .here 3752, .there 360,.type Relativedictionary, .p M_slashmod },
	{.what Sourceline, .desc "dd C_nip"},
		{.what Here, .desc "address", .here 3760, .there 360,.type Relativedictionary, .p C_nip },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 3768, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"+!\" plusstore 2 ; ( n 'a -- ) a@ = a@+n"},
		{.what Here, .desc "link",.here 3776, .there 360,.type Relativedictionary, .p 3728 },
		{.what Here, .desc "len", .here 3784, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 3785, .there 360,.type Chars, .str "+!" },
		{.what Here, .desc "cfa", .here 3792, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 3800, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 3808, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_rot"},
		{.what Here, .desc "address", .here 3816, .there 360,.type Relativedictionary, .p C_rot },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 3824, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 3832, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 3840, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 3848, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"invert\" invert 6"},
		{.what Here, .desc "link",.here 3856, .there 360,.type Relativedictionary, .p 3776 },
		{.what Here, .desc "len", .here 3864, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 3865, .there 360,.type Chars, .str "invert" },
		{.what Here, .desc "cfa", .here 3872, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 3880, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1"},
		{.what Here, .desc "value", .here 3888, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "dd M_binxor"},
		{.what Here, .desc "address", .here 3896, .there 360,.type Relativedictionary, .p M_binxor },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 3904, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"mod\" mod 3"},
		{.what Here, .desc "link",.here 3912, .there 360,.type Relativedictionary, .p 3856 },
		{.what Here, .desc "len", .here 3920, .there 360,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 3921, .there 360,.type Chars, .str "mod" },
		{.what Here, .desc "cfa", .here 3928, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_slashmod"},
		{.what Here, .desc "address", .here 3936, .there 360,.type Relativedictionary, .p M_slashmod },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 3944, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 3952, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"1+\" 1plus 2"},
		{.what Here, .desc "link",.here 3960, .there 360,.type Relativedictionary, .p 3912 },
		{.what Here, .desc "len", .here 3968, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 3969, .there 360,.type Chars, .str "1+" },
		{.what Here, .desc "cfa", .here 3976, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 3984, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 3992, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 4000, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 4008, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"1-\" 1minus 2"},
		{.what Here, .desc "link",.here 4016, .there 360,.type Relativedictionary, .p 3960 },
		{.what Here, .desc "len", .here 4024, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 4025, .there 360,.type Chars, .str "1-" },
		{.what Here, .desc "cfa", .here 4032, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 4040, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 4048, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd M_minus"},
		{.what Here, .desc "address", .here 4056, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 4064, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"negate\" negate 6"},
		{.what Here, .desc "link",.here 4072, .there 360,.type Relativedictionary, .p 4016 },
		{.what Here, .desc "len", .here 4080, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 4081, .there 360,.type Chars, .str "negate" },
		{.what Here, .desc "cfa", .here 4088, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 4096, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 4104, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 4112, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_minus"},
		{.what Here, .desc "address", .here 4120, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 4128, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"2*\" 2multiplies 2"},
		{.what Here, .desc "link",.here 4136, .there 360,.type Relativedictionary, .p 4072 },
		{.what Here, .desc "len", .here 4144, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 4145, .there 360,.type Chars, .str "2*" },
		{.what Here, .desc "cfa", .here 4152, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 4160, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 4168, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd M_lshift"},
		{.what Here, .desc "address", .here 4176, .there 360,.type Relativedictionary, .p M_lshift },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 4184, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"2/\" 2divides 2"},
		{.what Here, .desc "link",.here 4192, .there 360,.type Relativedictionary, .p 4136 },
		{.what Here, .desc "len", .here 4200, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 4201, .there 360,.type Chars, .str "2/" },
		{.what Here, .desc "cfa", .here 4208, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 4216, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 4224, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd M_rshifta"},
		{.what Here, .desc "address", .here 4232, .there 360,.type Relativedictionary, .p M_rshifta },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 4240, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"0=\" 0eq 2"},
		{.what Here, .desc "link",.here 4248, .there 360,.type Relativedictionary, .p 4192 },
		{.what Here, .desc "len", .here 4256, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 4257, .there 360,.type Chars, .str "0=" },
		{.what Here, .desc "cfa", .here 4264, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 4272, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 4280, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_equal"},
		{.what Here, .desc "address", .here 4288, .there 360,.type Relativedictionary, .p M_equal },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 4296, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"0<\" 0lt 2"},
		{.what Here, .desc "link",.here 4304, .there 360,.type Relativedictionary, .p 4248 },
		{.what Here, .desc "len", .here 4312, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 4313, .there 360,.type Chars, .str "0<" },
		{.what Here, .desc "cfa", .here 4320, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 4328, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 4336, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_less"},
		{.what Here, .desc "address", .here 4344, .there 360,.type Relativedictionary, .p M_less },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 4352, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"0>\" 0gt 2"},
		{.what Here, .desc "link",.here 4360, .there 360,.type Relativedictionary, .p 4304 },
		{.what Here, .desc "len", .here 4368, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 4369, .there 360,.type Chars, .str "0>" },
		{.what Here, .desc "cfa", .here 4376, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 4384, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 4392, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_greater"},
		{.what Here, .desc "address", .here 4400, .there 360,.type Relativedictionary, .p M_greater },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 4408, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"<>\" neq 2"},
		{.what Here, .desc "link",.here 4416, .there 360,.type Relativedictionary, .p 4360 },
		{.what Here, .desc "len", .here 4424, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 4425, .there 360,.type Chars, .str "<>" },
		{.what Here, .desc "cfa", .here 4432, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_equal"},
		{.what Here, .desc "address", .here 4440, .there 360,.type Relativedictionary, .p M_equal },
	{.what Sourceline, .desc "dd C_invert"},
		{.what Here, .desc "address", .here 4448, .there 360,.type Relativedictionary, .p C_invert },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 4456, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"0<>\" 0neq 3"},
		{.what Here, .desc "link",.here 4464, .there 360,.type Relativedictionary, .p 4416 },
		{.what Here, .desc "len", .here 4472, .there 360,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 4473, .there 360,.type Chars, .str "0<>" },
		{.what Here, .desc "cfa", .here 4480, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 4488, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 4496, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd C_neq"},
		{.what Here, .desc "address", .here 4504, .there 360,.type Relativedictionary, .p C_neq },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 4512, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"max\" max 3"},
		{.what Here, .desc "link",.here 4520, .there 360,.type Relativedictionary, .p 4464 },
		{.what Here, .desc "len", .here 4528, .there 360,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 4529, .there 360,.type Chars, .str "max" },
		{.what Here, .desc "cfa", .here 4536, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_2dup"},
		{.what Here, .desc "address", .here 4544, .there 360,.type Relativedictionary, .p C_2dup },
	{.what Sourceline, .desc "dd M_greater"},
		{.what Here, .desc "address", .here 4552, .there 360,.type Relativedictionary, .p M_greater },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 4560, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_max"},
		{.what Here, .desc "address", .here 4568, .there 360,.type Relativedictionary, .p L_C_max },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 4576, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 4584, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_max_1"},
		{.what Here, .desc "address", .here 4592, .there 360,.type Relativedictionary, .p L_C_max_1 },
	{.what Sourceline, .desc "L_C_max:"},
	{.what Sourceline, .desc "dd C_nip"},
		{.what Here, .desc "address", .here 4600, .there 360,.type Relativedictionary, .p C_nip },
	{.what Sourceline, .desc "L_C_max_1:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 4608, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"min\" min 3"},
		{.what Here, .desc "link",.here 4616, .there 360,.type Relativedictionary, .p 4520 },
		{.what Here, .desc "len", .here 4624, .there 360,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 4625, .there 360,.type Chars, .str "min" },
		{.what Here, .desc "cfa", .here 4632, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_2dup"},
		{.what Here, .desc "address", .here 4640, .there 360,.type Relativedictionary, .p C_2dup },
	{.what Sourceline, .desc "dd M_less"},
		{.what Here, .desc "address", .here 4648, .there 360,.type Relativedictionary, .p M_less },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 4656, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_min"},
		{.what Here, .desc "address", .here 4664, .there 360,.type Relativedictionary, .p L_C_min },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 4672, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 4680, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_min_1"},
		{.what Here, .desc "address", .here 4688, .there 360,.type Relativedictionary, .p L_C_min_1 },
	{.what Sourceline, .desc "L_C_min:"},
	{.what Sourceline, .desc "dd C_nip"},
		{.what Here, .desc "address", .here 4696, .there 360,.type Relativedictionary, .p C_nip },
	{.what Sourceline, .desc "L_C_min_1:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 4704, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"signum\" signum 6"},
		{.what Here, .desc "link",.here 4712, .there 360,.type Relativedictionary, .p 4616 },
		{.what Here, .desc "len", .here 4720, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 4721, .there 360,.type Chars, .str "signum" },
		{.what Here, .desc "cfa", .here 4728, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 4736, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd C_0gt"},
		{.what Here, .desc "address", .here 4744, .there 360,.type Relativedictionary, .p C_0gt },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 4752, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_signum"},
		{.what Here, .desc "address", .here 4760, .there 360,.type Relativedictionary, .p L_C_signum },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 4768, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 4776, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 4784, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 4792, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_signum_1"},
		{.what Here, .desc "address", .here 4800, .there 360,.type Relativedictionary, .p L_C_signum_1 },
	{.what Sourceline, .desc "L_C_signum:"},
	{.what Sourceline, .desc "dd C_0lt"},
		{.what Here, .desc "address", .here 4808, .there 360,.type Relativedictionary, .p C_0lt },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 4816, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_signum_2"},
		{.what Here, .desc "address", .here 4824, .there 360,.type Relativedictionary, .p L_C_signum_2 },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 4832, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1"},
		{.what Here, .desc "value", .here 4840, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 4848, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_signum_3"},
		{.what Here, .desc "address", .here 4856, .there 360,.type Relativedictionary, .p L_C_signum_3 },
	{.what Sourceline, .desc "L_C_signum_2:"},
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 4864, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 4872, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "L_C_signum_3:"},
	{.what Sourceline, .desc "L_C_signum_1:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 4880, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"within\" within 6"},
		{.what Here, .desc "link",.here 4888, .there 360,.type Relativedictionary, .p 4712 },
		{.what Here, .desc "len", .here 4896, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 4897, .there 360,.type Chars, .str "within" },
		{.what Here, .desc "cfa", .here 4904, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_rpush"},
		{.what Here, .desc "address", .here 4912, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_over"},
		{.what Here, .desc "address", .here 4920, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd M_greater"},
		{.what Here, .desc "address", .here 4928, .there 360,.type Relativedictionary, .p M_greater },
	{.what Sourceline, .desc "dd C_0eq"},
		{.what Here, .desc "address", .here 4936, .there 360,.type Relativedictionary, .p C_0eq },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 4944, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 4952, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_greater"},
		{.what Here, .desc "address", .here 4960, .there 360,.type Relativedictionary, .p M_greater },
	{.what Sourceline, .desc "dd C_0eq"},
		{.what Here, .desc "address", .here 4968, .there 360,.type Relativedictionary, .p C_0eq },
	{.what Sourceline, .desc "dd M_binand"},
		{.what Here, .desc "address", .here 4976, .there 360,.type Relativedictionary, .p M_binand },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 4984, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"abs\" abs 3"},
		{.what Here, .desc "link",.here 4992, .there 360,.type Relativedictionary, .p 4888 },
		{.what Here, .desc "len", .here 5000, .there 360,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 5001, .there 360,.type Chars, .str "abs" },
		{.what Here, .desc "cfa", .here 5008, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 5016, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd C_0lt"},
		{.what Here, .desc "address", .here 5024, .there 360,.type Relativedictionary, .p C_0lt },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 5032, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_abs"},
		{.what Here, .desc "address", .here 5040, .there 360,.type Relativedictionary, .p L_C_abs },
	{.what Sourceline, .desc "dd C_negate"},
		{.what Here, .desc "address", .here 5048, .there 360,.type Relativedictionary, .p C_negate },
	{.what Sourceline, .desc "L_C_abs:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 5056, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"emit\" emit 4 ; ( character -- )"},
		{.what Here, .desc "link",.here 5064, .there 360,.type Relativedictionary, .p 4992 },
		{.what Here, .desc "len", .here 5072, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 5073, .there 360,.type Chars, .str "emit" },
		{.what Here, .desc "cfa", .here 5080, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Iobuf		; variable iobuf address"},
		{.what Here, .desc "address", .here 5088, .there 360,.type Relativedictionary, .p MV_Iobuf },
	{.what Sourceline, .desc "dd M_cstore	; variable iobuf has character"},
		{.what Here, .desc "address", .here 5096, .there 360,.type Relativedictionary, .p M_cstore },
	{.what Sourceline, .desc "dd MV_Outfd"},
		{.what Here, .desc "address", .here 5104, .there 360,.type Relativedictionary, .p MV_Outfd },
	{.what Sourceline, .desc "dd M_fetch		; outfd"},
		{.what Here, .desc "address", .here 5112, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd MV_Iobuf		; variable iobuf address"},
		{.what Here, .desc "address", .here 5120, .there 360,.type Relativedictionary, .p MV_Iobuf },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 5128, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1			; ( outfd iobuf 1 )"},
		{.what Here, .desc "value", .here 5136, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd M_syswrite	; ( 1 iobuf outfd --  )"},
		{.what Here, .desc "address", .here 5144, .there 360,.type Relativedictionary, .p M_syswrite },
	{.what Sourceline, .desc "dd M_drop		; drop the return value of write"},
		{.what Here, .desc "address", .here 5152, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 5160, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"type\" type 4 ; ( addr n -- )"},
		{.what Here, .desc "link",.here 5168, .there 360,.type Relativedictionary, .p 5064 },
		{.what Here, .desc "len", .here 5176, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 5177, .there 360,.type Chars, .str "type" },
		{.what Here, .desc "cfa", .here 5184, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_rpush		; ( addr ) (R n )"},
		{.what Here, .desc "address", .here 5192, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_rpush		; ( ) (R n addr )"},
		{.what Here, .desc "address", .here 5200, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd MV_Outfd"},
		{.what Here, .desc "address", .here 5208, .there 360,.type Relativedictionary, .p MV_Outfd },
	{.what Sourceline, .desc "dd M_fetch		; ( outfd )"},
		{.what Here, .desc "address", .here 5216, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_rpop		; ( outfd addr ) (R n )"},
		{.what Here, .desc "address", .here 5224, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_rpop		; ( outfd addr n ) (R )"},
		{.what Here, .desc "address", .here 5232, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_syswrite	; ( 1 addr n --  )"},
		{.what Here, .desc "address", .here 5240, .there 360,.type Relativedictionary, .p M_syswrite },
	{.what Sourceline, .desc "dd M_drop		; drop the return value of write"},
		{.what Here, .desc "address", .here 5248, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 5256, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"cr\" cr 2"},
		{.what Here, .desc "link",.here 5264, .there 360,.type Relativedictionary, .p 5168 },
		{.what Here, .desc "len", .here 5272, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 5273, .there 360,.type Chars, .str "cr" },
		{.what Here, .desc "cfa", .here 5280, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 5288, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 10			; ascii value of carriage return"},
		{.what Here, .desc "value", .here 5296, .there 360,.type Absolute, .p 10 },
	{.what Sourceline, .desc "dd C_emit			; emit"},
		{.what Here, .desc "address", .here 5304, .there 360,.type Relativedictionary, .p C_emit },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 5312, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"space\" space 5"},
		{.what Here, .desc "link",.here 5320, .there 360,.type Relativedictionary, .p 5264 },
		{.what Here, .desc "len", .here 5328, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 5329, .there 360,.type Chars, .str "space" },
		{.what Here, .desc "cfa", .here 5336, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_bl"},
		{.what Here, .desc "address", .here 5344, .there 360,.type Relativedictionary, .p C_bl },
	{.what Sourceline, .desc "dd C_emit"},
		{.what Here, .desc "address", .here 5352, .there 360,.type Relativedictionary, .p C_emit },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 5360, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"emits\" emits 5"},
		{.what Here, .desc "link",.here 5368, .there 360,.type Relativedictionary, .p 5320 },
		{.what Here, .desc "len", .here 5376, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 5377, .there 360,.type Chars, .str "emits" },
		{.what Here, .desc "cfa", .here 5384, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "L_C_emits:"},
	{.what Sourceline, .desc "dd C_qdup"},
		{.what Here, .desc "address", .here 5392, .there 360,.type Relativedictionary, .p C_qdup },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 5400, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_emits_1"},
		{.what Here, .desc "address", .here 5408, .there 360,.type Relativedictionary, .p L_C_emits_1 },
	{.what Sourceline, .desc "dd M_over"},
		{.what Here, .desc "address", .here 5416, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd C_emit"},
		{.what Here, .desc "address", .here 5424, .there 360,.type Relativedictionary, .p C_emit },
	{.what Sourceline, .desc "dd C_1minus"},
		{.what Here, .desc "address", .here 5432, .there 360,.type Relativedictionary, .p C_1minus },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 5440, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_emits"},
		{.what Here, .desc "address", .here 5448, .there 360,.type Relativedictionary, .p L_C_emits },
	{.what Sourceline, .desc "L_C_emits_1:"},
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 5456, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 5464, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"spaces\" spaces 6"},
		{.what Here, .desc "link",.here 5472, .there 360,.type Relativedictionary, .p 5368 },
		{.what Here, .desc "len", .here 5480, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 5481, .there 360,.type Chars, .str "spaces" },
		{.what Here, .desc "cfa", .here 5488, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_bl"},
		{.what Here, .desc "address", .here 5496, .there 360,.type Relativedictionary, .p C_bl },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 5504, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd C_emits"},
		{.what Here, .desc "address", .here 5512, .there 360,.type Relativedictionary, .p C_emits },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 5520, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"count\" count 5 ; ( 'counted-string -- 'text count ) a = address of counted string ( a - a+1 a[0])"},
		{.what Here, .desc "link",.here 5528, .there 360,.type Relativedictionary, .p 5472 },
		{.what Here, .desc "len", .here 5536, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 5537, .there 360,.type Chars, .str "count" },
		{.what Here, .desc "cfa", .here 5544, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_1plus"},
		{.what Here, .desc "address", .here 5552, .there 360,.type Relativedictionary, .p C_1plus },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 5560, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd C_1minus"},
		{.what Here, .desc "address", .here 5568, .there 360,.type Relativedictionary, .p C_1minus },
	{.what Sourceline, .desc "dd M_cfetch"},
		{.what Here, .desc "address", .here 5576, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 5584, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "dd C_2dup ; debug show the word name to search"},
		{.what Here, .desc "address", .here 5592, .there 360,.type Relativedictionary, .p C_2dup },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 5600, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd C_space"},
		{.what Here, .desc "address", .here 5608, .there 360,.type Relativedictionary, .p C_space },
	{.what Sourceline, .desc "dd M_rpush ; debug show the dictionary entry"},
		{.what Here, .desc "address", .here 5616, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_rpush"},
		{.what Here, .desc "address", .here 5624, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd C_2dup"},
		{.what Here, .desc "address", .here 5632, .there 360,.type Relativedictionary, .p C_2dup },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 5640, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 5648, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 5656, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd C_cr"},
		{.what Here, .desc "address", .here 5664, .there 360,.type Relativedictionary, .p C_cr },
	{.what Sourceline, .desc "CENTRY \"compare\" compare 7 ; ( a1 n1 a2 n2 -- f ) a1 = dictionary entry a2 = word name to search"},
		{.what Here, .desc "link",.here 5672, .there 360,.type Relativedictionary, .p 5528 },
		{.what Here, .desc "len", .here 5680, .there 360,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 5681, .there 360,.type Chars, .str "compare" },
		{.what Here, .desc "cfa", .here 5688, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_rot	; ( a1 n1 a2 n2 -- a1 a2 n2 n1 )"},
		{.what Here, .desc "address", .here 5696, .there 360,.type Relativedictionary, .p C_rot },
	{.what Sourceline, .desc "dd C_2dup	; ( -- a1 a2 n2 n1 n2 n1 )"},
		{.what Here, .desc "address", .here 5704, .there 360,.type Relativedictionary, .p C_2dup },
	{.what Sourceline, .desc "dd M_rpush	; ( -- a1 a2 n2 n1 n2 ) (R n1 -- )"},
		{.what Here, .desc "address", .here 5712, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_rpush	; ( -- a1 a2 n2 n1 ) (R n1 n2 -- )"},
		{.what Here, .desc "address", .here 5720, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd C_min	; ( -- a1 a2 nmin ) (R n1 n2 -- )"},
		{.what Here, .desc "address", .here 5728, .there 360,.type Relativedictionary, .p C_min },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 5736, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0		; ( -- a1 a2 nmin 0 ) (R n1 n2 -- )"},
		{.what Here, .desc "value", .here 5744, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_doinit	; ( -- a1 a2 ) (R n1 n2 0 nmin -- )"},
		{.what Here, .desc "address", .here 5752, .there 360,.type Relativedictionary, .p M_doinit },
	{.what Sourceline, .desc "L_C_compare:"},
	{.what Sourceline, .desc "dd M_over"},
		{.what Here, .desc "address", .here 5760, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd M_i"},
		{.what Here, .desc "address", .here 5768, .there 360,.type Relativedictionary, .p M_i },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 5776, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_cfetch"},
		{.what Here, .desc "address", .here 5784, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd M_over"},
		{.what Here, .desc "address", .here 5792, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd M_i"},
		{.what Here, .desc "address", .here 5800, .there 360,.type Relativedictionary, .p M_i },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 5808, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_cfetch"},
		{.what Here, .desc "address", .here 5816, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd M_minus"},
		{.what Here, .desc "address", .here 5824, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd C_signum"},
		{.what Here, .desc "address", .here 5832, .there 360,.type Relativedictionary, .p C_signum },
	{.what Sourceline, .desc "dd C_qdup"},
		{.what Here, .desc "address", .here 5840, .there 360,.type Relativedictionary, .p C_qdup },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 5848, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_compare_1		; matches"},
		{.what Here, .desc "address", .here 5856, .there 360,.type Relativedictionary, .p L_C_compare_1 },
	{.what Sourceline, .desc "dd C_2nip	; does not match ( a1 a2 f -- f ) (R n1 n2 0 nmin -- )"},
		{.what Here, .desc "address", .here 5864, .there 360,.type Relativedictionary, .p C_2nip },
	{.what Sourceline, .desc "dd M_unloop	; ( f -- f ) (R n1 n2 0 nmin -- n1 n2)"},
		{.what Here, .desc "address", .here 5872, .there 360,.type Relativedictionary, .p M_unloop },
	{.what Sourceline, .desc "dd M_unloop	; ( f -- f ) (R n1 n2 -- )"},
		{.what Here, .desc "address", .here 5880, .there 360,.type Relativedictionary, .p M_unloop },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 5888, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "L_C_compare_1:"},
	{.what Sourceline, .desc "dd M_doloop"},
		{.what Here, .desc "address", .here 5896, .there 360,.type Relativedictionary, .p M_doloop },
	{.what Sourceline, .desc "dd L_C_compare"},
		{.what Here, .desc "address", .here 5904, .there 360,.type Relativedictionary, .p L_C_compare },
	{.what Sourceline, .desc "dd C_2drop	; ( a1 a2 -- ) (R n1 n2 -- )"},
		{.what Here, .desc "address", .here 5912, .there 360,.type Relativedictionary, .p C_2drop },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 5920, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_rpop	; ( n2 n1 -- ) (R -- )"},
		{.what Here, .desc "address", .here 5928, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_minus	; ( -- n1-n2 )"},
		{.what Here, .desc "address", .here 5936, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd C_signum"},
		{.what Here, .desc "address", .here 5944, .there 360,.type Relativedictionary, .p C_signum },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 5952, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"erase\" erase 5"},
		{.what Here, .desc "link",.here 5960, .there 360,.type Relativedictionary, .p 5672 },
		{.what Here, .desc "len", .here 5968, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 5969, .there 360,.type Chars, .str "erase" },
		{.what Here, .desc "cfa", .here 5976, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 5984, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 5992, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_doinit"},
		{.what Here, .desc "address", .here 6000, .there 360,.type Relativedictionary, .p M_doinit },
	{.what Sourceline, .desc "L_C_erase:"},
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 6008, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 6016, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_over"},
		{.what Here, .desc "address", .here 6024, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd M_cstore"},
		{.what Here, .desc "address", .here 6032, .there 360,.type Relativedictionary, .p M_cstore },
	{.what Sourceline, .desc "dd C_1plus"},
		{.what Here, .desc "address", .here 6040, .there 360,.type Relativedictionary, .p C_1plus },
	{.what Sourceline, .desc "dd M_doloop"},
		{.what Here, .desc "address", .here 6048, .there 360,.type Relativedictionary, .p M_doloop },
	{.what Sourceline, .desc "dd L_C_erase"},
		{.what Here, .desc "address", .here 6056, .there 360,.type Relativedictionary, .p L_C_erase },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 6064, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 6072, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"fill\" fill 4"},
		{.what Here, .desc "link",.here 6080, .there 360,.type Relativedictionary, .p 5960 },
		{.what Here, .desc "len", .here 6088, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 6089, .there 360,.type Chars, .str "fill" },
		{.what Here, .desc "cfa", .here 6096, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 6104, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 6112, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 6120, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_doinit"},
		{.what Here, .desc "address", .here 6128, .there 360,.type Relativedictionary, .p M_doinit },
	{.what Sourceline, .desc "L_C_fill:"},
	{.what Sourceline, .desc "dd C_2dup"},
		{.what Here, .desc "address", .here 6136, .there 360,.type Relativedictionary, .p C_2dup },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 6144, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_i"},
		{.what Here, .desc "address", .here 6152, .there 360,.type Relativedictionary, .p M_i },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 6160, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_cstore"},
		{.what Here, .desc "address", .here 6168, .there 360,.type Relativedictionary, .p M_cstore },
	{.what Sourceline, .desc "dd M_doloop"},
		{.what Here, .desc "address", .here 6176, .there 360,.type Relativedictionary, .p M_doloop },
	{.what Sourceline, .desc "dd L_C_fill"},
		{.what Here, .desc "address", .here 6184, .there 360,.type Relativedictionary, .p L_C_fill },
	{.what Sourceline, .desc "dd C_2drop"},
		{.what Here, .desc "address", .here 6192, .there 360,.type Relativedictionary, .p C_2drop },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 6200, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"blank\" blank 5"},
		{.what Here, .desc "link",.here 6208, .there 360,.type Relativedictionary, .p 6080 },
		{.what Here, .desc "len", .here 6216, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 6217, .there 360,.type Chars, .str "blank" },
		{.what Here, .desc "cfa", .here 6224, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_bl"},
		{.what Here, .desc "address", .here 6232, .there 360,.type Relativedictionary, .p C_bl },
	{.what Sourceline, .desc "dd C_fill"},
		{.what Here, .desc "address", .here 6240, .there 360,.type Relativedictionary, .p C_fill },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 6248, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"search\" search 6"},
		{.what Here, .desc "link",.here 6256, .there 360,.type Relativedictionary, .p 6208 },
		{.what Here, .desc "len", .here 6264, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 6265, .there 360,.type Chars, .str "search" },
		{.what Here, .desc "cfa", .here 6272, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Searchlen"},
		{.what Here, .desc "address", .here 6280, .there 360,.type Relativedictionary, .p MV_Searchlen },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 6288, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 6296, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 6304, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_rpush"},
		{.what Here, .desc "address", .here 6312, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd MV_Searchlen"},
		{.what Here, .desc "address", .here 6320, .there 360,.type Relativedictionary, .p MV_Searchlen },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 6328, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_minus"},
		{.what Here, .desc "address", .here 6336, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd C_1plus"},
		{.what Here, .desc "address", .here 6344, .there 360,.type Relativedictionary, .p C_1plus },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 6352, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 6360, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_doinit"},
		{.what Here, .desc "address", .here 6368, .there 360,.type Relativedictionary, .p M_doinit },
	{.what Sourceline, .desc "L_C_search:"},
	{.what Sourceline, .desc "dd M_over"},
		{.what Here, .desc "address", .here 6376, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd M_i"},
		{.what Here, .desc "address", .here 6384, .there 360,.type Relativedictionary, .p M_i },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 6392, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_over"},
		{.what Here, .desc "address", .here 6400, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd MV_Searchlen"},
		{.what Here, .desc "address", .here 6408, .there 360,.type Relativedictionary, .p MV_Searchlen },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 6416, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 6424, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd MV_Searchlen"},
		{.what Here, .desc "address", .here 6432, .there 360,.type Relativedictionary, .p MV_Searchlen },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 6440, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_compare"},
		{.what Here, .desc "address", .here 6448, .there 360,.type Relativedictionary, .p C_compare },
	{.what Sourceline, .desc "dd C_0eq"},
		{.what Here, .desc "address", .here 6456, .there 360,.type Relativedictionary, .p C_0eq },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 6464, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_search_1"},
		{.what Here, .desc "address", .here 6472, .there 360,.type Relativedictionary, .p L_C_search_1 },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 6480, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_i"},
		{.what Here, .desc "address", .here 6488, .there 360,.type Relativedictionary, .p M_i },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 6496, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_i"},
		{.what Here, .desc "address", .here 6504, .there 360,.type Relativedictionary, .p M_i },
	{.what Sourceline, .desc "dd M_unloop"},
		{.what Here, .desc "address", .here 6512, .there 360,.type Relativedictionary, .p M_unloop },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 6520, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 6528, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_minus"},
		{.what Here, .desc "address", .here 6536, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd C_true"},
		{.what Here, .desc "address", .here 6544, .there 360,.type Relativedictionary, .p C_true },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 6552, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "L_C_search_1:"},
	{.what Sourceline, .desc "dd M_doloop"},
		{.what Here, .desc "address", .here 6560, .there 360,.type Relativedictionary, .p M_doloop },
	{.what Sourceline, .desc "dd L_C_search"},
		{.what Here, .desc "address", .here 6568, .there 360,.type Relativedictionary, .p L_C_search },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 6576, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 6584, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd C_false"},
		{.what Here, .desc "address", .here 6592, .there 360,.type Relativedictionary, .p C_false },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 6600, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"here\" here 4"},
		{.what Here, .desc "link",.here 6608, .there 360,.type Relativedictionary, .p 6256 },
		{.what Here, .desc "len", .here 6616, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 6617, .there 360,.type Chars, .str "here" },
		{.what Here, .desc "cfa", .here 6624, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Dp		; the address on the top of stack is 0x583288, which is correct"},
		{.what Here, .desc "address", .here 6632, .there 360,.type Relativedictionary, .p MV_Dp },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 6640, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 6648, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"there\" there 5 ; variable here"},
		{.what Here, .desc "link",.here 6656, .there 360,.type Relativedictionary, .p 6608 },
		{.what Here, .desc "len", .here 6664, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 6665, .there 360,.type Chars, .str "there" },
		{.what Here, .desc "cfa", .here 6672, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Vp"},
		{.what Here, .desc "address", .here 6680, .there 360,.type Relativedictionary, .p MV_Vp },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 6688, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 6696, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \",\" comma 1"},
		{.what Here, .desc "link",.here 6704, .there 360,.type Relativedictionary, .p 6656 },
		{.what Here, .desc "len", .here 6712, .there 360,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 6713, .there 360,.type Chars, .str "," },
		{.what Here, .desc "cfa", .here 6720, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_here"},
		{.what Here, .desc "address", .here 6728, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 6736, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 6744, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 8"},
		{.what Here, .desc "value", .here 6752, .there 360,.type Absolute, .p 8 },
	{.what Sourceline, .desc "dd MV_Dp"},
		{.what Here, .desc "address", .here 6760, .there 360,.type Relativedictionary, .p MV_Dp },
	{.what Sourceline, .desc "dd C_plusstore"},
		{.what Here, .desc "address", .here 6768, .there 360,.type Relativedictionary, .p C_plusstore },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 6776, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"c,\" c 2"},
		{.what Here, .desc "link",.here 6784, .there 360,.type Relativedictionary, .p 6704 },
		{.what Here, .desc "len", .here 6792, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 6793, .there 360,.type Chars, .str "c," },
		{.what Here, .desc "cfa", .here 6800, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_here"},
		{.what Here, .desc "address", .here 6808, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_cstore"},
		{.what Here, .desc "address", .here 6816, .there 360,.type Relativedictionary, .p M_cstore },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 6824, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 6832, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd MV_Dp"},
		{.what Here, .desc "address", .here 6840, .there 360,.type Relativedictionary, .p MV_Dp },
	{.what Sourceline, .desc "dd C_plusstore"},
		{.what Here, .desc "address", .here 6848, .there 360,.type Relativedictionary, .p C_plusstore },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 6856, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"allot\" allot 5 ; ( n -- ) here = here+n"},
		{.what Here, .desc "link",.here 6864, .there 360,.type Relativedictionary, .p 6784 },
		{.what Here, .desc "len", .here 6872, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 6873, .there 360,.type Chars, .str "allot" },
		{.what Here, .desc "cfa", .here 6880, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Dp"},
		{.what Here, .desc "address", .here 6888, .there 360,.type Relativedictionary, .p MV_Dp },
	{.what Sourceline, .desc "dd C_plusstore"},
		{.what Here, .desc "address", .here 6896, .there 360,.type Relativedictionary, .p C_plusstore },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 6904, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"vallot\" vallot 6 ; allot on the variable space ( n -- ) there = there+n"},
		{.what Here, .desc "link",.here 6912, .there 360,.type Relativedictionary, .p 6864 },
		{.what Here, .desc "len", .here 6920, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 6921, .there 360,.type Chars, .str "vallot" },
		{.what Here, .desc "cfa", .here 6928, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Vp"},
		{.what Here, .desc "address", .here 6936, .there 360,.type Relativedictionary, .p MV_Vp },
	{.what Sourceline, .desc "dd C_plusstore"},
		{.what Here, .desc "address", .here 6944, .there 360,.type Relativedictionary, .p C_plusstore },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 6952, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"pad\" pad 3"},
		{.what Here, .desc "link",.here 6960, .there 360,.type Relativedictionary, .p 6912 },
		{.what Here, .desc "len", .here 6968, .there 360,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 6969, .there 360,.type Chars, .str "pad" },
		{.what Here, .desc "cfa", .here 6976, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_here"},
		{.what Here, .desc "address", .here 6984, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 6992, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 256"},
		{.what Here, .desc "value", .here 7000, .there 360,.type Absolute, .p 256 },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 7008, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 7016, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"align\" align 5 ; ( -- ) align here to a cell boundary"},
		{.what Here, .desc "link",.here 7024, .there 360,.type Relativedictionary, .p 6960 },
		{.what Here, .desc "len", .here 7032, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 7033, .there 360,.type Chars, .str "align" },
		{.what Here, .desc "cfa", .here 7040, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_here		; Dp @"},
		{.what Here, .desc "address", .here 7048, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd C_aligned	; here is aligned to a multiple of 8"},
		{.what Here, .desc "address", .here 7056, .there 360,.type Relativedictionary, .p C_aligned },
	{.what Sourceline, .desc "dd MV_Dp			; store the aligned here at Dp"},
		{.what Here, .desc "address", .here 7064, .there 360,.type Relativedictionary, .p MV_Dp },
	{.what Sourceline, .desc "dd M_store		; Dp contains aligned_here"},
		{.what Here, .desc "address", .here 7072, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 7080, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"unused\" unused 6"},
		{.what Here, .desc "link",.here 7088, .there 360,.type Relativedictionary, .p 7024 },
		{.what Here, .desc "len", .here 7096, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 7097, .there 360,.type Chars, .str "unused" },
		{.what Here, .desc "cfa", .here 7104, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Dp"},
		{.what Here, .desc "address", .here 7112, .there 360,.type Relativedictionary, .p MV_Dp },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 7120, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_here"},
		{.what Here, .desc "address", .here 7128, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_minus"},
		{.what Here, .desc "address", .here 7136, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 7144, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"<#\" fromhash 2"},
		{.what Here, .desc "link",.here 7152, .there 360,.type Relativedictionary, .p 7088 },
		{.what Here, .desc "len", .here 7160, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 7161, .there 360,.type Chars, .str "<#" },
		{.what Here, .desc "cfa", .here 7168, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_pad"},
		{.what Here, .desc "address", .here 7176, .there 360,.type Relativedictionary, .p C_pad },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 7184, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1024"},
		{.what Here, .desc "value", .here 7192, .there 360,.type Absolute, .p 1024 },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 7200, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd MV_toNum"},
		{.what Here, .desc "address", .here 7208, .there 360,.type Relativedictionary, .p MV_toNum },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 7216, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 7224, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"#\" hash 1"},
		{.what Here, .desc "link",.here 7232, .there 360,.type Relativedictionary, .p 7152 },
		{.what Here, .desc "len", .here 7240, .there 360,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 7241, .there 360,.type Chars, .str "#" },
		{.what Here, .desc "cfa", .here 7248, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Base"},
		{.what Here, .desc "address", .here 7256, .there 360,.type Relativedictionary, .p MV_Base },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 7264, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_uslashmod"},
		{.what Here, .desc "address", .here 7272, .there 360,.type Relativedictionary, .p M_uslashmod },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 7280, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 7288, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 7296, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 9"},
		{.what Here, .desc "value", .here 7304, .there 360,.type Absolute, .p 9 },
	{.what Sourceline, .desc "dd M_greater"},
		{.what Here, .desc "address", .here 7312, .there 360,.type Relativedictionary, .p M_greater },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 7320, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_hash"},
		{.what Here, .desc "address", .here 7328, .there 360,.type Relativedictionary, .p L_C_hash },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 7336, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 97"},
		{.what Here, .desc "value", .here 7344, .there 360,.type Absolute, .p 97 },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 7352, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 7360, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 10"},
		{.what Here, .desc "value", .here 7368, .there 360,.type Absolute, .p 10 },
	{.what Sourceline, .desc "dd M_minus"},
		{.what Here, .desc "address", .here 7376, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 7384, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_hash_1"},
		{.what Here, .desc "address", .here 7392, .there 360,.type Relativedictionary, .p L_C_hash_1 },
	{.what Sourceline, .desc "L_C_hash:"},
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 7400, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 48"},
		{.what Here, .desc "value", .here 7408, .there 360,.type Absolute, .p 48 },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 7416, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "L_C_hash_1:"},
	{.what Sourceline, .desc "dd MV_toNum"},
		{.what Here, .desc "address", .here 7424, .there 360,.type Relativedictionary, .p MV_toNum },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 7432, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_1minus"},
		{.what Here, .desc "address", .here 7440, .there 360,.type Relativedictionary, .p C_1minus },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 7448, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd MV_toNum"},
		{.what Here, .desc "address", .here 7456, .there 360,.type Relativedictionary, .p MV_toNum },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 7464, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_cstore"},
		{.what Here, .desc "address", .here 7472, .there 360,.type Relativedictionary, .p M_cstore },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 7480, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"#s\" hashs 2"},
		{.what Here, .desc "link",.here 7488, .there 360,.type Relativedictionary, .p 7232 },
		{.what Here, .desc "len", .here 7496, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 7497, .there 360,.type Chars, .str "#s" },
		{.what Here, .desc "cfa", .here 7504, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "L_C_hashs:"},
	{.what Sourceline, .desc "dd C_hash"},
		{.what Here, .desc "address", .here 7512, .there 360,.type Relativedictionary, .p C_hash },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 7520, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 7528, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_hashs_1"},
		{.what Here, .desc "address", .here 7536, .there 360,.type Relativedictionary, .p L_C_hashs_1 },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 7544, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_hashs"},
		{.what Here, .desc "address", .here 7552, .there 360,.type Relativedictionary, .p L_C_hashs },
	{.what Sourceline, .desc "L_C_hashs_1:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 7560, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"#>\" hashfrom 2"},
		{.what Here, .desc "link",.here 7568, .there 360,.type Relativedictionary, .p 7488 },
		{.what Here, .desc "len", .here 7576, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 7577, .there 360,.type Chars, .str "#>" },
		{.what Here, .desc "cfa", .here 7584, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 7592, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd MV_toNum"},
		{.what Here, .desc "address", .here 7600, .there 360,.type Relativedictionary, .p MV_toNum },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 7608, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 7616, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd C_pad"},
		{.what Here, .desc "address", .here 7624, .there 360,.type Relativedictionary, .p C_pad },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 7632, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1024"},
		{.what Here, .desc "value", .here 7640, .there 360,.type Absolute, .p 1024 },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 7648, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 7656, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_minus"},
		{.what Here, .desc "address", .here 7664, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 7672, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"hold\" hold 4"},
		{.what Here, .desc "link",.here 7680, .there 360,.type Relativedictionary, .p 7568 },
		{.what Here, .desc "len", .here 7688, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 7689, .there 360,.type Chars, .str "hold" },
		{.what Here, .desc "cfa", .here 7696, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_toNum"},
		{.what Here, .desc "address", .here 7704, .there 360,.type Relativedictionary, .p MV_toNum },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 7712, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_1minus"},
		{.what Here, .desc "address", .here 7720, .there 360,.type Relativedictionary, .p C_1minus },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 7728, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_rpush"},
		{.what Here, .desc "address", .here 7736, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_cstore"},
		{.what Here, .desc "address", .here 7744, .there 360,.type Relativedictionary, .p M_cstore },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 7752, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd MV_toNum"},
		{.what Here, .desc "address", .here 7760, .there 360,.type Relativedictionary, .p MV_toNum },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 7768, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 7776, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"sign\" sign 4"},
		{.what Here, .desc "link",.here 7784, .there 360,.type Relativedictionary, .p 7680 },
		{.what Here, .desc "len", .here 7792, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 7793, .there 360,.type Chars, .str "sign" },
		{.what Here, .desc "cfa", .here 7800, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_0lt"},
		{.what Here, .desc "address", .here 7808, .there 360,.type Relativedictionary, .p C_0lt },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 7816, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_sign"},
		{.what Here, .desc "address", .here 7824, .there 360,.type Relativedictionary, .p L_C_sign },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 7832, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 45"},
		{.what Here, .desc "value", .here 7840, .there 360,.type Absolute, .p 45 },
	{.what Sourceline, .desc "dd C_hold"},
		{.what Here, .desc "address", .here 7848, .there 360,.type Relativedictionary, .p C_hold },
	{.what Sourceline, .desc "L_C_sign:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 7856, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"c(.)\" counted_paren_dot_paren 4 ; convert the top of stack to a counted string ( n1 -- 'cs )"},
		{.what Here, .desc "link",.here 7864, .there 360,.type Relativedictionary, .p 7784 },
		{.what Here, .desc "len", .here 7872, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 7873, .there 360,.type Chars, .str "c(.)" },
		{.what Here, .desc "cfa", .here 7880, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_paren_dot_paren ; ( 'text n2 )"},
		{.what Here, .desc "address", .here 7888, .there 360,.type Relativedictionary, .p C_paren_dot_paren },
	{.what Sourceline, .desc "dd M_xswap		; ( n2 'text )"},
		{.what Here, .desc "address", .here 7896, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 7904, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 7912, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd M_minus		; ( n2 'text-1 )"},
		{.what Here, .desc "address", .here 7920, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 7928, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_over		; ( 'text-1 n2 'text-1 )"},
		{.what Here, .desc "address", .here 7936, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd M_cstore		; ( 'text-1 )"},
		{.what Here, .desc "address", .here 7944, .there 360,.type Relativedictionary, .p M_cstore },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 7952, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"(.)\" paren_dot_paren 3 ; convert the top of stack to a string ( n1 -- 'text n2 )"},
		{.what Here, .desc "link",.here 7960, .there 360,.type Relativedictionary, .p 7864 },
		{.what Here, .desc "len", .here 7968, .there 360,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 7969, .there 360,.type Chars, .str "(.)" },
		{.what Here, .desc "cfa", .here 7976, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_dup		; ( n -- n n )"},
		{.what Here, .desc "address", .here 7984, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd C_abs		; ( n n -- n u )"},
		{.what Here, .desc "address", .here 7992, .there 360,.type Relativedictionary, .p C_abs },
	{.what Sourceline, .desc "dd C_fromhash	; pad = h+256; >num = pad+1024"},
		{.what Here, .desc "address", .here 8000, .there 360,.type Relativedictionary, .p C_fromhash },
	{.what Sourceline, .desc "dd C_hashs		; ( n u1 -- n n2 )"},
		{.what Here, .desc "address", .here 8008, .there 360,.type Relativedictionary, .p C_hashs },
	{.what Sourceline, .desc "dd M_xswap		; ( n n2 -- n2 n )"},
		{.what Here, .desc "address", .here 8016, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd C_sign		; ( n2 n -- n2 )"},
		{.what Here, .desc "address", .here 8024, .there 360,.type Relativedictionary, .p C_sign },
	{.what Sourceline, .desc "dd C_hashfrom	; ( u1 -- a n )"},
		{.what Here, .desc "address", .here 8032, .there 360,.type Relativedictionary, .p C_hashfrom },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 8040, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \".\" dot 1 ; print the top of stack ( n -- )"},
		{.what Here, .desc "link",.here 8048, .there 360,.type Relativedictionary, .p 7960 },
		{.what Here, .desc "len", .here 8056, .there 360,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 8057, .there 360,.type Chars, .str "." },
		{.what Here, .desc "cfa", .here 8064, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_paren_dot_paren ; ( n1 -- 'text n2 )"},
		{.what Here, .desc "address", .here 8072, .there 360,.type Relativedictionary, .p C_paren_dot_paren },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 8080, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd C_space"},
		{.what Here, .desc "address", .here 8088, .there 360,.type Relativedictionary, .p C_space },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 8096, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \".r\" dotr 2"},
		{.what Here, .desc "link",.here 8104, .there 360,.type Relativedictionary, .p 8048 },
		{.what Here, .desc "len", .here 8112, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 8113, .there 360,.type Chars, .str ".r" },
		{.what Here, .desc "cfa", .here 8120, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_rpush"},
		{.what Here, .desc "address", .here 8128, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 8136, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd C_abs"},
		{.what Here, .desc "address", .here 8144, .there 360,.type Relativedictionary, .p C_abs },
	{.what Sourceline, .desc "dd C_fromhash"},
		{.what Here, .desc "address", .here 8152, .there 360,.type Relativedictionary, .p C_fromhash },
	{.what Sourceline, .desc "dd C_hashs"},
		{.what Here, .desc "address", .here 8160, .there 360,.type Relativedictionary, .p C_hashs },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 8168, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd C_sign"},
		{.what Here, .desc "address", .here 8176, .there 360,.type Relativedictionary, .p C_sign },
	{.what Sourceline, .desc "dd C_hashfrom"},
		{.what Here, .desc "address", .here 8184, .there 360,.type Relativedictionary, .p C_hashfrom },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 8192, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_over"},
		{.what Here, .desc "address", .here 8200, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd M_minus"},
		{.what Here, .desc "address", .here 8208, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 8216, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 8224, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd C_max"},
		{.what Here, .desc "address", .here 8232, .there 360,.type Relativedictionary, .p C_max },
	{.what Sourceline, .desc "dd C_spaces"},
		{.what Here, .desc "address", .here 8240, .there 360,.type Relativedictionary, .p C_spaces },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 8248, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 8256, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"hex\" hex 3"},
		{.what Here, .desc "link",.here 8264, .there 360,.type Relativedictionary, .p 8104 },
		{.what Here, .desc "len", .here 8272, .there 360,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 8273, .there 360,.type Chars, .str "hex" },
		{.what Here, .desc "cfa", .here 8280, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 8288, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 16"},
		{.what Here, .desc "value", .here 8296, .there 360,.type Absolute, .p 16 },
	{.what Sourceline, .desc "dd MV_Base"},
		{.what Here, .desc "address", .here 8304, .there 360,.type Relativedictionary, .p MV_Base },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 8312, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 8320, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"decimal\" decimal 7"},
		{.what Here, .desc "link",.here 8328, .there 360,.type Relativedictionary, .p 8264 },
		{.what Here, .desc "len", .here 8336, .there 360,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 8337, .there 360,.type Chars, .str "decimal" },
		{.what Here, .desc "cfa", .here 8344, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 8352, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 10"},
		{.what Here, .desc "value", .here 8360, .there 360,.type Absolute, .p 10 },
	{.what Sourceline, .desc "dd MV_Base"},
		{.what Here, .desc "address", .here 8368, .there 360,.type Relativedictionary, .p MV_Base },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 8376, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 8384, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"digit\" digit 5 ; ( c -- )"},
		{.what Here, .desc "link",.here 8392, .there 360,.type Relativedictionary, .p 8328 },
		{.what Here, .desc "len", .here 8400, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 8401, .there 360,.type Chars, .str "digit" },
		{.what Here, .desc "cfa", .here 8408, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 8416, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 8424, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 65"},
		{.what Here, .desc "value", .here 8432, .there 360,.type Absolute, .p 65 },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 8440, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 91"},
		{.what Here, .desc "value", .here 8448, .there 360,.type Absolute, .p 91 },
	{.what Sourceline, .desc "dd C_within"},
		{.what Here, .desc "address", .here 8456, .there 360,.type Relativedictionary, .p C_within },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 8464, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_digit"},
		{.what Here, .desc "address", .here 8472, .there 360,.type Relativedictionary, .p L_C_digit },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 8480, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 55"},
		{.what Here, .desc "value", .here 8488, .there 360,.type Absolute, .p 55 },
	{.what Sourceline, .desc "dd M_minus"},
		{.what Here, .desc "address", .here 8496, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 8504, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_digit_1"},
		{.what Here, .desc "address", .here 8512, .there 360,.type Relativedictionary, .p L_C_digit_1 },
	{.what Sourceline, .desc "L_C_digit:"},
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 8520, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 8528, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 97"},
		{.what Here, .desc "value", .here 8536, .there 360,.type Absolute, .p 97 },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 8544, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 123"},
		{.what Here, .desc "value", .here 8552, .there 360,.type Absolute, .p 123 },
	{.what Sourceline, .desc "dd C_within"},
		{.what Here, .desc "address", .here 8560, .there 360,.type Relativedictionary, .p C_within },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 8568, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_digit_2"},
		{.what Here, .desc "address", .here 8576, .there 360,.type Relativedictionary, .p L_C_digit_2 },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 8584, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 87"},
		{.what Here, .desc "value", .here 8592, .there 360,.type Absolute, .p 87 },
	{.what Sourceline, .desc "dd M_minus"},
		{.what Here, .desc "address", .here 8600, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 8608, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_digit_3"},
		{.what Here, .desc "address", .here 8616, .there 360,.type Relativedictionary, .p L_C_digit_3 },
	{.what Sourceline, .desc "L_C_digit_2:"},
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 8624, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 8632, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 48"},
		{.what Here, .desc "value", .here 8640, .there 360,.type Absolute, .p 48 },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 8648, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 58"},
		{.what Here, .desc "value", .here 8656, .there 360,.type Absolute, .p 58 },
	{.what Sourceline, .desc "dd C_within"},
		{.what Here, .desc "address", .here 8664, .there 360,.type Relativedictionary, .p C_within },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 8672, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_digit_4"},
		{.what Here, .desc "address", .here 8680, .there 360,.type Relativedictionary, .p L_C_digit_4 },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 8688, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 48"},
		{.what Here, .desc "value", .here 8696, .there 360,.type Absolute, .p 48 },
	{.what Sourceline, .desc "dd M_minus"},
		{.what Here, .desc "address", .here 8704, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 8712, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_digit_5"},
		{.what Here, .desc "address", .here 8720, .there 360,.type Relativedictionary, .p L_C_digit_5 },
	{.what Sourceline, .desc "L_C_digit_4:"},
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 8728, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd C_false"},
		{.what Here, .desc "address", .here 8736, .there 360,.type Relativedictionary, .p C_false },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 8744, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "L_C_digit_5:"},
	{.what Sourceline, .desc "L_C_digit_3:"},
	{.what Sourceline, .desc "L_C_digit_1:"},
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 8752, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd MV_Base"},
		{.what Here, .desc "address", .here 8760, .there 360,.type Relativedictionary, .p MV_Base },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 8768, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_less"},
		{.what Here, .desc "address", .here 8776, .there 360,.type Relativedictionary, .p M_less },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 8784, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_digit_6"},
		{.what Here, .desc "address", .here 8792, .there 360,.type Relativedictionary, .p L_C_digit_6 },
	{.what Sourceline, .desc "dd C_true"},
		{.what Here, .desc "address", .here 8800, .there 360,.type Relativedictionary, .p C_true },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 8808, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_digit_7"},
		{.what Here, .desc "address", .here 8816, .there 360,.type Relativedictionary, .p L_C_digit_7 },
	{.what Sourceline, .desc "L_C_digit_6:"},
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 8824, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd C_false"},
		{.what Here, .desc "address", .here 8832, .there 360,.type Relativedictionary, .p C_false },
	{.what Sourceline, .desc "L_C_digit_7:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 8840, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"number\" number 6 ; ( a n1 -- n2 -1 | a n1 0 )"},
		{.what Here, .desc "link",.here 8848, .there 360,.type Relativedictionary, .p 8392 },
		{.what Here, .desc "len", .here 8856, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 8857, .there 360,.type Chars, .str "number" },
		{.what Here, .desc "cfa", .here 8864, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_xswap	; ( a n1 -- n1 a )"},
		{.what Here, .desc "address", .here 8872, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_dup	; ( n1 a -- n1 a a )"},
		{.what Here, .desc "address", .here 8880, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_cfetch	; ( n1 a a -- n1 a c )"},
		{.what Here, .desc "address", .here 8888, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 8896, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 45		; ( n1 a c -- n1 a c - )"},
		{.what Here, .desc "value", .here 8904, .there 360,.type Absolute, .p 45 },
	{.what Sourceline, .desc "dd M_equal	; ( n1 a c -- n1 a f )"},
		{.what Here, .desc "address", .here 8912, .there 360,.type Relativedictionary, .p M_equal },
	{.what Sourceline, .desc "dd M_cjump	; ( n1 a c -- n1 a )"},
		{.what Here, .desc "address", .here 8920, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_number		; c != -"},
		{.what Here, .desc "address", .here 8928, .there 360,.type Relativedictionary, .p L_C_number },
	{.what Sourceline, .desc "dd C_1plus	; c == - ( n1 a -- n1 a+1 )"},
		{.what Here, .desc "address", .here 8936, .there 360,.type Relativedictionary, .p C_1plus },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 8944, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd C_1minus	; c == - ( a+1 n1 -- a+1 n1-1 )"},
		{.what Here, .desc "address", .here 8952, .there 360,.type Relativedictionary, .p C_1minus },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 8960, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1		; ( a+1 n1-1 -- a+1 n1-1 -1 )"},
		{.what Here, .desc "value", .here 8968, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "dd M_rpush	; ( a+1 n1-1 -- a+1 n1-1 ) (R -- -1)"},
		{.what Here, .desc "address", .here 8976, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 8984, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_number_1"},
		{.what Here, .desc "address", .here 8992, .there 360,.type Relativedictionary, .p L_C_number_1 },
	{.what Sourceline, .desc "L_C_number:		; c != -"},
	{.what Sourceline, .desc "dd M_xswap	; ( n1 a -- a n1)"},
		{.what Here, .desc "address", .here 9000, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 9008, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 9016, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd M_rpush	; ( a n1 1 -- a n1 ) (R -- 1)"},
		{.what Here, .desc "address", .here 9024, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "L_C_number_1:		; ( a n1 ) (R nr)"},
	{.what Sourceline, .desc "dd M_dup	; ( a n1 -- a n1 n1 ) (R nr)"},
		{.what Here, .desc "address", .here 9032, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_rpush	; ( a n1 n1 -- a n1 ) (R nr -- nr n1)"},
		{.what Here, .desc "address", .here 9040, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 9048, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0		; ( a n1 -- a n1 0) (R nr n1)"},
		{.what Here, .desc "value", .here 9056, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_xswap	; ( a n1 0 -- a 0 n1) (R nr n1)"},
		{.what Here, .desc "address", .here 9064, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 9072, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0		; ( a 0 n1 -- a 0 n1 0) (R nr n1)"},
		{.what Here, .desc "value", .here 9080, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_doinit	; ( a 0 n1 0 -- a 0 ) (R nr n1 -- nr n1 0 n1)"},
		{.what Here, .desc "address", .here 9088, .there 360,.type Relativedictionary, .p M_doinit },
	{.what Sourceline, .desc "L_C_number_2:"},
	{.what Sourceline, .desc "dd MV_Base"},
		{.what Here, .desc "address", .here 9096, .there 360,.type Relativedictionary, .p MV_Base },
	{.what Sourceline, .desc "dd M_fetch	; ( a 0 Base -- a 0 10 ) (R nr n1 -- nr n1 0 n1)"},
		{.what Here, .desc "address", .here 9104, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_multiply	; ( a 0 10 -- a 0 ) (R nr n1 -- nr n1 0 n1)"},
		{.what Here, .desc "address", .here 9112, .there 360,.type Relativedictionary, .p M_multiply },
	{.what Sourceline, .desc "dd M_over	; ( a 0 -- a 0 a) (R nr n1 -- nr n1 0 n1)"},
		{.what Here, .desc "address", .here 9120, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd M_i		; ( a 0 a -- a 0 a n1) (R nr n1 -- nr n1 0 n1)"},
		{.what Here, .desc "address", .here 9128, .there 360,.type Relativedictionary, .p M_i },
	{.what Sourceline, .desc "dd M_plus	; ( a 0 a n1 -- a 0 a+n1) (R nr n1 -- nr n1 0 n1)"},
		{.what Here, .desc "address", .here 9136, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_cfetch	; ( a 0 a+n1 -- a 0 c) (R nr n1 -- nr n1 0 n1)"},
		{.what Here, .desc "address", .here 9144, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd C_digit"},
		{.what Here, .desc "address", .here 9152, .there 360,.type Relativedictionary, .p C_digit },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 9160, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_number_3"},
		{.what Here, .desc "address", .here 9168, .there 360,.type Relativedictionary, .p L_C_number_3 },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 9176, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 9184, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_number_4"},
		{.what Here, .desc "address", .here 9192, .there 360,.type Relativedictionary, .p L_C_number_4 },
	{.what Sourceline, .desc "L_C_number_3:"},
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 9200, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_unloop"},
		{.what Here, .desc "address", .here 9208, .there 360,.type Relativedictionary, .p M_unloop },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 9216, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 9224, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 9232, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd C_false"},
		{.what Here, .desc "address", .here 9240, .there 360,.type Relativedictionary, .p C_false },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 9248, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "L_C_number_4:"},
	{.what Sourceline, .desc "dd M_doloop"},
		{.what Here, .desc "address", .here 9256, .there 360,.type Relativedictionary, .p M_doloop },
	{.what Sourceline, .desc "dd L_C_number_2"},
		{.what Here, .desc "address", .here 9264, .there 360,.type Relativedictionary, .p L_C_number_2 },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 9272, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 9280, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd C_nip"},
		{.what Here, .desc "address", .here 9288, .there 360,.type Relativedictionary, .p C_nip },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 9296, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_multiply"},
		{.what Here, .desc "address", .here 9304, .there 360,.type Relativedictionary, .p M_multiply },
	{.what Sourceline, .desc "dd C_true"},
		{.what Here, .desc "address", .here 9312, .there 360,.type Relativedictionary, .p C_true },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 9320, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"abort\" abort 5"},
		{.what Here, .desc "link",.here 9328, .there 360,.type Relativedictionary, .p 8848 },
		{.what Here, .desc "len", .here 9336, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 9337, .there 360,.type Chars, .str "abort" },
		{.what Here, .desc "cfa", .here 9344, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Abortvec"},
		{.what Here, .desc "address", .here 9352, .there 360,.type Relativedictionary, .p MV_Abortvec },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 9360, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_execute"},
		{.what Here, .desc "address", .here 9368, .there 360,.type Relativedictionary, .p M_execute },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 9376, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"bufferfilename@\" bufferfilename_fetch 15 ; ( index -- 'counted-string ) fetch label"},
		{.what Here, .desc "link",.here 9384, .there 360,.type Relativedictionary, .p 9328 },
		{.what Here, .desc "len", .here 9392, .there 360,.type Byte, .b 0 + 15 },
		{.what Here, .desc "name",.here 9393, .there 360,.type Chars, .str "bufferfilename@" },
		{.what Here, .desc "cfa", .here 9400, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_cells"},
		{.what Here, .desc "address", .here 9408, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd MV_Bufferfilenames"},
		{.what Here, .desc "address", .here 9416, .there 360,.type Relativedictionary, .p MV_Bufferfilenames },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 9424, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd C_dot"},
		{.what Here, .desc "address", .here 9432, .there 360,.type Relativedictionary, .p C_dot },
	{.what Sourceline, .desc "dd C_cr"},
		{.what Here, .desc "address", .here 9440, .there 360,.type Relativedictionary, .p C_cr },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 9448, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 9456, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd C_dot"},
		{.what Here, .desc "address", .here 9464, .there 360,.type Relativedictionary, .p C_dot },
	{.what Sourceline, .desc "dd C_cr"},
		{.what Here, .desc "address", .here 9472, .there 360,.type Relativedictionary, .p C_cr },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 9480, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 9488, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd C_dot"},
		{.what Here, .desc "address", .here 9496, .there 360,.type Relativedictionary, .p C_dot },
	{.what Sourceline, .desc "dd C_cr"},
		{.what Here, .desc "address", .here 9504, .there 360,.type Relativedictionary, .p C_cr },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 9512, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"bufferfilename!\" bufferfilename_store 15 ; ( 'text index -- ) store label"},
		{.what Here, .desc "link",.here 9520, .there 360,.type Relativedictionary, .p 9384 },
		{.what Here, .desc "len", .here 9528, .there 360,.type Byte, .b 0 + 15 },
		{.what Here, .desc "name",.here 9529, .there 360,.type Chars, .str "bufferfilename!" },
		{.what Here, .desc "cfa", .here 9536, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_cells"},
		{.what Here, .desc "address", .here 9544, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd MV_Bufferfilenames"},
		{.what Here, .desc "address", .here 9552, .there 360,.type Relativedictionary, .p MV_Bufferfilenames },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 9560, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 9568, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 9576, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \">word\" toword 7 ; ( 'Bufferfds -- 'Wordfd )"},
		{.what Here, .desc "link",.here 9584, .there 360,.type Relativedictionary, .p 9520 },
		{.what Here, .desc "len", .here 9592, .there 360,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 9593, .there 360,.type Chars, .str ">word" },
		{.what Here, .desc "cfa", .here 9600, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MC_WORDNUM"},
		{.what Here, .desc "address", .here 9608, .there 360,.type Relativedictionary, .p MC_WORDNUM },
	{.what Sourceline, .desc "dd C_cells"},
		{.what Here, .desc "address", .here 9616, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 9624, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 9632, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"wordfd@\" wordfd_fetch 7"},
		{.what Here, .desc "link",.here 9640, .there 360,.type Relativedictionary, .p 9584 },
		{.what Here, .desc "len", .here 9648, .there 360,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 9649, .there 360,.type Chars, .str "wordfd@" },
		{.what Here, .desc "cfa", .here 9656, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfds"},
		{.what Here, .desc "address", .here 9664, .there 360,.type Relativedictionary, .p MV_Bufferfds },
	{.what Sourceline, .desc "dd C_toword"},
		{.what Here, .desc "address", .here 9672, .there 360,.type Relativedictionary, .p C_toword },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 9680, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 9688, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"wordfd!\" wordfd_store 7"},
		{.what Here, .desc "link",.here 9696, .there 360,.type Relativedictionary, .p 9640 },
		{.what Here, .desc "len", .here 9704, .there 360,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 9705, .there 360,.type Chars, .str "wordfd!" },
		{.what Here, .desc "cfa", .here 9712, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfds"},
		{.what Here, .desc "address", .here 9720, .there 360,.type Relativedictionary, .p MV_Bufferfds },
	{.what Sourceline, .desc "dd C_toword"},
		{.what Here, .desc "address", .here 9728, .there 360,.type Relativedictionary, .p C_toword },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 9736, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 9744, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"wordfilename@\" wordfilename_fetch 13"},
		{.what Here, .desc "link",.here 9752, .there 360,.type Relativedictionary, .p 9696 },
		{.what Here, .desc "len", .here 9760, .there 360,.type Byte, .b 0 + 13 },
		{.what Here, .desc "name",.here 9761, .there 360,.type Chars, .str "wordfilename@" },
		{.what Here, .desc "cfa", .here 9768, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfilenames"},
		{.what Here, .desc "address", .here 9776, .there 360,.type Relativedictionary, .p MV_Bufferfilenames },
	{.what Sourceline, .desc "dd C_toword"},
		{.what Here, .desc "address", .here 9784, .there 360,.type Relativedictionary, .p C_toword },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 9792, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 9800, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"wordfilename!\" wordfilename_store 13"},
		{.what Here, .desc "link",.here 9808, .there 360,.type Relativedictionary, .p 9752 },
		{.what Here, .desc "len", .here 9816, .there 360,.type Byte, .b 0 + 13 },
		{.what Here, .desc "name",.here 9817, .there 360,.type Chars, .str "wordfilename!" },
		{.what Here, .desc "cfa", .here 9824, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfilenames"},
		{.what Here, .desc "address", .here 9832, .there 360,.type Relativedictionary, .p MV_Bufferfilenames },
	{.what Sourceline, .desc "dd C_toword"},
		{.what Here, .desc "address", .here 9840, .there 360,.type Relativedictionary, .p C_toword },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 9848, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 9856, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \">line\" toline 5 ; ( 'Bufferfds -- 'Wordfd )"},
		{.what Here, .desc "link",.here 9864, .there 360,.type Relativedictionary, .p 9808 },
		{.what Here, .desc "len", .here 9872, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 9873, .there 360,.type Chars, .str ">line" },
		{.what Here, .desc "cfa", .here 9880, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MC_LINENUM"},
		{.what Here, .desc "address", .here 9888, .there 360,.type Relativedictionary, .p MC_LINENUM },
	{.what Sourceline, .desc "dd C_cells"},
		{.what Here, .desc "address", .here 9896, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 9904, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 9912, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"linefd@\" linefd_fetch 7"},
		{.what Here, .desc "link",.here 9920, .there 360,.type Relativedictionary, .p 9864 },
		{.what Here, .desc "len", .here 9928, .there 360,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 9929, .there 360,.type Chars, .str "linefd@" },
		{.what Here, .desc "cfa", .here 9936, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfds"},
		{.what Here, .desc "address", .here 9944, .there 360,.type Relativedictionary, .p MV_Bufferfds },
	{.what Sourceline, .desc "dd C_toline"},
		{.what Here, .desc "address", .here 9952, .there 360,.type Relativedictionary, .p C_toline },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 9960, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 9968, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"linefd!\" linefd_store 7"},
		{.what Here, .desc "link",.here 9976, .there 360,.type Relativedictionary, .p 9920 },
		{.what Here, .desc "len", .here 9984, .there 360,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 9985, .there 360,.type Chars, .str "linefd!" },
		{.what Here, .desc "cfa", .here 9992, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfds"},
		{.what Here, .desc "address", .here 10000, .there 360,.type Relativedictionary, .p MV_Bufferfds },
	{.what Sourceline, .desc "dd C_toline"},
		{.what Here, .desc "address", .here 10008, .there 360,.type Relativedictionary, .p C_toline },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 10016, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 10024, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"linefilename@\" linefilename_fetch 13"},
		{.what Here, .desc "link",.here 10032, .there 360,.type Relativedictionary, .p 9976 },
		{.what Here, .desc "len", .here 10040, .there 360,.type Byte, .b 0 + 13 },
		{.what Here, .desc "name",.here 10041, .there 360,.type Chars, .str "linefilename@" },
		{.what Here, .desc "cfa", .here 10048, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfilenames"},
		{.what Here, .desc "address", .here 10056, .there 360,.type Relativedictionary, .p MV_Bufferfilenames },
	{.what Sourceline, .desc "dd C_toline"},
		{.what Here, .desc "address", .here 10064, .there 360,.type Relativedictionary, .p C_toline },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 10072, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 10080, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"linefilename!\" linefilename_store 13"},
		{.what Here, .desc "link",.here 10088, .there 360,.type Relativedictionary, .p 10032 },
		{.what Here, .desc "len", .here 10096, .there 360,.type Byte, .b 0 + 13 },
		{.what Here, .desc "name",.here 10097, .there 360,.type Chars, .str "linefilename!" },
		{.what Here, .desc "cfa", .here 10104, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfilenames"},
		{.what Here, .desc "address", .here 10112, .there 360,.type Relativedictionary, .p MV_Bufferfilenames },
	{.what Sourceline, .desc "dd C_toline"},
		{.what Here, .desc "address", .here 10120, .there 360,.type Relativedictionary, .p C_toline },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 10128, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 10136, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \">doublequote\" todoublequote 12 ; ( 'Bufferfds -- 'Doublequotefd )"},
		{.what Here, .desc "link",.here 10144, .there 360,.type Relativedictionary, .p 10088 },
		{.what Here, .desc "len", .here 10152, .there 360,.type Byte, .b 0 + 12 },
		{.what Here, .desc "name",.here 10153, .there 360,.type Chars, .str ">doublequote" },
		{.what Here, .desc "cfa", .here 10160, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MC_DOUBLEQUOTENUM"},
		{.what Here, .desc "address", .here 10168, .there 360,.type Relativedictionary, .p MC_DOUBLEQUOTENUM },
	{.what Sourceline, .desc "dd C_cells"},
		{.what Here, .desc "address", .here 10176, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 10184, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 10192, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"doublequotefd@\" doublequotefd_fetch 14"},
		{.what Here, .desc "link",.here 10200, .there 360,.type Relativedictionary, .p 10144 },
		{.what Here, .desc "len", .here 10208, .there 360,.type Byte, .b 0 + 14 },
		{.what Here, .desc "name",.here 10209, .there 360,.type Chars, .str "doublequotefd@" },
		{.what Here, .desc "cfa", .here 10216, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfds"},
		{.what Here, .desc "address", .here 10224, .there 360,.type Relativedictionary, .p MV_Bufferfds },
	{.what Sourceline, .desc "dd C_todoublequote"},
		{.what Here, .desc "address", .here 10232, .there 360,.type Relativedictionary, .p C_todoublequote },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 10240, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 10248, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"doublequotefd!\" doublequotefd_store 14"},
		{.what Here, .desc "link",.here 10256, .there 360,.type Relativedictionary, .p 10200 },
		{.what Here, .desc "len", .here 10264, .there 360,.type Byte, .b 0 + 14 },
		{.what Here, .desc "name",.here 10265, .there 360,.type Chars, .str "doublequotefd!" },
		{.what Here, .desc "cfa", .here 10272, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfds"},
		{.what Here, .desc "address", .here 10280, .there 360,.type Relativedictionary, .p MV_Bufferfds },
	{.what Sourceline, .desc "dd C_todoublequote"},
		{.what Here, .desc "address", .here 10288, .there 360,.type Relativedictionary, .p C_todoublequote },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 10296, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 10304, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"doublequotefilename@\" doublequotefilename_fetch 20"},
		{.what Here, .desc "link",.here 10312, .there 360,.type Relativedictionary, .p 10256 },
		{.what Here, .desc "len", .here 10320, .there 360,.type Byte, .b 0 + 20 },
		{.what Here, .desc "name",.here 10321, .there 360,.type Chars, .str "doublequotefilename@" },
		{.what Here, .desc "cfa", .here 10328, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfilenames"},
		{.what Here, .desc "address", .here 10336, .there 360,.type Relativedictionary, .p MV_Bufferfilenames },
	{.what Sourceline, .desc "dd C_todoublequote"},
		{.what Here, .desc "address", .here 10344, .there 360,.type Relativedictionary, .p C_todoublequote },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 10352, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 10360, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"doublequotefilename!\" doublequotefilename_store 20"},
		{.what Here, .desc "link",.here 10368, .there 360,.type Relativedictionary, .p 10312 },
		{.what Here, .desc "len", .here 10376, .there 360,.type Byte, .b 0 + 20 },
		{.what Here, .desc "name",.here 10377, .there 360,.type Chars, .str "doublequotefilename!" },
		{.what Here, .desc "cfa", .here 10384, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfilenames"},
		{.what Here, .desc "address", .here 10392, .there 360,.type Relativedictionary, .p MV_Bufferfilenames },
	{.what Sourceline, .desc "dd C_todoublequote"},
		{.what Here, .desc "address", .here 10400, .there 360,.type Relativedictionary, .p C_todoublequote },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 10408, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 10416, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \">closeparen\" tocloseparen 11 ; ( 'Bufferfds -- 'Closeparenfd )"},
		{.what Here, .desc "link",.here 10424, .there 360,.type Relativedictionary, .p 10368 },
		{.what Here, .desc "len", .here 10432, .there 360,.type Byte, .b 0 + 11 },
		{.what Here, .desc "name",.here 10433, .there 360,.type Chars, .str ">closeparen" },
		{.what Here, .desc "cfa", .here 10440, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MC_CLOSEPARENNUM"},
		{.what Here, .desc "address", .here 10448, .there 360,.type Relativedictionary, .p MC_CLOSEPARENNUM },
	{.what Sourceline, .desc "dd C_cells"},
		{.what Here, .desc "address", .here 10456, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 10464, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 10472, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"closeparenfd@\" closeparenfd_fetch 13"},
		{.what Here, .desc "link",.here 10480, .there 360,.type Relativedictionary, .p 10424 },
		{.what Here, .desc "len", .here 10488, .there 360,.type Byte, .b 0 + 13 },
		{.what Here, .desc "name",.here 10489, .there 360,.type Chars, .str "closeparenfd@" },
		{.what Here, .desc "cfa", .here 10496, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfds"},
		{.what Here, .desc "address", .here 10504, .there 360,.type Relativedictionary, .p MV_Bufferfds },
	{.what Sourceline, .desc "dd C_tocloseparen"},
		{.what Here, .desc "address", .here 10512, .there 360,.type Relativedictionary, .p C_tocloseparen },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 10520, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 10528, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"closeparenfd!\" closeparenfd_store 13"},
		{.what Here, .desc "link",.here 10536, .there 360,.type Relativedictionary, .p 10480 },
		{.what Here, .desc "len", .here 10544, .there 360,.type Byte, .b 0 + 13 },
		{.what Here, .desc "name",.here 10545, .there 360,.type Chars, .str "closeparenfd!" },
		{.what Here, .desc "cfa", .here 10552, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfds"},
		{.what Here, .desc "address", .here 10560, .there 360,.type Relativedictionary, .p MV_Bufferfds },
	{.what Sourceline, .desc "dd C_tocloseparen"},
		{.what Here, .desc "address", .here 10568, .there 360,.type Relativedictionary, .p C_tocloseparen },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 10576, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 10584, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"closeparenfilename@\" closeparenfilename_fetch 19"},
		{.what Here, .desc "link",.here 10592, .there 360,.type Relativedictionary, .p 10536 },
		{.what Here, .desc "len", .here 10600, .there 360,.type Byte, .b 0 + 19 },
		{.what Here, .desc "name",.here 10601, .there 360,.type Chars, .str "closeparenfilename@" },
		{.what Here, .desc "cfa", .here 10608, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfilenames"},
		{.what Here, .desc "address", .here 10616, .there 360,.type Relativedictionary, .p MV_Bufferfilenames },
	{.what Sourceline, .desc "dd C_tocloseparen"},
		{.what Here, .desc "address", .here 10624, .there 360,.type Relativedictionary, .p C_tocloseparen },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 10632, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 10640, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"closeparenfilename!\" closeparenfilename_store 19"},
		{.what Here, .desc "link",.here 10648, .there 360,.type Relativedictionary, .p 10592 },
		{.what Here, .desc "len", .here 10656, .there 360,.type Byte, .b 0 + 19 },
		{.what Here, .desc "name",.here 10657, .there 360,.type Chars, .str "closeparenfilename!" },
		{.what Here, .desc "cfa", .here 10664, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfilenames"},
		{.what Here, .desc "address", .here 10672, .there 360,.type Relativedictionary, .p MV_Bufferfilenames },
	{.what Sourceline, .desc "dd C_tocloseparen"},
		{.what Here, .desc "address", .here 10680, .there 360,.type Relativedictionary, .p C_tocloseparen },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 10688, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 10696, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"stdinput\" stdinput 8 ; stream input from stdin into Text input buffer"},
		{.what Here, .desc "link",.here 10704, .there 360,.type Relativedictionary, .p 10648 },
		{.what Here, .desc "len", .here 10712, .there 360,.type Byte, .b 0 + 8 },
		{.what Here, .desc "name",.here 10713, .there 360,.type Chars, .str "stdinput" },
		{.what Here, .desc "cfa", .here 10720, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MC_STDIN"},
		{.what Here, .desc "address", .here 10728, .there 360,.type Relativedictionary, .p MC_STDIN },
	{.what Sourceline, .desc "dd MV_Infd"},
		{.what Here, .desc "address", .here 10736, .there 360,.type Relativedictionary, .p MV_Infd },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 10744, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd MV_Bufferfds"},
		{.what Here, .desc "address", .here 10752, .there 360,.type Relativedictionary, .p MV_Bufferfds },
	{.what Sourceline, .desc "dd MC_NBUFFERS"},
		{.what Here, .desc "address", .here 10760, .there 360,.type Relativedictionary, .p MC_NBUFFERS },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 10768, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 10776, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_doinit"},
		{.what Here, .desc "address", .here 10784, .there 360,.type Relativedictionary, .p M_doinit },
	{.what Sourceline, .desc "L_C_stdinput:"},
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 10792, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1"},
		{.what Here, .desc "value", .here 10800, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "dd M_over	; ( 'Bufferfd -1 'Bufferfd )"},
		{.what Here, .desc "address", .here 10808, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 10816, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 10824, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 10832, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd C_cells"},
		{.what Here, .desc "address", .here 10840, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 10848, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_doloop"},
		{.what Here, .desc "address", .here 10856, .there 360,.type Relativedictionary, .p M_doloop },
	{.what Sourceline, .desc "dd L_C_stdinput"},
		{.what Here, .desc "address", .here 10864, .there 360,.type Relativedictionary, .p L_C_stdinput },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 10872, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 10880, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"args\" args 4 ; stream input from #p/<pid>/args into Text input buffer"},
		{.what Here, .desc "link",.here 10888, .there 360,.type Relativedictionary, .p 10704 },
		{.what Here, .desc "len", .here 10896, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 10897, .there 360,.type Chars, .str "args" },
		{.what Here, .desc "cfa", .here 10904, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Argsfilename	; ( 'args_filename_counted_string ) filled by the starter"},
		{.what Here, .desc "address", .here 10912, .there 360,.type Relativedictionary, .p MV_Argsfilename },
	{.what Sourceline, .desc "dd M_cfetch"},
		{.what Here, .desc "address", .here 10920, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 10928, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 10936, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_equal"},
		{.what Here, .desc "address", .here 10944, .there 360,.type Relativedictionary, .p M_equal },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 10952, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_args_read"},
		{.what Here, .desc "address", .here 10960, .there 360,.type Relativedictionary, .p L_C_args_read },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 10968, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "L_C_args_read:"},
	{.what Sourceline, .desc "dd MV_Argsfilename"},
		{.what Here, .desc "address", .here 10976, .there 360,.type Relativedictionary, .p MV_Argsfilename },
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 10984, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_ro"},
		{.what Here, .desc "address", .here 10992, .there 360,.type Relativedictionary, .p C_ro },
	{.what Sourceline, .desc "dd C_open_file"},
		{.what Here, .desc "address", .here 11000, .there 360,.type Relativedictionary, .p C_open_file },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 11008, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd MV_Infd"},
		{.what Here, .desc "address", .here 11016, .there 360,.type Relativedictionary, .p MV_Infd },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 11024, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd C_interpret"},
		{.what Here, .desc "address", .here 11032, .there 360,.type Relativedictionary, .p C_interpret },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 11040, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"input@\" input_fetch 6 ; ( -- Bufferfds Infd #Buffers+1 ) save input stream onto the stack and replace the buffer fd's with -1"},
		{.what Here, .desc "link",.here 11048, .there 360,.type Relativedictionary, .p 10888 },
		{.what Here, .desc "len", .here 11056, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 11057, .there 360,.type Chars, .str "input@" },
		{.what Here, .desc "cfa", .here 11064, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfds"},
		{.what Here, .desc "address", .here 11072, .there 360,.type Relativedictionary, .p MV_Bufferfds },
	{.what Sourceline, .desc "dd MC_NBUFFERS"},
		{.what Here, .desc "address", .here 11080, .there 360,.type Relativedictionary, .p MC_NBUFFERS },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 11088, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 11096, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_doinit"},
		{.what Here, .desc "address", .here 11104, .there 360,.type Relativedictionary, .p M_doinit },
	{.what Sourceline, .desc "L_C_input_fetch:"},
	{.what Sourceline, .desc "dd M_dup	; ( 'Bufferfd 'Bufferfd )"},
		{.what Here, .desc "address", .here 11112, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 11120, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_xswap	; ( fd 'Bufferfd )"},
		{.what Here, .desc "address", .here 11128, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 11136, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1"},
		{.what Here, .desc "value", .here 11144, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "dd M_over	; ( fd 'Bufferfd -1 'Bufferfd )"},
		{.what Here, .desc "address", .here 11152, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd M_store	; ( fd 'Bufferfd )"},
		{.what Here, .desc "address", .here 11160, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 11168, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 11176, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd C_cells"},
		{.what Here, .desc "address", .here 11184, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 11192, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_doloop"},
		{.what Here, .desc "address", .here 11200, .there 360,.type Relativedictionary, .p M_doloop },
	{.what Sourceline, .desc "dd L_C_input_fetch"},
		{.what Here, .desc "address", .here 11208, .there 360,.type Relativedictionary, .p L_C_input_fetch },
	{.what Sourceline, .desc "dd M_drop	; ( fd0 fd1 .. fdn )"},
		{.what Here, .desc "address", .here 11216, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd MV_Infd"},
		{.what Here, .desc "address", .here 11224, .there 360,.type Relativedictionary, .p MV_Infd },
	{.what Sourceline, .desc "dd M_fetch	; ( fd0 fd1 .. fdn infd )"},
		{.what Here, .desc "address", .here 11232, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd MC_NBUFFERS"},
		{.what Here, .desc "address", .here 11240, .there 360,.type Relativedictionary, .p MC_NBUFFERS },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 11248, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 11256, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd M_plus	; ( fd0 fd1 .. fdn infd n+1 )"},
		{.what Here, .desc "address", .here 11264, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 11272, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"input!\" input_store 6 ; ( fd0 fd1 .. fdn infd n+1 | empty -- ) restore input stream from the stack or stdinput"},
		{.what Here, .desc "link",.here 11280, .there 360,.type Relativedictionary, .p 11048 },
		{.what Here, .desc "len", .here 11288, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 11289, .there 360,.type Chars, .str "input!" },
		{.what Here, .desc "cfa", .here 11296, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_dup		; check if there is #Buffers+1 on the top of stack"},
		{.what Here, .desc "address", .here 11304, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd MC_NBUFFERS"},
		{.what Here, .desc "address", .here 11312, .there 360,.type Relativedictionary, .p MC_NBUFFERS },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 11320, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 11328, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 11336, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_equal	; is the top of stack == #Buffers+1"},
		{.what Here, .desc "address", .here 11344, .there 360,.type Relativedictionary, .p M_equal },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 11352, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_input_store_1	; top of stack <> #Buffers+1, there is no input stream on the stack, use the default input"},
		{.what Here, .desc "address", .here 11360, .there 360,.type Relativedictionary, .p L_C_input_store_1 },
	{.what Sourceline, .desc "dd M_drop	; drop the #Buffers+1 on the top of stack"},
		{.what Here, .desc "address", .here 11368, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd MV_Infd"},
		{.what Here, .desc "address", .here 11376, .there 360,.type Relativedictionary, .p MV_Infd },
	{.what Sourceline, .desc "dd M_store	; ( fd0 fd1 .. fdn )"},
		{.what Here, .desc "address", .here 11384, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd MV_Bufferfds"},
		{.what Here, .desc "address", .here 11392, .there 360,.type Relativedictionary, .p MV_Bufferfds },
	{.what Sourceline, .desc "dd MC_NBUFFERS"},
		{.what Here, .desc "address", .here 11400, .there 360,.type Relativedictionary, .p MC_NBUFFERS },
	{.what Sourceline, .desc "dd C_cells"},
		{.what Here, .desc "address", .here 11408, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd M_plus	; ( fd0 fd1 .. fdn 'Bufferfds+(NBUFFERS*cellsize) )"},
		{.what Here, .desc "address", .here 11416, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd MC_NBUFFERS"},
		{.what Here, .desc "address", .here 11424, .there 360,.type Relativedictionary, .p MC_NBUFFERS },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 11432, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 11440, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_doinit"},
		{.what Here, .desc "address", .here 11448, .there 360,.type Relativedictionary, .p M_doinit },
	{.what Sourceline, .desc "L_C_input_store:"},
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 11456, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 11464, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd C_cells"},
		{.what Here, .desc "address", .here 11472, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd M_minus	; ( fd0 fd1 .. fdn 'Bufferfds-(1*cellsize) )"},
		{.what Here, .desc "address", .here 11480, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd M_dup	; ( fd0 fd1 .. fdn 'Bufferfds-(1*cellsize) 'Bufferfds-(1*cellsize) )"},
		{.what Here, .desc "address", .here 11488, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_rpush	; ( fd0 fd1 .. fdn 'Bufferfds-(1*cellsize) ) (R 'Bufferfds-(1*cellsize) )"},
		{.what Here, .desc "address", .here 11496, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 11504, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_rpop	; ( fd0 fd1 .. fdn-1 'Bufferfds-(1*cellsize) )"},
		{.what Here, .desc "address", .here 11512, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_doloop"},
		{.what Here, .desc "address", .here 11520, .there 360,.type Relativedictionary, .p M_doloop },
	{.what Sourceline, .desc "dd L_C_input_store"},
		{.what Here, .desc "address", .here 11528, .there 360,.type Relativedictionary, .p L_C_input_store },
	{.what Sourceline, .desc "dd MV_Eof"},
		{.what Here, .desc "address", .here 11536, .there 360,.type Relativedictionary, .p MV_Eof },
	{.what Sourceline, .desc "dd C_off	; reset Eof back to 0"},
		{.what Here, .desc "address", .here 11544, .there 360,.type Relativedictionary, .p C_off },
	{.what Sourceline, .desc "dd C_true	; ( true )"},
		{.what Here, .desc "address", .here 11552, .there 360,.type Relativedictionary, .p C_true },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 11560, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "L_C_input_store_1:	; there is no input stream on the stack"},
	{.what Sourceline, .desc "dd C_stdinput	; no input stream on the stack, use default input from now"},
		{.what Here, .desc "address", .here 11568, .there 360,.type Relativedictionary, .p C_stdinput },
	{.what Sourceline, .desc "dd C_false		; ( 0 )"},
		{.what Here, .desc "address", .here 11576, .there 360,.type Relativedictionary, .p C_false },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 11584, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"-input\" close_input 6 ; ( ) ; close the current input stream"},
		{.what Here, .desc "link",.here 11592, .there 360,.type Relativedictionary, .p 11280 },
		{.what Here, .desc "len", .here 11600, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 11601, .there 360,.type Chars, .str "-input" },
		{.what Here, .desc "cfa", .here 11608, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfds"},
		{.what Here, .desc "address", .here 11616, .there 360,.type Relativedictionary, .p MV_Bufferfds },
	{.what Sourceline, .desc "dd MC_NBUFFERS"},
		{.what Here, .desc "address", .here 11624, .there 360,.type Relativedictionary, .p MC_NBUFFERS },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 11632, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 11640, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_doinit"},
		{.what Here, .desc "address", .here 11648, .there 360,.type Relativedictionary, .p M_doinit },
	{.what Sourceline, .desc "L_C_close_input:"},
	{.what Sourceline, .desc "dd M_dup	; ( 'Bufferfd 'Bufferfd )"},
		{.what Here, .desc "address", .here 11656, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 11664, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 11672, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1"},
		{.what Here, .desc "value", .here 11680, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "dd C_neq"},
		{.what Here, .desc "address", .here 11688, .there 360,.type Relativedictionary, .p C_neq },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 11696, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_close_next	; == -1, check next fd"},
		{.what Here, .desc "address", .here 11704, .there 360,.type Relativedictionary, .p L_C_close_next },
	{.what Sourceline, .desc "dd M_dup	; ( 'Bufferfd 'Bufferfd )"},
		{.what Here, .desc "address", .here 11712, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_fetch	; ( 'Bufferfd fd )"},
		{.what Here, .desc "address", .here 11720, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_close_file	; ( 'Bufferfd ioresult )"},
		{.what Here, .desc "address", .here 11728, .there 360,.type Relativedictionary, .p C_close_file },
	{.what Sourceline, .desc "dd M_drop	; ( 'Bufferfd )"},
		{.what Here, .desc "address", .here 11736, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_dup	; ( 'Bufferfd 'Bufferfd )"},
		{.what Here, .desc "address", .here 11744, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 11752, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1"},
		{.what Here, .desc "value", .here 11760, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "dd M_xswap	; ( 'Bufferfd -1 'Bufferfd )"},
		{.what Here, .desc "address", .here 11768, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_store	; ( 'Bufferfd )"},
		{.what Here, .desc "address", .here 11776, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "L_C_close_next:"},
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 11784, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 11792, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd C_cells"},
		{.what Here, .desc "address", .here 11800, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 11808, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_doloop"},
		{.what Here, .desc "address", .here 11816, .there 360,.type Relativedictionary, .p M_doloop },
	{.what Sourceline, .desc "dd L_C_close_input"},
		{.what Here, .desc "address", .here 11824, .there 360,.type Relativedictionary, .p L_C_close_input },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 11832, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 11840, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1"},
		{.what Here, .desc "value", .here 11848, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "dd MV_Infd	; ( -1 'Infd )"},
		{.what Here, .desc "address", .here 11856, .there 360,.type Relativedictionary, .p MV_Infd },
	{.what Sourceline, .desc "dd M_dup	; ( -1 'Infd 'Infd )"},
		{.what Here, .desc "address", .here 11864, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_fetch	; ( -1 'Infd fd )"},
		{.what Here, .desc "address", .here 11872, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_close_file	; ( -1 'Infd ioresult )"},
		{.what Here, .desc "address", .here 11880, .there 360,.type Relativedictionary, .p C_close_file },
	{.what Sourceline, .desc "dd M_drop	; ( -1 'Infd )"},
		{.what Here, .desc "address", .here 11888, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 11896, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd MV_Eof"},
		{.what Here, .desc "address", .here 11904, .there 360,.type Relativedictionary, .p MV_Eof },
	{.what Sourceline, .desc "dd C_off	; reset Eof back to 0"},
		{.what Here, .desc "address", .here 11912, .there 360,.type Relativedictionary, .p C_off },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 11920, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"-+input\" restore_input 7 ; ( <input> -- ) ; use the input stream on the stack or abort"},
		{.what Here, .desc "link",.here 11928, .there 360,.type Relativedictionary, .p 11592 },
		{.what Here, .desc "len", .here 11936, .there 360,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 11937, .there 360,.type Chars, .str "-+input" },
		{.what Here, .desc "cfa", .here 11944, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_close_input"},
		{.what Here, .desc "address", .here 11952, .there 360,.type Relativedictionary, .p C_close_input },
	{.what Sourceline, .desc "dd C_input_store"},
		{.what Here, .desc "address", .here 11960, .there 360,.type Relativedictionary, .p C_input_store },
	{.what Sourceline, .desc "dd C_0eq"},
		{.what Here, .desc "address", .here 11968, .there 360,.type Relativedictionary, .p C_0eq },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 11976, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_restore_input	; input stream restored"},
		{.what Here, .desc "address", .here 11984, .there 360,.type Relativedictionary, .p L_restore_input },
	{.what Sourceline, .desc "dd C_space"},
		{.what Here, .desc "address", .here 11992, .there 360,.type Relativedictionary, .p C_space },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 12000, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd L137"},
		{.what Here, .desc "address", .here 12008, .there 360,.type Relativedictionary, .p L137 },
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 12016, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 12024, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd C_space"},
		{.what Here, .desc "address", .here 12032, .there 360,.type Relativedictionary, .p C_space },
	{.what Sourceline, .desc "dd C_depth"},
		{.what Here, .desc "address", .here 12040, .there 360,.type Relativedictionary, .p C_depth },
	{.what Sourceline, .desc "dd C_dot"},
		{.what Here, .desc "address", .here 12048, .there 360,.type Relativedictionary, .p C_dot },
	{.what Sourceline, .desc "dd C_cr"},
		{.what Here, .desc "address", .here 12056, .there 360,.type Relativedictionary, .p C_cr },
	{.what Sourceline, .desc "dd C_abort"},
		{.what Here, .desc "address", .here 12064, .there 360,.type Relativedictionary, .p C_abort },
	{.what Sourceline, .desc "L_restore_input:	; input stream restored, get out"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 12072, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"concat\" concat 6 ; ( 'cs1 'cs2 -- 'cs1+'cs2 ) concatenate counted string2 to counted-string1"},
		{.what Here, .desc "link",.here 12080, .there 360,.type Relativedictionary, .p 11928 },
		{.what Here, .desc "len", .here 12088, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 12089, .there 360,.type Chars, .str "concat" },
		{.what Here, .desc "cfa", .here 12096, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_2dup	; ( 'cs1 'cs2 'cs1 'cs2 )"},
		{.what Here, .desc "address", .here 12104, .there 360,.type Relativedictionary, .p C_2dup },
	{.what Sourceline, .desc "dd M_dup	; ( 'cs1 'cs2 'cs1 'cs2 'cs2 )"},
		{.what Here, .desc "address", .here 12112, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_cfetch	; ( 'cs1 'cs2 'cs1 'cs2 c2 )"},
		{.what Here, .desc "address", .here 12120, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd M_rpush	; ( 'cs1 'cs2 'cs1 'cs2 ) (R c2 )"},
		{.what Here, .desc "address", .here 12128, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd C_1plus	; ( 'cs1 'cs2 'cs1 'cs2+1 ) (R c2 )"},
		{.what Here, .desc "address", .here 12136, .there 360,.type Relativedictionary, .p C_1plus },
	{.what Sourceline, .desc "dd M_over	; ( 'cs1 'cs2 'cs1 'cs2+1 'cs1 ) (R c2 )"},
		{.what Here, .desc "address", .here 12144, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd M_dup	; ( 'cs1 'cs2 'cs1 'cs2+1 'cs1 'cs1 ) (R c2 )"},
		{.what Here, .desc "address", .here 12152, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_cfetch	; ( 'cs1 'cs2 'cs1 'cs2+1 'cs1 c1 ) (R c2 )"},
		{.what Here, .desc "address", .here 12160, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd M_plus	; ( 'cs1 'cs2 'cs1 'cs2+1 'cs1+c1 ) (R c2 )"},
		{.what Here, .desc "address", .here 12168, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd C_1plus	; ( 'cs1 'cs2 'cs1 'cs2+1 'cs1+c1+1 ) (R c2 )"},
		{.what Here, .desc "address", .here 12176, .there 360,.type Relativedictionary, .p C_1plus },
	{.what Sourceline, .desc "dd M_rpop	; ( 'cs1 'cs2 'cs1 'cs2+1 'cs1+c1+1 c2 ) (R )"},
		{.what Here, .desc "address", .here 12184, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_cmove	; ( 'cs1 'cs2 'cs1 )"},
		{.what Here, .desc "address", .here 12192, .there 360,.type Relativedictionary, .p M_cmove },
	{.what Sourceline, .desc "dd M_cfetch	; ( 'cs1 'cs2 c1 )"},
		{.what Here, .desc "address", .here 12200, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd M_xswap	; ( 'cs1 c1 'cs2 )"},
		{.what Here, .desc "address", .here 12208, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_cfetch	; ( 'cs1 c1 c2 )"},
		{.what Here, .desc "address", .here 12216, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd M_plus	; ( 'cs1 c1+c2 )"},
		{.what Here, .desc "address", .here 12224, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_over	; ( 'cs1 c1+c2 'cs1 )"},
		{.what Here, .desc "address", .here 12232, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd M_cstore	; ( 'cs1 )"},
		{.what Here, .desc "address", .here 12240, .there 360,.type Relativedictionary, .p M_cstore },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 12248, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"buffername\" buffername 10 ; ( index -- 'counted_string ) build the buffer fd's filename"},
		{.what Here, .desc "link",.here 12256, .there 360,.type Relativedictionary, .p 12080 },
		{.what Here, .desc "len", .here 12264, .there 360,.type Byte, .b 0 + 10 },
		{.what Here, .desc "name",.here 12265, .there 360,.type Chars, .str "buffername" },
		{.what Here, .desc "cfa", .here 12272, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_bufferfilename_fetch	; ( 'fcs ) fcs = filename counted string"},
		{.what Here, .desc "address", .here 12280, .there 360,.type Relativedictionary, .p C_bufferfilename_fetch },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 12288, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd L_bin_prefix	; address of the counted string 3#n/"},
		{.what Here, .desc "address", .here 12296, .there 360,.type Relativedictionary, .p L_bin_prefix },
	{.what Sourceline, .desc "dd C_pad"},
		{.what Here, .desc "address", .here 12304, .there 360,.type Relativedictionary, .p C_pad },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 12312, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 4"},
		{.what Here, .desc "value", .here 12320, .there 360,.type Absolute, .p 4 },
	{.what Sourceline, .desc "dd M_cmove	; pad has 3#n/"},
		{.what Here, .desc "address", .here 12328, .there 360,.type Relativedictionary, .p M_cmove },
	{.what Sourceline, .desc "dd C_pad	; ( 'fcs pad )"},
		{.what Here, .desc "address", .here 12336, .there 360,.type Relativedictionary, .p C_pad },
	{.what Sourceline, .desc "dd MV_Infd"},
		{.what Here, .desc "address", .here 12344, .there 360,.type Relativedictionary, .p MV_Infd },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 12352, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_counted_paren_dot_paren ; ( 'fcs pad 'cs )"},
		{.what Here, .desc "address", .here 12360, .there 360,.type Relativedictionary, .p C_counted_paren_dot_paren },
	{.what Sourceline, .desc "dd C_concat	; Now, pad has 4#n/0 ( 'fcs pad )"},
		{.what Here, .desc "address", .here 12368, .there 360,.type Relativedictionary, .p C_concat },
	{.what Sourceline, .desc "dd M_xswap	; ( pad 'fcs )"},
		{.what Here, .desc "address", .here 12376, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd C_concat	; Now, pad has a proper counted string"},
		{.what Here, .desc "address", .here 12384, .there 360,.type Relativedictionary, .p C_concat },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 12392, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 12400, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 12408, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd C_cr"},
		{.what Here, .desc "address", .here 12416, .there 360,.type Relativedictionary, .p C_cr },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 12424, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"get\" get 3 ; ( index -- read_count ) read from the indexed Fd in Bufferfds into Tib"},
		{.what Here, .desc "link",.here 12432, .there 360,.type Relativedictionary, .p 12256 },
		{.what Here, .desc "len", .here 12440, .there 360,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 12441, .there 360,.type Chars, .str "get" },
		{.what Here, .desc "cfa", .here 12448, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Eof"},
		{.what Here, .desc "address", .here 12456, .there 360,.type Relativedictionary, .p MV_Eof },
	{.what Sourceline, .desc "dd C_off	; clear EOF flag"},
		{.what Here, .desc "address", .here 12464, .there 360,.type Relativedictionary, .p C_off },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 12472, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd C_cells	; ( index index*cellsize ) number of bytes"},
		{.what Here, .desc "address", .here 12480, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd MV_Bufferfds"},
		{.what Here, .desc "address", .here 12488, .there 360,.type Relativedictionary, .p MV_Bufferfds },
	{.what Sourceline, .desc "dd M_plus	; ( index index*cellsize+'Bufferfds ) address of the fd"},
		{.what Here, .desc "address", .here 12496, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_fetch	; ( index fd )"},
		{.what Here, .desc "address", .here 12504, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_dup	; ( index fd fd )"},
		{.what Here, .desc "address", .here 12512, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 12520, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1"},
		{.what Here, .desc "value", .here 12528, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "dd M_equal"},
		{.what Here, .desc "address", .here 12536, .there 360,.type Relativedictionary, .p M_equal },
	{.what Sourceline, .desc "dd M_cjump	; if fd == -1 ( index fd )"},
		{.what Here, .desc "address", .here 12544, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_get	; when not -1"},
		{.what Here, .desc "address", .here 12552, .there 360,.type Relativedictionary, .p L_C_get },
	{.what Sourceline, .desc "dd M_drop	; when fd == -1 ( index )"},
		{.what Here, .desc "address", .here 12560, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 12568, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 12576, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_rpush	; ( index index ) (R index )"},
		{.what Here, .desc "address", .here 12584, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd C_buffername"},
		{.what Here, .desc "address", .here 12592, .there 360,.type Relativedictionary, .p C_buffername },
	{.what Sourceline, .desc "dd C_count	; ( index 'filename-counted-string -- 'text count ) (R index )"},
		{.what Here, .desc "address", .here 12600, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_ro"},
		{.what Here, .desc "address", .here 12608, .there 360,.type Relativedictionary, .p C_ro },
	{.what Sourceline, .desc "dd C_open_file	; ( index fd ioresult ) (R index )"},
		{.what Here, .desc "address", .here 12616, .there 360,.type Relativedictionary, .p C_open_file },
	{.what Sourceline, .desc "dd C_invert"},
		{.what Here, .desc "address", .here 12624, .there 360,.type Relativedictionary, .p C_invert },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 12632, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_get_opened	; if open suceeded, go here"},
		{.what Here, .desc "address", .here 12640, .there 360,.type Relativedictionary, .p L_C_get_opened },
	{.what Sourceline, .desc "dd M_drop	; ( index ) (R index ) returned false, could not open-file. write error message"},
		{.what Here, .desc "address", .here 12648, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 12656, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd L_open_failed		; open error"},
		{.what Here, .desc "address", .here 12664, .there 360,.type Relativedictionary, .p L_open_failed },
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 12672, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 12680, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd C_dot	; show the index"},
		{.what Here, .desc "address", .here 12688, .there 360,.type Relativedictionary, .p C_dot },
	{.what Sourceline, .desc "dd C_cr"},
		{.what Here, .desc "address", .here 12696, .there 360,.type Relativedictionary, .p C_cr },
	{.what Sourceline, .desc "dd C_abort	; abort on open error. How about terminate?"},
		{.what Here, .desc "address", .here 12704, .there 360,.type Relativedictionary, .p C_abort },
	{.what Sourceline, .desc "L_C_get_opened:	; ( index fd ) (R index ) store the opened fd"},
	{.what Sourceline, .desc "dd M_dup	; ( index fd fd )"},
		{.what Here, .desc "address", .here 12712, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_rpop	; ( index fd fd index )"},
		{.what Here, .desc "address", .here 12720, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd C_cells	; ( index fd fd index*cellsize ) number of bytes"},
		{.what Here, .desc "address", .here 12728, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd MV_Bufferfds"},
		{.what Here, .desc "address", .here 12736, .there 360,.type Relativedictionary, .p MV_Bufferfds },
	{.what Sourceline, .desc "dd M_plus	; ( index fd fd index*cellsize+'Bufferfds ) address of the filename's counted string"},
		{.what Here, .desc "address", .here 12744, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_store	; ( index fd )"},
		{.what Here, .desc "address", .here 12752, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "L_C_get:		; ( index fd ) when fd != -1"},
	{.what Sourceline, .desc "dd MV_Tib"},
		{.what Here, .desc "address", .here 12760, .there 360,.type Relativedictionary, .p MV_Tib },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 12768, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 4096		; ( index fd Tib 4096 )"},
		{.what Here, .desc "value", .here 12776, .there 360,.type Absolute, .p 4096 },
	{.what Sourceline, .desc "dd C_read_file ; ( index read_count ioresult )"},
		{.what Here, .desc "address", .here 12784, .there 360,.type Relativedictionary, .p C_read_file },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 12792, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_get_read_failed"},
		{.what Here, .desc "address", .here 12800, .there 360,.type Relativedictionary, .p L_C_get_read_failed },
	{.what Sourceline, .desc "dd C_nip	; ( read_count )"},
		{.what Here, .desc "address", .here 12808, .there 360,.type Relativedictionary, .p C_nip },
	{.what Sourceline, .desc "dd M_dup	; ( read_count read_count )"},
		{.what Here, .desc "address", .here 12816, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 12824, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_get_read_0"},
		{.what Here, .desc "address", .here 12832, .there 360,.type Relativedictionary, .p L_C_get_read_0 },
	{.what Sourceline, .desc "dd M_dup	; read_count > 0 ( read_count read_count )"},
		{.what Here, .desc "address", .here 12840, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 12848, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 4096"},
		{.what Here, .desc "value", .here 12856, .there 360,.type Absolute, .p 4096 },
	{.what Sourceline, .desc "dd M_equal"},
		{.what Here, .desc "address", .here 12864, .there 360,.type Relativedictionary, .p M_equal },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 12872, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_get_read_successful"},
		{.what Here, .desc "address", .here 12880, .there 360,.type Relativedictionary, .p L_C_get_read_successful },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 12888, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd L_C_get_too_long ; could not find a delimiter in 4096 bytes, reevaluate"},
		{.what Here, .desc "address", .here 12896, .there 360,.type Relativedictionary, .p L_C_get_too_long },
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 12904, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 12912, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd C_dot	; show the read_count"},
		{.what Here, .desc "address", .here 12920, .there 360,.type Relativedictionary, .p C_dot },
	{.what Sourceline, .desc "dd C_cr"},
		{.what Here, .desc "address", .here 12928, .there 360,.type Relativedictionary, .p C_cr },
	{.what Sourceline, .desc "dd C_abort	; abort on read error. How about terminate?"},
		{.what Here, .desc "address", .here 12936, .there 360,.type Relativedictionary, .p C_abort },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 12944, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "L_C_get_read_failed:"},
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 12952, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd L_read_failed ; read error"},
		{.what Here, .desc "address", .here 12960, .there 360,.type Relativedictionary, .p L_read_failed },
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 12968, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 12976, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd C_dot	; show the index"},
		{.what Here, .desc "address", .here 12984, .there 360,.type Relativedictionary, .p C_dot },
	{.what Sourceline, .desc "dd C_cr"},
		{.what Here, .desc "address", .here 12992, .there 360,.type Relativedictionary, .p C_cr },
	{.what Sourceline, .desc "dd C_abort	; abort on read error. How about terminate?"},
		{.what Here, .desc "address", .here 13000, .there 360,.type Relativedictionary, .p C_abort },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 13008, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "L_C_get_read_0:"},
	{.what Sourceline, .desc "dd M_drop	; ( ) read_count == 0"},
		{.what Here, .desc "address", .here 13016, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd MV_Eof"},
		{.what Here, .desc "address", .here 13024, .there 360,.type Relativedictionary, .p MV_Eof },
	{.what Sourceline, .desc "dd C_on		; end of file, qrestore_input"},
		{.what Here, .desc "address", .here 13032, .there 360,.type Relativedictionary, .p C_on },
	{.what Sourceline, .desc "dd C_restore_input"},
		{.what Here, .desc "address", .here 13040, .there 360,.type Relativedictionary, .p C_restore_input },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 13048, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "L_C_get_read_successful:"},
	{.what Sourceline, .desc "dd M_exitcolon	; ( read_count ) successful read, get out"},
		{.what Here, .desc "address", .here 13056, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"parse\" parse 5 ; ( read_count -- 'Wordb ) Wordb has a counted string. read_count bytes read into Tib"},
		{.what Here, .desc "link",.here 13064, .there 360,.type Relativedictionary, .p 12432 },
		{.what Here, .desc "len", .here 13072, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 13073, .there 360,.type Chars, .str "parse" },
		{.what Here, .desc "cfa", .here 13080, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_dup	; ( read_count read_count ) check if count > 255 bytes, then invalid word"},
		{.what Here, .desc "address", .here 13088, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 13096, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 256"},
		{.what Here, .desc "value", .here 13104, .there 360,.type Absolute, .p 256 },
	{.what Sourceline, .desc "dd M_less"},
		{.what Here, .desc "address", .here 13112, .there 360,.type Relativedictionary, .p M_less },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 13120, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_parse_1"},
		{.what Here, .desc "address", .here 13128, .there 360,.type Relativedictionary, .p L_C_parse_1 },
	{.what Sourceline, .desc "dd M_dup	; ( read_count read_count )"},
		{.what Here, .desc "address", .here 13136, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd MV_Wordb"},
		{.what Here, .desc "address", .here 13144, .there 360,.type Relativedictionary, .p MV_Wordb },
	{.what Sourceline, .desc "dd M_cstore	; ( store read_count at Wordb[0] )"},
		{.what Here, .desc "address", .here 13152, .there 360,.type Relativedictionary, .p M_cstore },
	{.what Sourceline, .desc "dd M_rpush"},
		{.what Here, .desc "address", .here 13160, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd MV_Tib"},
		{.what Here, .desc "address", .here 13168, .there 360,.type Relativedictionary, .p MV_Tib },
	{.what Sourceline, .desc "dd MV_Wordb"},
		{.what Here, .desc "address", .here 13176, .there 360,.type Relativedictionary, .p MV_Wordb },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 13184, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 13192, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd M_plus	; ( 'Tib 'Wordb+1 ) (R read_count )"},
		{.what Here, .desc "address", .here 13200, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_rpop	; ( 'Tib 'Wordb+1 read_count )"},
		{.what Here, .desc "address", .here 13208, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_cmove	; copy bytes from Tib to Wordb to make it a counted string at Wordb"},
		{.what Here, .desc "address", .here 13216, .there 360,.type Relativedictionary, .p M_cmove },
	{.what Sourceline, .desc "dd MV_Wordb"},
		{.what Here, .desc "address", .here 13224, .there 360,.type Relativedictionary, .p MV_Wordb },
	{.what Sourceline, .desc "dd M_exitcolon	; ( 'Wordb ) Wordb has the counted string"},
		{.what Here, .desc "address", .here 13232, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "L_C_parse_1:"},
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 13240, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd L_C_long_word"},
		{.what Here, .desc "address", .here 13248, .there 360,.type Relativedictionary, .p L_C_long_word },
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 13256, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 13264, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd C_cr"},
		{.what Here, .desc "address", .here 13272, .there 360,.type Relativedictionary, .p C_cr },
	{.what Sourceline, .desc "dd C_abort"},
		{.what Here, .desc "address", .here 13280, .there 360,.type Relativedictionary, .p C_abort },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 13288, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"word\" word 4 ; ( -- 'Wordb ) read from #n/Infd/word into Tib and then parse to a counted string in Wordb"},
		{.what Here, .desc "link",.here 13296, .there 360,.type Relativedictionary, .p 13064 },
		{.what Here, .desc "len", .here 13304, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 13305, .there 360,.type Chars, .str "word" },
		{.what Here, .desc "cfa", .here 13312, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MC_WORDNUM"},
		{.what Here, .desc "address", .here 13320, .there 360,.type Relativedictionary, .p MC_WORDNUM },
	{.what Sourceline, .desc "dd C_get"},
		{.what Here, .desc "address", .here 13328, .there 360,.type Relativedictionary, .p C_get },
	{.what Sourceline, .desc "dd C_parse"},
		{.what Here, .desc "address", .here 13336, .there 360,.type Relativedictionary, .p C_parse },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 13344, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"line\" line 4 ; ( -- count ) read from #n/Infd/line into Tib"},
		{.what Here, .desc "link",.here 13352, .there 360,.type Relativedictionary, .p 13296 },
		{.what Here, .desc "len", .here 13360, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 13361, .there 360,.type Chars, .str "line" },
		{.what Here, .desc "cfa", .here 13368, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MC_LINENUM"},
		{.what Here, .desc "address", .here 13376, .there 360,.type Relativedictionary, .p MC_LINENUM },
	{.what Sourceline, .desc "dd C_get"},
		{.what Here, .desc "address", .here 13384, .there 360,.type Relativedictionary, .p C_get },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 13392, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"doublequote\" doublequote 11 ; ( -- count ) read from #n/Infd/doublequote into Tib"},
		{.what Here, .desc "link",.here 13400, .there 360,.type Relativedictionary, .p 13352 },
		{.what Here, .desc "len", .here 13408, .there 360,.type Byte, .b 0 + 11 },
		{.what Here, .desc "name",.here 13409, .there 360,.type Chars, .str "doublequote" },
		{.what Here, .desc "cfa", .here 13416, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MC_DOUBLEQUOTENUM"},
		{.what Here, .desc "address", .here 13424, .there 360,.type Relativedictionary, .p MC_DOUBLEQUOTENUM },
	{.what Sourceline, .desc "dd C_get"},
		{.what Here, .desc "address", .here 13432, .there 360,.type Relativedictionary, .p C_get },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 13440, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"cdoublequote\" counted_doublequote 11 ; ( -- 'Wordb ) read from #n/Infd/doublequote into Tib and then parse to a counted string in Wordb"},
		{.what Here, .desc "link",.here 13448, .there 360,.type Relativedictionary, .p 13400 },
		{.what Here, .desc "len", .here 13456, .there 360,.type Byte, .b 0 + 11 },
		{.what Here, .desc "name",.here 13457, .there 360,.type Chars, .str "cdoublequote" },
		{.what Here, .desc "cfa", .here 13464, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MC_DOUBLEQUOTENUM"},
		{.what Here, .desc "address", .here 13472, .there 360,.type Relativedictionary, .p MC_DOUBLEQUOTENUM },
	{.what Sourceline, .desc "dd C_get"},
		{.what Here, .desc "address", .here 13480, .there 360,.type Relativedictionary, .p C_get },
	{.what Sourceline, .desc "dd C_parse"},
		{.what Here, .desc "address", .here 13488, .there 360,.type Relativedictionary, .p C_parse },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 13496, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"closeparen\" closeparen 10 ; ( -- count ) read from #n/Infd/closeparen"},
		{.what Here, .desc "link",.here 13504, .there 360,.type Relativedictionary, .p 13448 },
		{.what Here, .desc "len", .here 13512, .there 360,.type Byte, .b 0 + 10 },
		{.what Here, .desc "name",.here 13513, .there 360,.type Chars, .str "closeparen" },
		{.what Here, .desc "cfa", .here 13520, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MC_CLOSEPARENNUM"},
		{.what Here, .desc "address", .here 13528, .there 360,.type Relativedictionary, .p MC_CLOSEPARENNUM },
	{.what Sourceline, .desc "dd C_get"},
		{.what Here, .desc "address", .here 13536, .there 360,.type Relativedictionary, .p C_get },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 13544, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"findname\" findname 8 ; ( a1 -- a2 f ) ; loop through the dictionary names"},
		{.what Here, .desc "link",.here 13552, .there 360,.type Relativedictionary, .p 13504 },
		{.what Here, .desc "len", .here 13560, .there 360,.type Byte, .b 0 + 8 },
		{.what Here, .desc "name",.here 13561, .there 360,.type Chars, .str "findname" },
		{.what Here, .desc "cfa", .here 13568, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Findadr"},
		{.what Here, .desc "address", .here 13576, .there 360,.type Relativedictionary, .p MV_Findadr },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 13584, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd MV_Dtop"},
		{.what Here, .desc "address", .here 13592, .there 360,.type Relativedictionary, .p MV_Dtop },
	{.what Sourceline, .desc "dd M_fetch	; get latest dictionary link"},
		{.what Here, .desc "address", .here 13600, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "L_C_findname:"},
	{.what Sourceline, .desc "dd C_qdup"},
		{.what Here, .desc "address", .here 13608, .there 360,.type Relativedictionary, .p C_qdup },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 13616, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_findname_1	; seached until the first dictionary entry get out"},
		{.what Here, .desc "address", .here 13624, .there 360,.type Relativedictionary, .p L_C_findname_1 },
	{.what Sourceline, .desc "dd M_dup	; ( a -- a a )"},
		{.what Here, .desc "address", .here 13632, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd C_cell_plus	; ( a a -- a a+8) lenth + initial name address"},
		{.what Here, .desc "address", .here 13640, .there 360,.type Relativedictionary, .p C_cell_plus },
	{.what Sourceline, .desc "dd M_cfetch	; ( a a+8 -- a immediate|hidden|len) length + initial name"},
		{.what Here, .desc "address", .here 13648, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 13656, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 64		; check the reveal'ed flag 1=hidden, 0=reveal"},
		{.what Here, .desc "value", .here 13664, .there 360,.type Absolute, .p 64 },
	{.what Sourceline, .desc "dd M_binand	; if hidden, goto L_C_findname_3 else L_C_findname_2"},
		{.what Here, .desc "address", .here 13672, .there 360,.type Relativedictionary, .p M_binand },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 13680, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_findname_2"},
		{.what Here, .desc "address", .here 13688, .there 360,.type Relativedictionary, .p L_C_findname_2 },
	{.what Sourceline, .desc "dd M_fetch	; smudge'd dictionary entry, get the previous entry"},
		{.what Here, .desc "address", .here 13696, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 13704, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_findname_3"},
		{.what Here, .desc "address", .here 13712, .there 360,.type Relativedictionary, .p L_C_findname_3 },
	{.what Sourceline, .desc "L_C_findname_2:		; reveal'ed dictionary entry"},
	{.what Sourceline, .desc "dd M_dup	; ( a1 -- a1 a1)"},
		{.what Here, .desc "address", .here 13720, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd C_cell_plus	; ( a1 a1 -- a1 a1+8)"},
		{.what Here, .desc "address", .here 13728, .there 360,.type Relativedictionary, .p C_cell_plus },
	{.what Sourceline, .desc "dd C_count	; ( a1 a1+8 -- a1 a1+8+1 n )"},
		{.what Here, .desc "address", .here 13736, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 13744, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 63"},
		{.what Here, .desc "value", .here 13752, .there 360,.type Absolute, .p 63 },
	{.what Sourceline, .desc "dd M_binand	; ( a1 a1+8+1 n 63 -- a1 a1+8+1 n&63=len )"},
		{.what Here, .desc "address", .here 13760, .there 360,.type Relativedictionary, .p M_binand },
	{.what Sourceline, .desc "dd MV_Findadr"},
		{.what Here, .desc "address", .here 13768, .there 360,.type Relativedictionary, .p MV_Findadr },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 13776, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_count	; ( a1 a1+8+1 len=n&63 a2 -- a1 a1+8+1 n&63 a2+1 n2 )"},
		{.what Here, .desc "address", .here 13784, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_compare	; ( a1 a1+8+1 len=n&63 a2+1 n2 -- a1 f ) compare dictionary entry with name"},
		{.what Here, .desc "address", .here 13792, .there 360,.type Relativedictionary, .p C_compare },
	{.what Sourceline, .desc "dd C_0eq	; found a match?"},
		{.what Here, .desc "address", .here 13800, .there 360,.type Relativedictionary, .p C_0eq },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 13808, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_findname_4		; no match"},
		{.what Here, .desc "address", .here 13816, .there 360,.type Relativedictionary, .p L_C_findname_4 },
	{.what Sourceline, .desc "dd C_cell_plus	; match found"},
		{.what Here, .desc "address", .here 13824, .there 360,.type Relativedictionary, .p C_cell_plus },
	{.what Sourceline, .desc "dd C_true"},
		{.what Here, .desc "address", .here 13832, .there 360,.type Relativedictionary, .p C_true },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 13840, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "L_C_findname_4:"},
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 13848, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "L_C_findname_3:"},
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 13856, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_findname"},
		{.what Here, .desc "address", .here 13864, .there 360,.type Relativedictionary, .p L_C_findname },
	{.what Sourceline, .desc "L_C_findname_1:"},
	{.what Sourceline, .desc "dd MV_Findadr"},
		{.what Here, .desc "address", .here 13872, .there 360,.type Relativedictionary, .p MV_Findadr },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 13880, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_false"},
		{.what Here, .desc "address", .here 13888, .there 360,.type Relativedictionary, .p C_false },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 13896, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"find\" find 4 ; ( a1 -- a2 f )?"},
		{.what Here, .desc "link",.here 13904, .there 360,.type Relativedictionary, .p 13552 },
		{.what Here, .desc "len", .here 13912, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 13913, .there 360,.type Chars, .str "find" },
		{.what Here, .desc "cfa", .here 13920, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_findname"},
		{.what Here, .desc "address", .here 13928, .there 360,.type Relativedictionary, .p C_findname },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 13936, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_find"},
		{.what Here, .desc "address", .here 13944, .there 360,.type Relativedictionary, .p L_C_find },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 13952, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_cfetch"},
		{.what Here, .desc "address", .here 13960, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 13968, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_over"},
		{.what Here, .desc "address", .here 13976, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 13984, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 63"},
		{.what Here, .desc "value", .here 13992, .there 360,.type Absolute, .p 63 },
	{.what Sourceline, .desc "dd M_binand"},
		{.what Here, .desc "address", .here 14000, .there 360,.type Relativedictionary, .p M_binand },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 14008, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd C_1plus"},
		{.what Here, .desc "address", .here 14016, .there 360,.type Relativedictionary, .p C_1plus },
	{.what Sourceline, .desc "dd C_aligned"},
		{.what Here, .desc "address", .here 14024, .there 360,.type Relativedictionary, .p C_aligned },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 14032, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 14040, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 128"},
		{.what Here, .desc "value", .here 14048, .there 360,.type Absolute, .p 128 },
	{.what Sourceline, .desc "dd M_binand"},
		{.what Here, .desc "address", .here 14056, .there 360,.type Relativedictionary, .p M_binand },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 14064, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_find_1"},
		{.what Here, .desc "address", .here 14072, .there 360,.type Relativedictionary, .p L_C_find_1 },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 14080, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 14088, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 14096, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_find_2"},
		{.what Here, .desc "address", .here 14104, .there 360,.type Relativedictionary, .p L_C_find_2 },
	{.what Sourceline, .desc "L_C_find_1:"},
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 14112, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1"},
		{.what Here, .desc "value", .here 14120, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "L_C_find_2:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 14128, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 14136, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_find_3"},
		{.what Here, .desc "address", .here 14144, .there 360,.type Relativedictionary, .p L_C_find_3 },
	{.what Sourceline, .desc "L_C_find:"},
	{.what Sourceline, .desc "dd C_false"},
		{.what Here, .desc "address", .here 14152, .there 360,.type Relativedictionary, .p C_false },
	{.what Sourceline, .desc "L_C_find_3:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 14160, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"'\" single_quote 1"},
		{.what Here, .desc "link",.here 14168, .there 360,.type Relativedictionary, .p 13904 },
		{.what Here, .desc "len", .here 14176, .there 360,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 14177, .there 360,.type Chars, .str "'" },
		{.what Here, .desc "cfa", .here 14184, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_word"},
		{.what Here, .desc "address", .here 14192, .there 360,.type Relativedictionary, .p C_word },
	{.what Sourceline, .desc "dd C_find"},
		{.what Here, .desc "address", .here 14200, .there 360,.type Relativedictionary, .p C_find },
	{.what Sourceline, .desc "dd C_0eq"},
		{.what Here, .desc "address", .here 14208, .there 360,.type Relativedictionary, .p C_0eq },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 14216, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_single_quote"},
		{.what Here, .desc "address", .here 14224, .there 360,.type Relativedictionary, .p L_C_single_quote },
	{.what Sourceline, .desc "dd C_space"},
		{.what Here, .desc "address", .here 14232, .there 360,.type Relativedictionary, .p C_space },
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 14240, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 14248, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 14256, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd L170"},
		{.what Here, .desc "address", .here 14264, .there 360,.type Relativedictionary, .p L170 },
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 14272, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 14280, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd C_cr"},
		{.what Here, .desc "address", .here 14288, .there 360,.type Relativedictionary, .p C_cr },
	{.what Sourceline, .desc "dd C_abort"},
		{.what Here, .desc "address", .here 14296, .there 360,.type Relativedictionary, .p C_abort },
	{.what Sourceline, .desc "L_C_single_quote:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 14304, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"?stack\" qstack 6"},
		{.what Here, .desc "link",.here 14312, .there 360,.type Relativedictionary, .p 14168 },
		{.what Here, .desc "len", .here 14320, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 14321, .there 360,.type Chars, .str "?stack" },
		{.what Here, .desc "cfa", .here 14328, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_stackptr"},
		{.what Here, .desc "address", .here 14336, .there 360,.type Relativedictionary, .p M_stackptr },
	{.what Sourceline, .desc "dd MV_S0"},
		{.what Here, .desc "address", .here 14344, .there 360,.type Relativedictionary, .p MV_S0 },
	{.what Sourceline, .desc "dd M_greater"},
		{.what Here, .desc "address", .here 14352, .there 360,.type Relativedictionary, .p M_greater },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 14360, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_qstack"},
		{.what Here, .desc "address", .here 14368, .there 360,.type Relativedictionary, .p L_C_qstack },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 14376, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd L173"},
		{.what Here, .desc "address", .here 14384, .there 360,.type Relativedictionary, .p L173 },
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 14392, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 14400, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd C_cr"},
		{.what Here, .desc "address", .here 14408, .there 360,.type Relativedictionary, .p C_cr },
	{.what Sourceline, .desc "dd C_abort"},
		{.what Here, .desc "address", .here 14416, .there 360,.type Relativedictionary, .p C_abort },
	{.what Sourceline, .desc "L_C_qstack:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 14424, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "dd MC_STDOUT	; ( str -- str 1) ; debug code to show the word found"},
		{.what Here, .desc "address", .here 14432, .there 360,.type Relativedictionary, .p MC_STDOUT },
	{.what Sourceline, .desc "dd M_over		; ( str 1 str )"},
		{.what Here, .desc "address", .here 14440, .there 360,.type Relativedictionary, .p M_over },
	{.what Sourceline, .desc "dd C_count 		; ( str 1 a n)"},
		{.what Here, .desc "address", .here 14448, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd M_syswrite"},
		{.what Here, .desc "address", .here 14456, .there 360,.type Relativedictionary, .p M_syswrite },
	{.what Sourceline, .desc "dd M_drop		; drop the return value of write"},
		{.what Here, .desc "address", .here 14464, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "CENTRY \"interpret\" interpret 9 ; there is stuff in TIB to be interpreted >In and >Limit are set"},
		{.what Here, .desc "link",.here 14472, .there 360,.type Relativedictionary, .p 14312 },
		{.what Here, .desc "len", .here 14480, .there 360,.type Byte, .b 0 + 9 },
		{.what Here, .desc "name",.here 14481, .there 360,.type Chars, .str "interpret" },
		{.what Here, .desc "cfa", .here 14488, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "L_C_interpret:"},
	{.what Sourceline, .desc "dd C_word	; ( -- 'Wordb ) Wordb has the counted string"},
		{.what Here, .desc "address", .here 14496, .there 360,.type Relativedictionary, .p C_word },
	{.what Sourceline, .desc "dd C_find	; ( 'Wordb -- a1 f )"},
		{.what Here, .desc "address", .here 14504, .there 360,.type Relativedictionary, .p C_find },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 14512, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_interpret_2"},
		{.what Here, .desc "address", .here 14520, .there 360,.type Relativedictionary, .p L_C_interpret_2 },
	{.what Sourceline, .desc "dd M_execute	; found in dictionary, execute"},
		{.what Here, .desc "address", .here 14528, .there 360,.type Relativedictionary, .p M_execute },
	{.what Sourceline, .desc "dd C_qstack"},
		{.what Here, .desc "address", .here 14536, .there 360,.type Relativedictionary, .p C_qstack },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 14544, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_interpret_3"},
		{.what Here, .desc "address", .here 14552, .there 360,.type Relativedictionary, .p L_C_interpret_3 },
	{.what Sourceline, .desc "L_C_interpret_2:	; ( 'Wordb ) not found in the dictionary, check for number?"},
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 14560, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_number"},
		{.what Here, .desc "address", .here 14568, .there 360,.type Relativedictionary, .p C_number },
	{.what Sourceline, .desc "dd C_0eq"},
		{.what Here, .desc "address", .here 14576, .there 360,.type Relativedictionary, .p C_0eq },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 14584, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_interpret_4"},
		{.what Here, .desc "address", .here 14592, .there 360,.type Relativedictionary, .p L_C_interpret_4 },
	{.what Sourceline, .desc "dd C_space	; the word is neither in the dictionary nor a number"},
		{.what Here, .desc "address", .here 14600, .there 360,.type Relativedictionary, .p C_space },
	{.what Sourceline, .desc "dd C_type	; show the word"},
		{.what Here, .desc "address", .here 14608, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 14616, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd L180	; error I?"},
		{.what Here, .desc "address", .here 14624, .there 360,.type Relativedictionary, .p L180 },
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 14632, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 14640, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd C_cr"},
		{.what Here, .desc "address", .here 14648, .there 360,.type Relativedictionary, .p C_cr },
	{.what Sourceline, .desc "dd C_abort"},
		{.what Here, .desc "address", .here 14656, .there 360,.type Relativedictionary, .p C_abort },
	{.what Sourceline, .desc "L_C_interpret_4:		; is a number"},
	{.what Sourceline, .desc "L_C_interpret_3:"},
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 14664, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_interpret"},
		{.what Here, .desc "address", .here 14672, .there 360,.type Relativedictionary, .p L_C_interpret },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 14680, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"create\" create 6 ; compiles dictionary header until the pfa (link, len, name, cfa)"},
		{.what Here, .desc "link",.here 14688, .there 360,.type Relativedictionary, .p 14472 },
		{.what Here, .desc "len", .here 14696, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 14697, .there 360,.type Chars, .str "create" },
		{.what Here, .desc "cfa", .here 14704, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_align	; sets Dp = aligned here"},
		{.what Here, .desc "address", .here 14712, .there 360,.type Relativedictionary, .p C_align },
	{.what Sourceline, .desc "dd C_here	; ( -- here )"},
		{.what Here, .desc "address", .here 14720, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_rpush	; ( -- ) (R -- linkaddr )"},
		{.what Here, .desc "address", .here 14728, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd MV_Dtop	; ( -- Dtop ) (R -- linkaddr )"},
		{.what Here, .desc "address", .here 14736, .there 360,.type Relativedictionary, .p MV_Dtop },
	{.what Sourceline, .desc "dd M_fetch	; ( Dtop -- dtop ) (R -- linkaddr )"},
		{.what Here, .desc "address", .here 14744, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_comma	; ( dtop -- ) (R -- linkaddr )"},
		{.what Here, .desc "address", .here 14752, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd C_word	; get the word from the input stream ( -- 'counted-string ) in Wordb"},
		{.what Here, .desc "address", .here 14760, .there 360,.type Relativedictionary, .p C_word },
	{.what Sourceline, .desc "dd M_dup	; ( a -- a a ) (R -- linkaddr )"},
		{.what Here, .desc "address", .here 14768, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_cfetch	; ( a a -- a len ) (R -- linkaddr )"},
		{.what Here, .desc "address", .here 14776, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd C_here	; ( a len -- a len here ) (R -- linkaddr )"},
		{.what Here, .desc "address", .here 14784, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_xswap	; ( a len here -- a here len ) (R -- linkaddr )"},
		{.what Here, .desc "address", .here 14792, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd C_1plus	; ( a here len -- a here len+1 ) (R -- linkaddr ) using len+1 to copy even the length byte"},
		{.what Here, .desc "address", .here 14800, .there 360,.type Relativedictionary, .p C_1plus },
	{.what Sourceline, .desc "dd M_dup	; ( a here len+1 -- a here len+1 len+1 ) (R -- linkaddr )"},
		{.what Here, .desc "address", .here 14808, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_rpush	; ( a here len+1 len+1 -- a here len+1 ) (R -- linkaddr len+1 )"},
		{.what Here, .desc "address", .here 14816, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_cmove	; ( a here len+1 -- ) (R -- linkaddr len+1 )"},
		{.what Here, .desc "address", .here 14824, .there 360,.type Relativedictionary, .p M_cmove },
	{.what Sourceline, .desc "dd M_rpop	; ( -- len+1 ) (R -- linkaddr )"},
		{.what Here, .desc "address", .here 14832, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd C_allot	; ( -- ) (R -- linkaddr ) here = here+len+1"},
		{.what Here, .desc "address", .here 14840, .there 360,.type Relativedictionary, .p C_allot },
	{.what Sourceline, .desc "dd C_align	; sets Dp = aligned here"},
		{.what Here, .desc "address", .here 14848, .there 360,.type Relativedictionary, .p C_align },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 14856, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd M_variable"},
		{.what Here, .desc "address", .here 14864, .there 360,.type Relativedictionary, .p M_variable },
	{.what Sourceline, .desc "dd M_fetch	; ( -- variablecfa) (R -- linkaddr )"},
		{.what Here, .desc "address", .here 14872, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_comma	; ( -- ) put the variablecfa into the cfa"},
		{.what Here, .desc "address", .here 14880, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd M_rpop	; ( -- linkaddr) (R -- )"},
		{.what Here, .desc "address", .here 14888, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd MV_Dtop"},
		{.what Here, .desc "address", .here 14896, .there 360,.type Relativedictionary, .p MV_Dtop },
	{.what Sourceline, .desc "dd M_store	; Dtop = just created link address"},
		{.what Here, .desc "address", .here 14904, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 14912, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"variable\" variable 8 ; compile to put the there then on the stack"},
		{.what Here, .desc "link",.here 14920, .there 360,.type Relativedictionary, .p 14688 },
		{.what Here, .desc "len", .here 14928, .there 360,.type Byte, .b 0 + 8 },
		{.what Here, .desc "name",.here 14929, .there 360,.type Chars, .str "variable" },
		{.what Here, .desc "cfa", .here 14936, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_create"},
		{.what Here, .desc "address", .here 14944, .there 360,.type Relativedictionary, .p C_create },
	{.what Sourceline, .desc "dd C_there"},
		{.what Here, .desc "address", .here 14952, .there 360,.type Relativedictionary, .p C_there },
	{.what Sourceline, .desc "dd C_comma	; put the next available variable location in pfa"},
		{.what Here, .desc "address", .here 14960, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 14968, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 14976, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd C_cells"},
		{.what Here, .desc "address", .here 14984, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd C_vallot	; there = there+8, stored at Vp"},
		{.what Here, .desc "address", .here 14992, .there 360,.type Relativedictionary, .p C_vallot },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 15000, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"constant\" constant 8 ; ( n -- ) do the same as variable but change the cfa to (constant)"},
		{.what Here, .desc "link",.here 15008, .there 360,.type Relativedictionary, .p 14920 },
		{.what Here, .desc "len", .here 15016, .there 360,.type Byte, .b 0 + 8 },
		{.what Here, .desc "name",.here 15017, .there 360,.type Chars, .str "constant" },
		{.what Here, .desc "cfa", .here 15024, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_create	; create dictionary header upto the cfa"},
		{.what Here, .desc "address", .here 15032, .there 360,.type Relativedictionary, .p C_create },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 15040, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd M_constant"},
		{.what Here, .desc "address", .here 15048, .there 360,.type Relativedictionary, .p M_constant },
	{.what Sourceline, .desc "dd M_fetch	; ( Contstantcfa -- (constant) )"},
		{.what Here, .desc "address", .here 15056, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_here	; ( (constant) -- (constant) here )"},
		{.what Here, .desc "address", .here 15064, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 15072, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 15080, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd C_cells	; ( (constant) here -- (constant) here 8 )"},
		{.what Here, .desc "address", .here 15088, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd M_minus	; ( (constant) here 8 -- (constant) here-8 )"},
		{.what Here, .desc "address", .here 15096, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd M_store	; ( (constant) here-8 -- ) changed cfa from (variable) to (constant) "},
		{.what Here, .desc "address", .here 15104, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd C_comma	; store n into the dictionary"},
		{.what Here, .desc "address", .here 15112, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 15120, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"immediate\" immediate 9"},
		{.what Here, .desc "link",.here 15128, .there 360,.type Relativedictionary, .p 15008 },
		{.what Here, .desc "len", .here 15136, .there 360,.type Byte, .b 0 + 9 },
		{.what Here, .desc "name",.here 15137, .there 360,.type Chars, .str "immediate" },
		{.what Here, .desc "cfa", .here 15144, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Dp"},
		{.what Here, .desc "address", .here 15152, .there 360,.type Relativedictionary, .p MV_Dp },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 15160, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_cell_plus"},
		{.what Here, .desc "address", .here 15168, .there 360,.type Relativedictionary, .p C_cell_plus },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 15176, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_cfetch"},
		{.what Here, .desc "address", .here 15184, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 15192, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 128"},
		{.what Here, .desc "value", .here 15200, .there 360,.type Absolute, .p 128 },
	{.what Sourceline, .desc "dd M_binor"},
		{.what Here, .desc "address", .here 15208, .there 360,.type Relativedictionary, .p M_binor },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 15216, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_cstore"},
		{.what Here, .desc "address", .here 15224, .there 360,.type Relativedictionary, .p M_cstore },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 15232, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \">cfa\" tocfa 4"},
		{.what Here, .desc "link",.here 15240, .there 360,.type Relativedictionary, .p 15128 },
		{.what Here, .desc "len", .here 15248, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 15249, .there 360,.type Chars, .str ">cfa" },
		{.what Here, .desc "cfa", .here 15256, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 15264, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 15272, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 63"},
		{.what Here, .desc "value", .here 15280, .there 360,.type Absolute, .p 63 },
	{.what Sourceline, .desc "dd M_binand"},
		{.what Here, .desc "address", .here 15288, .there 360,.type Relativedictionary, .p M_binand },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 15296, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd C_aligned"},
		{.what Here, .desc "address", .here 15304, .there 360,.type Relativedictionary, .p C_aligned },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 15312, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"compile\" compile 7"},
		{.what Here, .desc "link",.here 15320, .there 360,.type Relativedictionary, .p 15240 },
		{.what Here, .desc "len", .here 15328, .there 360,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 15329, .there 360,.type Chars, .str "compile" },
		{.what Here, .desc "cfa", .here 15336, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_findname"},
		{.what Here, .desc "address", .here 15344, .there 360,.type Relativedictionary, .p C_findname },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 15352, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_compile"},
		{.what Here, .desc "address", .here 15360, .there 360,.type Relativedictionary, .p L_C_compile },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 15368, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_cfetch"},
		{.what Here, .desc "address", .here 15376, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 15384, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 128"},
		{.what Here, .desc "value", .here 15392, .there 360,.type Absolute, .p 128 },
	{.what Sourceline, .desc "dd M_binand"},
		{.what Here, .desc "address", .here 15400, .there 360,.type Relativedictionary, .p M_binand },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 15408, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_compile_1"},
		{.what Here, .desc "address", .here 15416, .there 360,.type Relativedictionary, .p L_C_compile_1 },
	{.what Sourceline, .desc "dd C_tocfa	; immediate"},
		{.what Here, .desc "address", .here 15424, .there 360,.type Relativedictionary, .p C_tocfa },
	{.what Sourceline, .desc "dd M_execute"},
		{.what Here, .desc "address", .here 15432, .there 360,.type Relativedictionary, .p M_execute },
	{.what Sourceline, .desc "dd C_qstack"},
		{.what Here, .desc "address", .here 15440, .there 360,.type Relativedictionary, .p C_qstack },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 15448, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_compile_2"},
		{.what Here, .desc "address", .here 15456, .there 360,.type Relativedictionary, .p L_C_compile_2 },
	{.what Sourceline, .desc "L_C_compile_1:"},
	{.what Sourceline, .desc "dd C_tocfa"},
		{.what Here, .desc "address", .here 15464, .there 360,.type Relativedictionary, .p C_tocfa },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 15472, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "L_C_compile_2:"},
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 15480, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_compile_3"},
		{.what Here, .desc "address", .here 15488, .there 360,.type Relativedictionary, .p L_C_compile_3 },
	{.what Sourceline, .desc "L_C_compile:"},
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 15496, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_number"},
		{.what Here, .desc "address", .here 15504, .there 360,.type Relativedictionary, .p C_number },
	{.what Sourceline, .desc "dd C_0eq"},
		{.what Here, .desc "address", .here 15512, .there 360,.type Relativedictionary, .p C_0eq },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 15520, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_compile_4"},
		{.what Here, .desc "address", .here 15528, .there 360,.type Relativedictionary, .p L_C_compile_4 },
	{.what Sourceline, .desc "dd C_space"},
		{.what Here, .desc "address", .here 15536, .there 360,.type Relativedictionary, .p C_space },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 15544, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 15552, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd L_C_compile_5"},
		{.what Here, .desc "address", .here 15560, .there 360,.type Relativedictionary, .p L_C_compile_5 },
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 15568, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 15576, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd C_cr"},
		{.what Here, .desc "address", .here 15584, .there 360,.type Relativedictionary, .p C_cr },
	{.what Sourceline, .desc "dd C_abort"},
		{.what Here, .desc "address", .here 15592, .there 360,.type Relativedictionary, .p C_abort },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 15600, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_compile_6"},
		{.what Here, .desc "address", .here 15608, .there 360,.type Relativedictionary, .p L_C_compile_6 },
	{.what Sourceline, .desc "L_C_compile_4:"},
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 15616, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 15624, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 15632, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 15640, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "L_C_compile_6:"},
	{.what Sourceline, .desc "L_C_compile_3:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 15648, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"]\" close_bracket 1"},
		{.what Here, .desc "link",.here 15656, .there 360,.type Relativedictionary, .p 15320 },
		{.what Here, .desc "len", .here 15664, .there 360,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 15665, .there 360,.type Chars, .str "]" },
		{.what Here, .desc "cfa", .here 15672, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_State"},
		{.what Here, .desc "address", .here 15680, .there 360,.type Relativedictionary, .p MV_State },
	{.what Sourceline, .desc "dd C_on"},
		{.what Here, .desc "address", .here 15688, .there 360,.type Relativedictionary, .p C_on },
	{.what Sourceline, .desc "L_C_close_bracket:"},
	{.what Sourceline, .desc "dd C_word"},
		{.what Here, .desc "address", .here 15696, .there 360,.type Relativedictionary, .p C_word },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 15704, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_cfetch"},
		{.what Here, .desc "address", .here 15712, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd C_0eq"},
		{.what Here, .desc "address", .here 15720, .there 360,.type Relativedictionary, .p C_0eq },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 15728, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_close_bracket_1"},
		{.what Here, .desc "address", .here 15736, .there 360,.type Relativedictionary, .p L_C_close_bracket_1 },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 15744, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd C_word"},
		{.what Here, .desc "address", .here 15752, .there 360,.type Relativedictionary, .p C_word },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 15760, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_close_bracket_2"},
		{.what Here, .desc "address", .here 15768, .there 360,.type Relativedictionary, .p L_C_close_bracket_2 },
	{.what Sourceline, .desc "L_C_close_bracket_1:"},
	{.what Sourceline, .desc "dd C_compile"},
		{.what Here, .desc "address", .here 15776, .there 360,.type Relativedictionary, .p C_compile },
	{.what Sourceline, .desc "dd MV_State"},
		{.what Here, .desc "address", .here 15784, .there 360,.type Relativedictionary, .p MV_State },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 15792, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "L_C_close_bracket_2:"},
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 15800, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_close_bracket_3"},
		{.what Here, .desc "address", .here 15808, .there 360,.type Relativedictionary, .p L_C_close_bracket_3 },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 15816, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_close_bracket"},
		{.what Here, .desc "address", .here 15824, .there 360,.type Relativedictionary, .p L_C_close_bracket },
	{.what Sourceline, .desc "L_C_close_bracket_3:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 15832, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"[\" open_bracket 1"},
		{.what Here, .desc "link",.here 15840, .there 360,.type Relativedictionary, .p 15656 },
		{.what Here, .desc "len", .here 15848, .there 360,.type Byte, .b 128 + 1 },
		{.what Here, .desc "name",.here 15849, .there 360,.type Chars, .str "[" },
		{.what Here, .desc "cfa", .here 15856, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_State"},
		{.what Here, .desc "address", .here 15864, .there 360,.type Relativedictionary, .p MV_State },
	{.what Sourceline, .desc "dd C_off"},
		{.what Here, .desc "address", .here 15872, .there 360,.type Relativedictionary, .p C_off },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 15880, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"smudge\" smudge 6"},
		{.what Here, .desc "link",.here 15888, .there 360,.type Relativedictionary, .p 15840 },
		{.what Here, .desc "len", .here 15896, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 15897, .there 360,.type Chars, .str "smudge" },
		{.what Here, .desc "cfa", .here 15904, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Dp"},
		{.what Here, .desc "address", .here 15912, .there 360,.type Relativedictionary, .p MV_Dp },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 15920, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_cell_plus"},
		{.what Here, .desc "address", .here 15928, .there 360,.type Relativedictionary, .p C_cell_plus },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 15936, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_cfetch"},
		{.what Here, .desc "address", .here 15944, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 15952, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 64"},
		{.what Here, .desc "value", .here 15960, .there 360,.type Absolute, .p 64 },
	{.what Sourceline, .desc "dd M_binor"},
		{.what Here, .desc "address", .here 15968, .there 360,.type Relativedictionary, .p M_binor },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 15976, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_cstore"},
		{.what Here, .desc "address", .here 15984, .there 360,.type Relativedictionary, .p M_cstore },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 15992, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"reveal\" reveal 6"},
		{.what Here, .desc "link",.here 16000, .there 360,.type Relativedictionary, .p 15888 },
		{.what Here, .desc "len", .here 16008, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 16009, .there 360,.type Chars, .str "reveal" },
		{.what Here, .desc "cfa", .here 16016, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Dp"},
		{.what Here, .desc "address", .here 16024, .there 360,.type Relativedictionary, .p MV_Dp },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 16032, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_cell_plus"},
		{.what Here, .desc "address", .here 16040, .there 360,.type Relativedictionary, .p C_cell_plus },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 16048, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_cfetch"},
		{.what Here, .desc "address", .here 16056, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 16064, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 64"},
		{.what Here, .desc "value", .here 16072, .there 360,.type Absolute, .p 64 },
	{.what Sourceline, .desc "dd C_invert"},
		{.what Here, .desc "address", .here 16080, .there 360,.type Relativedictionary, .p C_invert },
	{.what Sourceline, .desc "dd M_binand"},
		{.what Here, .desc "address", .here 16088, .there 360,.type Relativedictionary, .p M_binand },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 16096, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_cstore"},
		{.what Here, .desc "address", .here 16104, .there 360,.type Relativedictionary, .p M_cstore },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 16112, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \":\" colon 1"},
		{.what Here, .desc "link",.here 16120, .there 360,.type Relativedictionary, .p 16000 },
		{.what Here, .desc "len", .here 16128, .there 360,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 16129, .there 360,.type Chars, .str ":" },
		{.what Here, .desc "cfa", .here 16136, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_create	; create a dictionary header with (variable) at cfa"},
		{.what Here, .desc "address", .here 16144, .there 360,.type Relativedictionary, .p C_create },
	{.what Sourceline, .desc "dd C_smudge"},
		{.what Here, .desc "address", .here 16152, .there 360,.type Relativedictionary, .p C_smudge },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 16160, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd M_colon"},
		{.what Here, .desc "address", .here 16168, .there 360,.type Relativedictionary, .p M_colon },
	{.what Sourceline, .desc "dd M_fetch	; ( Coloncfa -- (colon) ) fetches the cfa of M_colon"},
		{.what Here, .desc "address", .here 16176, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_here	; ( (colon) -- (colon) here )"},
		{.what Here, .desc "address", .here 16184, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 16192, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 16200, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd C_cells"},
		{.what Here, .desc "address", .here 16208, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd M_minus	; ( (colon) here -- (colon) here-8 )"},
		{.what Here, .desc "address", .here 16216, .there 360,.type Relativedictionary, .p M_minus },
	{.what Sourceline, .desc "dd M_store	; ( (colon) here-8 -- ) change the cfa from (variable) to colon"},
		{.what Here, .desc "address", .here 16224, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd C_close_bracket"},
		{.what Here, .desc "address", .here 16232, .there 360,.type Relativedictionary, .p C_close_bracket },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 16240, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \";\" semicolon 1"},
		{.what Here, .desc "link",.here 16248, .there 360,.type Relativedictionary, .p 16120 },
		{.what Here, .desc "len", .here 16256, .there 360,.type Byte, .b 128 + 1 },
		{.what Here, .desc "name",.here 16257, .there 360,.type Chars, .str ";" },
		{.what Here, .desc "cfa", .here 16264, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 16272, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 16280, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 16288, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd MV_State"},
		{.what Here, .desc "address", .here 16296, .there 360,.type Relativedictionary, .p MV_State },
	{.what Sourceline, .desc "dd C_off"},
		{.what Here, .desc "address", .here 16304, .there 360,.type Relativedictionary, .p C_off },
	{.what Sourceline, .desc "dd C_reveal"},
		{.what Here, .desc "address", .here 16312, .there 360,.type Relativedictionary, .p C_reveal },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 16320, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"recurse\" recurse 7"},
		{.what Here, .desc "link",.here 16328, .there 360,.type Relativedictionary, .p 16248 },
		{.what Here, .desc "len", .here 16336, .there 360,.type Byte, .b 128 + 7 },
		{.what Here, .desc "name",.here 16337, .there 360,.type Chars, .str "recurse" },
		{.what Here, .desc "cfa", .here 16344, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Dp"},
		{.what Here, .desc "address", .here 16352, .there 360,.type Relativedictionary, .p MV_Dp },
	{.what Sourceline, .desc "dd M_fetch"},
		{.what Here, .desc "address", .here 16360, .there 360,.type Relativedictionary, .p M_fetch },
	{.what Sourceline, .desc "dd C_cell_plus"},
		{.what Here, .desc "address", .here 16368, .there 360,.type Relativedictionary, .p C_cell_plus },
	{.what Sourceline, .desc "dd C_tocfa"},
		{.what Here, .desc "address", .here 16376, .there 360,.type Relativedictionary, .p C_tocfa },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 16384, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 16392, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"char\" char 4 ; ( -- c ) fetch the first character of the next word from input"},
		{.what Here, .desc "link",.here 16400, .there 360,.type Relativedictionary, .p 16328 },
		{.what Here, .desc "len", .here 16408, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 16409, .there 360,.type Chars, .str "char" },
		{.what Here, .desc "cfa", .here 16416, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_word	; ( -- a ) puts the address of the counted string from the input on the stack"},
		{.what Here, .desc "address", .here 16424, .there 360,.type Relativedictionary, .p C_word },
	{.what Sourceline, .desc "dd C_1plus	; skip the count"},
		{.what Here, .desc "address", .here 16432, .there 360,.type Relativedictionary, .p C_1plus },
	{.what Sourceline, .desc "dd M_cfetch	; fetch the first character"},
		{.what Here, .desc "address", .here 16440, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 16448, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"literal\" literal 7 ; ( n -- ) adds (literal) n to the dictionary"},
		{.what Here, .desc "link",.here 16456, .there 360,.type Relativedictionary, .p 16400 },
		{.what Here, .desc "len", .here 16464, .there 360,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 16465, .there 360,.type Chars, .str "literal" },
		{.what Here, .desc "cfa", .here 16472, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 16480, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 16488, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 16496, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 16504, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 16512, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"sliteral\" sliteral 8 ; ( -- ) adds (sliteral) a n to the dictionary"},
		{.what Here, .desc "link",.here 16520, .there 360,.type Relativedictionary, .p 16456 },
		{.what Here, .desc "len", .here 16528, .there 360,.type Byte, .b 0 + 8 },
		{.what Here, .desc "name",.here 16529, .there 360,.type Chars, .str "sliteral" },
		{.what Here, .desc "cfa", .here 16536, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 16544, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd M_sliteral"},
		{.what Here, .desc "address", .here 16552, .there 360,.type Relativedictionary, .p M_sliteral },
	{.what Sourceline, .desc "dd C_comma	; adds (sliteral) to the dictionary"},
		{.what Here, .desc "address", .here 16560, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd C_here	; ( here )"},
		{.what Here, .desc "address", .here 16568, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd C_counted_doublequote	; ( here 'Wordb ) Wordb has the counted string"},
		{.what Here, .desc "address", .here 16576, .there 360,.type Relativedictionary, .p C_counted_doublequote },
	{.what Sourceline, .desc "dd M_dup	; ( here 'Wordb 'Wordb )"},
		{.what Here, .desc "address", .here 16584, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_cfetch	; ( here 'Wordb count )"},
		{.what Here, .desc "address", .here 16592, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd C_1plus	; ( here 'Wordb count+1 )"},
		{.what Here, .desc "address", .here 16600, .there 360,.type Relativedictionary, .p C_1plus },
	{.what Sourceline, .desc "dd M_rpush	; ( here 'Wordb ) (R count+1 )"},
		{.what Here, .desc "address", .here 16608, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_xswap	; ( 'Wordb here ) (R count+1 )"},
		{.what Here, .desc "address", .here 16616, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_rfetch	; ( 'Wordb here count+1 ) (R count+1 )"},
		{.what Here, .desc "address", .here 16624, .there 360,.type Relativedictionary, .p M_rfetch },
	{.what Sourceline, .desc "dd M_cmove	; ( ) (R count+1 )"},
		{.what Here, .desc "address", .here 16632, .there 360,.type Relativedictionary, .p M_cmove },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 16640, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd C_allot	; here = here+count+1"},
		{.what Here, .desc "address", .here 16648, .there 360,.type Relativedictionary, .p C_allot },
	{.what Sourceline, .desc "dd C_align	; align here"},
		{.what Here, .desc "address", .here 16656, .there 360,.type Relativedictionary, .p C_align },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 16664, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"string\" string 6 ; ( -- ) store the following word as a counted string onto the dictionary"},
		{.what Here, .desc "link",.here 16672, .there 360,.type Relativedictionary, .p 16520 },
		{.what Here, .desc "len", .here 16680, .there 360,.type Byte, .b 0 + 6 },
		{.what Here, .desc "name",.here 16681, .there 360,.type Chars, .str "string" },
		{.what Here, .desc "cfa", .here 16688, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_word"},
		{.what Here, .desc "address", .here 16696, .there 360,.type Relativedictionary, .p C_word },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 16704, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_cfetch"},
		{.what Here, .desc "address", .here 16712, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd C_1plus"},
		{.what Here, .desc "address", .here 16720, .there 360,.type Relativedictionary, .p C_1plus },
	{.what Sourceline, .desc "dd M_rpush"},
		{.what Here, .desc "address", .here 16728, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd C_here"},
		{.what Here, .desc "address", .here 16736, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_rfetch"},
		{.what Here, .desc "address", .here 16744, .there 360,.type Relativedictionary, .p M_rfetch },
	{.what Sourceline, .desc "dd M_cmove"},
		{.what Here, .desc "address", .here 16752, .there 360,.type Relativedictionary, .p M_cmove },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 16760, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd C_allot"},
		{.what Here, .desc "address", .here 16768, .there 360,.type Relativedictionary, .p C_allot },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 16776, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"[char]\" char_brackets 6 ; take the next character from the input stream during compilation"},
		{.what Here, .desc "link",.here 16784, .there 360,.type Relativedictionary, .p 16672 },
		{.what Here, .desc "len", .here 16792, .there 360,.type Byte, .b 128 + 6 },
		{.what Here, .desc "name",.here 16793, .there 360,.type Chars, .str "[char]" },
		{.what Here, .desc "cfa", .here 16800, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_word	; assuming that the character is a 1-byte word"},
		{.what Here, .desc "address", .here 16808, .there 360,.type Relativedictionary, .p C_word },
	{.what Sourceline, .desc "dd C_1plus"},
		{.what Here, .desc "address", .here 16816, .there 360,.type Relativedictionary, .p C_1plus },
	{.what Sourceline, .desc "dd M_cfetch"},
		{.what Here, .desc "address", .here 16824, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd C_literal"},
		{.what Here, .desc "address", .here 16832, .there 360,.type Relativedictionary, .p C_literal },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 16840, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"[']\" quote_brackets 3 ; take the address of next token from the input stream during compilation"},
		{.what Here, .desc "link",.here 16848, .there 360,.type Relativedictionary, .p 16784 },
		{.what Here, .desc "len", .here 16856, .there 360,.type Byte, .b 128 + 3 },
		{.what Here, .desc "name",.here 16857, .there 360,.type Chars, .str "[']" },
		{.what Here, .desc "cfa", .here 16864, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_single_quote"},
		{.what Here, .desc "address", .here 16872, .there 360,.type Relativedictionary, .p C_single_quote },
	{.what Sourceline, .desc "dd C_literal"},
		{.what Here, .desc "address", .here 16880, .there 360,.type Relativedictionary, .p C_literal },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 16888, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"(\" openparen 1 ; ignore until ) from the input stream during compilation"},
		{.what Here, .desc "link",.here 16896, .there 360,.type Relativedictionary, .p 16848 },
		{.what Here, .desc "len", .here 16904, .there 360,.type Byte, .b 128 + 1 },
		{.what Here, .desc "name",.here 16905, .there 360,.type Chars, .str "(" },
		{.what Here, .desc "cfa", .here 16912, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_closeparen"},
		{.what Here, .desc "address", .here 16920, .there 360,.type Relativedictionary, .p C_closeparen },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 16928, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 16936, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"backslashbackslash\" backslash 1 ; if the line is longer than 4096, C_get throws an error"},
		{.what Here, .desc "link",.here 16944, .there 360,.type Relativedictionary, .p 16896 },
		{.what Here, .desc "len", .here 16952, .there 360,.type Byte, .b 128 + 1 },
		{.what Here, .desc "name",.here 16953, .there 360,.type Chars, .str "\\" },
		{.what Here, .desc "cfa", .here 16960, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_line"},
		{.what Here, .desc "address", .here 16968, .there 360,.type Relativedictionary, .p C_line },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 16976, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"(?abort)\" qabort_parens 8"},
		{.what Here, .desc "link",.here 16984, .there 360,.type Relativedictionary, .p 16944 },
		{.what Here, .desc "len", .here 16992, .there 360,.type Byte, .b 0 + 8 },
		{.what Here, .desc "name",.here 16993, .there 360,.type Chars, .str "(?abort)" },
		{.what Here, .desc "cfa", .here 17000, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_State"},
		{.what Here, .desc "address", .here 17008, .there 360,.type Relativedictionary, .p MV_State },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 17016, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L_C_qabort_parens"},
		{.what Here, .desc "address", .here 17024, .there 360,.type Relativedictionary, .p L_C_qabort_parens },
	{.what Sourceline, .desc "dd C_space"},
		{.what Here, .desc "address", .here 17032, .there 360,.type Relativedictionary, .p C_space },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 17040, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd C_cr"},
		{.what Here, .desc "address", .here 17048, .there 360,.type Relativedictionary, .p C_cr },
	{.what Sourceline, .desc "dd C_abort"},
		{.what Here, .desc "address", .here 17056, .there 360,.type Relativedictionary, .p C_abort },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 17064, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_qabort_parens_1"},
		{.what Here, .desc "address", .here 17072, .there 360,.type Relativedictionary, .p L_C_qabort_parens_1 },
	{.what Sourceline, .desc "L_C_qabort_parens:"},
	{.what Sourceline, .desc "dd C_2drop"},
		{.what Here, .desc "address", .here 17080, .there 360,.type Relativedictionary, .p C_2drop },
	{.what Sourceline, .desc "L_C_qabort_parens_1:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 17088, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"abortbackslash\"\" abort_double_quote 6"},
		{.what Here, .desc "link",.here 17096, .there 360,.type Relativedictionary, .p 16984 },
		{.what Here, .desc "len", .here 17104, .there 360,.type Byte, .b 128 + 6 },
		{.what Here, .desc "name",.here 17105, .there 360,.type Chars, .str "abort\"" },
		{.what Here, .desc "cfa", .here 17112, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_sliteral"},
		{.what Here, .desc "address", .here 17120, .there 360,.type Relativedictionary, .p C_sliteral },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 17128, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd C_qabort_parens"},
		{.what Here, .desc "address", .here 17136, .there 360,.type Relativedictionary, .p C_qabort_parens },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 17144, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 17152, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"backslash\"\" double_quote 1 ; ( | .. \" -- 'text count ) stores string in the dictionary and also leaves the address and count of the string on the stack - to use strings at the interpreter prompt"},
		{.what Here, .desc "link",.here 17160, .there 360,.type Relativedictionary, .p 17096 },
		{.what Here, .desc "len", .here 17168, .there 360,.type Byte, .b 0 + 1 },
		{.what Here, .desc "name",.here 17169, .there 360,.type Chars, .str "\"" },
		{.what Here, .desc "cfa", .here 17176, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_counted_doublequote	; ( 'Wordb )"},
		{.what Here, .desc "address", .here 17184, .there 360,.type Relativedictionary, .p C_counted_doublequote },
	{.what Sourceline, .desc "dd C_count			; ( 'Wordb+1 count )"},
		{.what Here, .desc "address", .here 17192, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd M_rpush			; ( 'Wordb+1 ) (R count )"},
		{.what Here, .desc "address", .here 17200, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd C_here			; ( 'Wordb+1 here ) (R count )"},
		{.what Here, .desc "address", .here 17208, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_rfetch			; ( 'Wordb+1 here count ) (R count )"},
		{.what Here, .desc "address", .here 17216, .there 360,.type Relativedictionary, .p M_rfetch },
	{.what Sourceline, .desc "dd M_cmove"},
		{.what Here, .desc "address", .here 17224, .there 360,.type Relativedictionary, .p M_cmove },
	{.what Sourceline, .desc "dd C_here	; ( here )"},
		{.what Here, .desc "address", .here 17232, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_rpop	; ( here count )"},
		{.what Here, .desc "address", .here 17240, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_dup	; ( here count count )"},
		{.what Here, .desc "address", .here 17248, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd C_allot	; ( here count ) here = here+count"},
		{.what Here, .desc "address", .here 17256, .there 360,.type Relativedictionary, .p C_allot },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 17264, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"cbackslash\"\" counted_double_quote 2 ; ( | ...\" -- 'counted-string ) stores counted string in the dictionary. For use in interpretive mode."},
		{.what Here, .desc "link",.here 17272, .there 360,.type Relativedictionary, .p 17160 },
		{.what Here, .desc "len", .here 17280, .there 360,.type Byte, .b 0 + 2 },
		{.what Here, .desc "name",.here 17281, .there 360,.type Chars, .str "c\"" },
		{.what Here, .desc "cfa", .here 17288, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_counted_doublequote	; ( 'Wordb )"},
		{.what Here, .desc "address", .here 17296, .there 360,.type Relativedictionary, .p C_counted_doublequote },
	{.what Sourceline, .desc "dd M_dup			; ( 'Wordb 'Wordb )"},
		{.what Here, .desc "address", .here 17304, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_cfetch			; ( 'Wordb count )"},
		{.what Here, .desc "address", .here 17312, .there 360,.type Relativedictionary, .p M_cfetch },
	{.what Sourceline, .desc "dd C_1plus			; ( 'Wordb count+1 )"},
		{.what Here, .desc "address", .here 17320, .there 360,.type Relativedictionary, .p C_1plus },
	{.what Sourceline, .desc "dd M_rpush			; ( 'Wordb ) (R count+1 )"},
		{.what Here, .desc "address", .here 17328, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd C_here			; ( 'Wordb here ) (R count+1 )"},
		{.what Here, .desc "address", .here 17336, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_rfetch			; ( 'Wordb here count ) (R count+1 )"},
		{.what Here, .desc "address", .here 17344, .there 360,.type Relativedictionary, .p M_rfetch },
	{.what Sourceline, .desc "dd M_cmove"},
		{.what Here, .desc "address", .here 17352, .there 360,.type Relativedictionary, .p M_cmove },
	{.what Sourceline, .desc "dd C_here	; ( here )"},
		{.what Here, .desc "address", .here 17360, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_rpop	; ( here count+1 )"},
		{.what Here, .desc "address", .here 17368, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd C_allot	; ( here ) here = here+count+1"},
		{.what Here, .desc "address", .here 17376, .there 360,.type Relativedictionary, .p C_allot },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 17384, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"sbackslash\"\" sdouble_quote 2 ; ( | ...\" -- 'text count ) add the string from the input stream to the dictionary as (sliteral) count string - at run-time puts the ( -- addr n) of the counted string on the stack."},
		{.what Here, .desc "link",.here 17392, .there 360,.type Relativedictionary, .p 17272 },
		{.what Here, .desc "len", .here 17400, .there 360,.type Byte, .b 128 + 2 },
		{.what Here, .desc "name",.here 17401, .there 360,.type Chars, .str "s\"" },
		{.what Here, .desc "cfa", .here 17408, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_sliteral"},
		{.what Here, .desc "address", .here 17416, .there 360,.type Relativedictionary, .p C_sliteral },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 17424, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \".backslash\"\" dotstr 2 ; ( | ...\" -- ) .\" = s\" type"},
		{.what Here, .desc "link",.here 17432, .there 360,.type Relativedictionary, .p 17392 },
		{.what Here, .desc "len", .here 17440, .there 360,.type Byte, .b 128 + 2 },
		{.what Here, .desc "name",.here 17441, .there 360,.type Chars, .str ".\"" },
		{.what Here, .desc "cfa", .here 17448, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_sliteral"},
		{.what Here, .desc "address", .here 17456, .there 360,.type Relativedictionary, .p C_sliteral },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 17464, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 17472, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 17480, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 17488, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"if\" if 2"},
		{.what Here, .desc "link",.here 17496, .there 360,.type Relativedictionary, .p 17432 },
		{.what Here, .desc "len", .here 17504, .there 360,.type Byte, .b 128 + 2 },
		{.what Here, .desc "name",.here 17505, .there 360,.type Chars, .str "if" },
		{.what Here, .desc "cfa", .here 17512, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 17520, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 17528, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 17536, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd C_here"},
		{.what Here, .desc "address", .here 17544, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 17552, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 17560, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 17568, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 17576, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"else\" else 4"},
		{.what Here, .desc "link",.here 17584, .there 360,.type Relativedictionary, .p 17496 },
		{.what Here, .desc "len", .here 17592, .there 360,.type Byte, .b 128 + 4 },
		{.what Here, .desc "name",.here 17593, .there 360,.type Chars, .str "else" },
		{.what Here, .desc "cfa", .here 17600, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 17608, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 17616, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 17624, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd C_here"},
		{.what Here, .desc "address", .here 17632, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_rpush"},
		{.what Here, .desc "address", .here 17640, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 17648, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 17656, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 17664, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd C_here"},
		{.what Here, .desc "address", .here 17672, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 17680, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 17688, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 17696, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 17704, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"then\" then 4"},
		{.what Here, .desc "link",.here 17712, .there 360,.type Relativedictionary, .p 17584 },
		{.what Here, .desc "len", .here 17720, .there 360,.type Byte, .b 128 + 4 },
		{.what Here, .desc "name",.here 17721, .there 360,.type Chars, .str "then" },
		{.what Here, .desc "cfa", .here 17728, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_here"},
		{.what Here, .desc "address", .here 17736, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 17744, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 17752, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 17760, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"begin\" begin 5"},
		{.what Here, .desc "link",.here 17768, .there 360,.type Relativedictionary, .p 17712 },
		{.what Here, .desc "len", .here 17776, .there 360,.type Byte, .b 128 + 5 },
		{.what Here, .desc "name",.here 17777, .there 360,.type Chars, .str "begin" },
		{.what Here, .desc "cfa", .here 17784, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_here"},
		{.what Here, .desc "address", .here 17792, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 17800, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"again\" again 5"},
		{.what Here, .desc "link",.here 17808, .there 360,.type Relativedictionary, .p 17768 },
		{.what Here, .desc "len", .here 17816, .there 360,.type Byte, .b 128 + 5 },
		{.what Here, .desc "name",.here 17817, .there 360,.type Chars, .str "again" },
		{.what Here, .desc "cfa", .here 17824, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 17832, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 17840, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 17848, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 17856, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 17864, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"until\" until 5"},
		{.what Here, .desc "link",.here 17872, .there 360,.type Relativedictionary, .p 17808 },
		{.what Here, .desc "len", .here 17880, .there 360,.type Byte, .b 128 + 5 },
		{.what Here, .desc "name",.here 17881, .there 360,.type Chars, .str "until" },
		{.what Here, .desc "cfa", .here 17888, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 17896, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 17904, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 17912, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 17920, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 17928, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"while\" while 5"},
		{.what Here, .desc "link",.here 17936, .there 360,.type Relativedictionary, .p 17872 },
		{.what Here, .desc "len", .here 17944, .there 360,.type Byte, .b 128 + 5 },
		{.what Here, .desc "name",.here 17945, .there 360,.type Chars, .str "while" },
		{.what Here, .desc "cfa", .here 17952, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 17960, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 17968, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 17976, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd C_here"},
		{.what Here, .desc "address", .here 17984, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 17992, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 18000, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 18008, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 18016, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"repeat\" repeat 6"},
		{.what Here, .desc "link",.here 18024, .there 360,.type Relativedictionary, .p 17936 },
		{.what Here, .desc "len", .here 18032, .there 360,.type Byte, .b 128 + 6 },
		{.what Here, .desc "name",.here 18033, .there 360,.type Chars, .str "repeat" },
		{.what Here, .desc "cfa", .here 18040, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 18048, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 18056, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 18064, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 18072, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 18080, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd C_here"},
		{.what Here, .desc "address", .here 18088, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 18096, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 18104, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 18112, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"do\" do 2"},
		{.what Here, .desc "link",.here 18120, .there 360,.type Relativedictionary, .p 18024 },
		{.what Here, .desc "len", .here 18128, .there 360,.type Byte, .b 128 + 2 },
		{.what Here, .desc "name",.here 18129, .there 360,.type Chars, .str "do" },
		{.what Here, .desc "cfa", .here 18136, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 18144, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd M_doinit		; compile this into the definition. Puts limit and index on the run stack at run time"},
		{.what Here, .desc "address", .here 18152, .there 360,.type Relativedictionary, .p M_doinit },
	{.what Sourceline, .desc "dd C_comma		; puts (do) into the dictionary"},
		{.what Here, .desc "address", .here 18160, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 18168, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0			; ( -- 0 )"},
		{.what Here, .desc "value", .here 18176, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd C_here		; ( 0 -- 0 here1 )"},
		{.what Here, .desc "address", .here 18184, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 18192, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"loop\" loop 4 ; ( 0 here1 -- )"},
		{.what Here, .desc "link",.here 18200, .there 360,.type Relativedictionary, .p 18120 },
		{.what Here, .desc "len", .here 18208, .there 360,.type Byte, .b 128 + 4 },
		{.what Here, .desc "name",.here 18209, .there 360,.type Chars, .str "loop" },
		{.what Here, .desc "cfa", .here 18216, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 18224, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd M_doloop		; ( 0 here1 -- 0 here1 (loop) )"},
		{.what Here, .desc "address", .here 18232, .there 360,.type Relativedictionary, .p M_doloop },
	{.what Sourceline, .desc "dd C_comma		; dictionary has (do) ... (loop) ( 0 here1 (loop) -- 0 here1 )"},
		{.what Here, .desc "address", .here 18240, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd C_comma		; dictionary has (do) ... (loop) here1 ( 0 here1 -- 0 )"},
		{.what Here, .desc "address", .here 18248, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd C_qdup"},
		{.what Here, .desc "address", .here 18256, .there 360,.type Relativedictionary, .p C_qdup },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 18264, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L234"},
		{.what Here, .desc "address", .here 18272, .there 360,.type Relativedictionary, .p L234 },
	{.what Sourceline, .desc "dd C_here"},
		{.what Here, .desc "address", .here 18280, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 18288, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 18296, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "L234:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 18304, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CIENTRY \"+loop\" ploop 5"},
		{.what Here, .desc "link",.here 18312, .there 360,.type Relativedictionary, .p 18200 },
		{.what Here, .desc "len", .here 18320, .there 360,.type Byte, .b 128 + 5 },
		{.what Here, .desc "name",.here 18321, .there 360,.type Chars, .str "+loop" },
		{.what Here, .desc "cfa", .here 18328, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 18336, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd M_doploop"},
		{.what Here, .desc "address", .here 18344, .there 360,.type Relativedictionary, .p M_doploop },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 18352, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd C_comma"},
		{.what Here, .desc "address", .here 18360, .there 360,.type Relativedictionary, .p C_comma },
	{.what Sourceline, .desc "dd C_qdup"},
		{.what Here, .desc "address", .here 18368, .there 360,.type Relativedictionary, .p C_qdup },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 18376, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L236"},
		{.what Here, .desc "address", .here 18384, .there 360,.type Relativedictionary, .p L236 },
	{.what Sourceline, .desc "dd C_here"},
		{.what Here, .desc "address", .here 18392, .there 360,.type Relativedictionary, .p C_here },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 18400, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 18408, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "L236:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 18416, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"w/o\" wo 3"},
		{.what Here, .desc "link",.here 18424, .there 360,.type Relativedictionary, .p 18312 },
		{.what Here, .desc "len", .here 18432, .there 360,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 18433, .there 360,.type Chars, .str "w/o" },
		{.what Here, .desc "cfa", .here 18440, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 18448, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 18456, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 18464, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 512"},
		{.what Here, .desc "value", .here 18472, .there 360,.type Absolute, .p 512 },
	{.what Sourceline, .desc "dd M_binor"},
		{.what Here, .desc "address", .here 18480, .there 360,.type Relativedictionary, .p M_binor },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 18488, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 64"},
		{.what Here, .desc "value", .here 18496, .there 360,.type Absolute, .p 64 },
	{.what Sourceline, .desc "dd M_binor"},
		{.what Here, .desc "address", .here 18504, .there 360,.type Relativedictionary, .p M_binor },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 18512, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"r/o\" ro 3"},
		{.what Here, .desc "link",.here 18520, .there 360,.type Relativedictionary, .p 18424 },
		{.what Here, .desc "len", .here 18528, .there 360,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 18529, .there 360,.type Chars, .str "r/o" },
		{.what Here, .desc "cfa", .here 18536, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 18544, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 18552, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 18560, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"r/w\" rw 3"},
		{.what Here, .desc "link",.here 18568, .there 360,.type Relativedictionary, .p 18520 },
		{.what Here, .desc "len", .here 18576, .there 360,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 18577, .there 360,.type Chars, .str "r/w" },
		{.what Here, .desc "cfa", .here 18584, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 18592, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 2"},
		{.what Here, .desc "value", .here 18600, .there 360,.type Absolute, .p 2 },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 18608, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"cstring\" cstring 7 ; ( 'text count o -- o+'pad+1024 ) backslash copy string to pad+o and add a null byte at the end"},
		{.what Here, .desc "link",.here 18616, .there 360,.type Relativedictionary, .p 18568 },
		{.what Here, .desc "len", .here 18624, .there 360,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 18625, .there 360,.type Chars, .str "cstring" },
		{.what Here, .desc "cfa", .here 18632, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_pad	; ( 'text count o 'pad )"},
		{.what Here, .desc "address", .here 18640, .there 360,.type Relativedictionary, .p C_pad },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 18648, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1024		; ( 'text count o 'pad 1024 )"},
		{.what Here, .desc "value", .here 18656, .there 360,.type Absolute, .p 1024 },
	{.what Sourceline, .desc "dd M_plus	; ( 'text count o 'pad+1024 )"},
		{.what Here, .desc "address", .here 18664, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_plus	; ( 'text count o+'pad+1024 ) o=padoffset"},
		{.what Here, .desc "address", .here 18672, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 18680, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_rpush	; ( 'text count o+'pad+1024 ) (R o+'pad+1024 )"},
		{.what Here, .desc "address", .here 18688, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_xswap	; ( 'text o+'pad+1024 count ) (R o+'pad+1024 )"},
		{.what Here, .desc "address", .here 18696, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_dup	; ( 'text o+'pad+1024 count count ) (R o+'pad+1024 )"},
		{.what Here, .desc "address", .here 18704, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_rpush	; ( 'text o+'pad+1024 count ) (R o+'pad+1024  count )"},
		{.what Here, .desc "address", .here 18712, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_cmove	; moves the filename from 'text to o+'pad+1024"},
		{.what Here, .desc "address", .here 18720, .there 360,.type Relativedictionary, .p M_cmove },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 18728, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0		; ( 0 ) (R o+'pad+1024  count )"},
		{.what Here, .desc "value", .here 18736, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_rpop	; ( 0 count ) (R o+'pad+1024 )"},
		{.what Here, .desc "address", .here 18744, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_rfetch	; ( 0 count o+'pad+1024 ) (R o+'pad+1024 )"},
		{.what Here, .desc "address", .here 18752, .there 360,.type Relativedictionary, .p M_rfetch },
	{.what Sourceline, .desc "dd M_plus	; ( 0 count+o+'pad+1024 ) (R o+'pad+1024 )"},
		{.what Here, .desc "address", .here 18760, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_cstore	; makes the filename to a null terminated string"},
		{.what Here, .desc "address", .here 18768, .there 360,.type Relativedictionary, .p M_cstore },
	{.what Sourceline, .desc "dd M_rpop ;  ( o+'pad+1024 )"},
		{.what Here, .desc "address", .here 18776, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 18784, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"cstring0\" cstring0 8 ; ( 'text count -- 'text ) backslash copy string to pad+1024 and add a null byte at the end"},
		{.what Here, .desc "link",.here 18792, .there 360,.type Relativedictionary, .p 18616 },
		{.what Here, .desc "len", .here 18800, .there 360,.type Byte, .b 0 + 8 },
		{.what Here, .desc "name",.here 18801, .there 360,.type Chars, .str "cstring0" },
		{.what Here, .desc "cfa", .here 18808, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 18816, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 18824, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd C_cstring"},
		{.what Here, .desc "address", .here 18832, .there 360,.type Relativedictionary, .p C_cstring },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 18840, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"cstring1\" cstring1 8 ; ( 'text count -- 'text ) backslash copy string to pad+1536 and add a null byte at the end"},
		{.what Here, .desc "link",.here 18848, .there 360,.type Relativedictionary, .p 18792 },
		{.what Here, .desc "len", .here 18856, .there 360,.type Byte, .b 0 + 8 },
		{.what Here, .desc "name",.here 18857, .there 360,.type Chars, .str "cstring1" },
		{.what Here, .desc "cfa", .here 18864, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 18872, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 512"},
		{.what Here, .desc "value", .here 18880, .there 360,.type Absolute, .p 512 },
	{.what Sourceline, .desc "dd C_cstring"},
		{.what Here, .desc "address", .here 18888, .there 360,.type Relativedictionary, .p C_cstring },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 18896, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"open-file\" open_file 9 ; ( 'text count mode -- fd ioresult )"},
		{.what Here, .desc "link",.here 18904, .there 360,.type Relativedictionary, .p 18848 },
		{.what Here, .desc "len", .here 18912, .there 360,.type Byte, .b 0 + 9 },
		{.what Here, .desc "name",.here 18913, .there 360,.type Chars, .str "open-file" },
		{.what Here, .desc "cfa", .here 18920, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_rpush	; ( 'text count ) (R mode)"},
		{.what Here, .desc "address", .here 18928, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd C_cstring0 ; ( 'padtext ) (R mode )"},
		{.what Here, .desc "address", .here 18936, .there 360,.type Relativedictionary, .p C_cstring0 },
	{.what Sourceline, .desc "dd M_rpop	; ( 'padtext mode ) (R )"},
		{.what Here, .desc "address", .here 18944, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_sysopen"},
		{.what Here, .desc "address", .here 18952, .there 360,.type Relativedictionary, .p M_sysopen },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 18960, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 18968, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1"},
		{.what Here, .desc "value", .here 18976, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "dd M_greater"},
		{.what Here, .desc "address", .here 18984, .there 360,.type Relativedictionary, .p M_greater },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 18992, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"close-file\" close_file 10 ; ( fd -- ioresult )"},
		{.what Here, .desc "link",.here 19000, .there 360,.type Relativedictionary, .p 18904 },
		{.what Here, .desc "len", .here 19008, .there 360,.type Byte, .b 0 + 10 },
		{.what Here, .desc "name",.here 19009, .there 360,.type Chars, .str "close-file" },
		{.what Here, .desc "cfa", .here 19016, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_sysclose"},
		{.what Here, .desc "address", .here 19024, .there 360,.type Relativedictionary, .p M_sysclose },
	{.what Sourceline, .desc "dd C_0eq"},
		{.what Here, .desc "address", .here 19032, .there 360,.type Relativedictionary, .p C_0eq },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 19040, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"read-file\" read_file 9 ; ( fd 'text count -- count2 ioresult )"},
		{.what Here, .desc "link",.here 19048, .there 360,.type Relativedictionary, .p 19000 },
		{.what Here, .desc "len", .here 19056, .there 360,.type Byte, .b 0 + 9 },
		{.what Here, .desc "name",.here 19057, .there 360,.type Chars, .str "read-file" },
		{.what Here, .desc "cfa", .here 19064, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_sysread"},
		{.what Here, .desc "address", .here 19072, .there 360,.type Relativedictionary, .p M_sysread },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 19080, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 19088, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1"},
		{.what Here, .desc "value", .here 19096, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "dd C_neq"},
		{.what Here, .desc "address", .here 19104, .there 360,.type Relativedictionary, .p C_neq },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 19112, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"write-file\" write_file 10 ; ( fd 'text count -- ioresult )"},
		{.what Here, .desc "link",.here 19120, .there 360,.type Relativedictionary, .p 19048 },
		{.what Here, .desc "len", .here 19128, .there 360,.type Byte, .b 0 + 10 },
		{.what Here, .desc "name",.here 19129, .there 360,.type Chars, .str "write-file" },
		{.what Here, .desc "cfa", .here 19136, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_syswrite"},
		{.what Here, .desc "address", .here 19144, .there 360,.type Relativedictionary, .p M_syswrite },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 19152, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1"},
		{.what Here, .desc "value", .here 19160, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "dd C_neq"},
		{.what Here, .desc "address", .here 19168, .there 360,.type Relativedictionary, .p C_neq },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 19176, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"reposition-file\" reposition_file 15 ; ( fd n type -- ioresult )"},
		{.what Here, .desc "link",.here 19184, .there 360,.type Relativedictionary, .p 19120 },
		{.what Here, .desc "len", .here 19192, .there 360,.type Byte, .b 0 + 15 },
		{.what Here, .desc "name",.here 19193, .there 360,.type Chars, .str "reposition-file" },
		{.what Here, .desc "cfa", .here 19200, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_sysseek"},
		{.what Here, .desc "address", .here 19208, .there 360,.type Relativedictionary, .p M_sysseek },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 19216, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1"},
		{.what Here, .desc "value", .here 19224, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "dd C_neq"},
		{.what Here, .desc "address", .here 19232, .there 360,.type Relativedictionary, .p C_neq },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 19240, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"?fcheck\" qfcheck 7"},
		{.what Here, .desc "link",.here 19248, .there 360,.type Relativedictionary, .p 19184 },
		{.what Here, .desc "len", .here 19256, .there 360,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 19257, .there 360,.type Chars, .str "?fcheck" },
		{.what Here, .desc "cfa", .here 19264, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_0eq"},
		{.what Here, .desc "address", .here 19272, .there 360,.type Relativedictionary, .p C_0eq },
	{.what Sourceline, .desc "dd M_cjump"},
		{.what Here, .desc "address", .here 19280, .there 360,.type Relativedictionary, .p M_cjump },
	{.what Sourceline, .desc "dd L246"},
		{.what Here, .desc "address", .here 19288, .there 360,.type Relativedictionary, .p L246 },
	{.what Sourceline, .desc "dd C_space"},
		{.what Here, .desc "address", .here 19296, .there 360,.type Relativedictionary, .p C_space },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 19304, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd L247"},
		{.what Here, .desc "address", .here 19312, .there 360,.type Relativedictionary, .p L247 },
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 19320, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 19328, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd C_cr"},
		{.what Here, .desc "address", .here 19336, .there 360,.type Relativedictionary, .p C_cr },
	{.what Sourceline, .desc "dd C_abort"},
		{.what Here, .desc "address", .here 19344, .there 360,.type Relativedictionary, .p C_abort },
	{.what Sourceline, .desc "L246:"},
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 19352, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"create-file\" create_file 11 ; ( a n mode perm -- fd ioresult ) not part of the original ff. could move this to a forth file."},
		{.what Here, .desc "link",.here 19360, .there 360,.type Relativedictionary, .p 19248 },
		{.what Here, .desc "len", .here 19368, .there 360,.type Byte, .b 0 + 11 },
		{.what Here, .desc "name",.here 19369, .there 360,.type Chars, .str "create-file" },
		{.what Here, .desc "cfa", .here 19376, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_rpush	; ( a n mode ) (R perm)"},
		{.what Here, .desc "address", .here 19384, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_rpush	; ( a n ) (R perm mode)"},
		{.what Here, .desc "address", .here 19392, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd C_pad	; ( a n padaddr)"},
		{.what Here, .desc "address", .here 19400, .there 360,.type Relativedictionary, .p C_pad },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 19408, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1024		; ( a n padaddr 1024 )"},
		{.what Here, .desc "value", .here 19416, .there 360,.type Absolute, .p 1024 },
	{.what Sourceline, .desc "dd M_plus	; ( a n padaddr+1024 )"},
		{.what Here, .desc "address", .here 19424, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_xswap	; ( a padaddr+1024 n )"},
		{.what Here, .desc "address", .here 19432, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_dup	; ( a padaddr+1024 n n )"},
		{.what Here, .desc "address", .here 19440, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_rpush	; ( a padaddr+1024 n ) (R perm mode n )"},
		{.what Here, .desc "address", .here 19448, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd M_cmove	; moves the filename from a to paddaddr+1024"},
		{.what Here, .desc "address", .here 19456, .there 360,.type Relativedictionary, .p M_cmove },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 19464, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0		; ( 0 )"},
		{.what Here, .desc "value", .here 19472, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_rpop	; ( 0 n ) (R perm mode)"},
		{.what Here, .desc "address", .here 19480, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd C_pad	; ( 0 n padaddr)"},
		{.what Here, .desc "address", .here 19488, .there 360,.type Relativedictionary, .p C_pad },
	{.what Sourceline, .desc "dd M_plus	; ( 0 padaddr+n )"},
		{.what Here, .desc "address", .here 19496, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 19504, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1024		; ( 0 padaddr+n 1024 )"},
		{.what Here, .desc "value", .here 19512, .there 360,.type Absolute, .p 1024 },
	{.what Sourceline, .desc "dd M_plus	; ( 0 padaddr+n+1024 )"},
		{.what Here, .desc "address", .here 19520, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_cstore	; ( ) makes the filename to a null terminated string"},
		{.what Here, .desc "address", .here 19528, .there 360,.type Relativedictionary, .p M_cstore },
	{.what Sourceline, .desc "dd C_pad"},
		{.what Here, .desc "address", .here 19536, .there 360,.type Relativedictionary, .p C_pad },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 19544, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1024		; ( padaddr 1024 )"},
		{.what Here, .desc "value", .here 19552, .there 360,.type Absolute, .p 1024 },
	{.what Sourceline, .desc "dd M_plus	; ( padaddr+1024 )"},
		{.what Here, .desc "address", .here 19560, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_rpop	; ( padaddr+1024 mode) (R perm )"},
		{.what Here, .desc "address", .here 19568, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_rpop	; ( padaddr+1024 mode perm ) (R )"},
		{.what Here, .desc "address", .here 19576, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd M_syscreate"},
		{.what Here, .desc "address", .here 19584, .there 360,.type Relativedictionary, .p M_syscreate },
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 19592, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 19600, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1"},
		{.what Here, .desc "value", .here 19608, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "dd M_greater"},
		{.what Here, .desc "address", .here 19616, .there 360,.type Relativedictionary, .p M_greater },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 19624, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"bye\" bye 3"},
		{.what Here, .desc "link",.here 19632, .there 360,.type Relativedictionary, .p 19360 },
		{.what Here, .desc "len", .here 19640, .there 360,.type Byte, .b 0 + 3 },
		{.what Here, .desc "name",.here 19641, .there 360,.type Chars, .str "bye" },
		{.what Here, .desc "cfa", .here 19648, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 19656, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 19664, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_terminate"},
		{.what Here, .desc "address", .here 19672, .there 360,.type Relativedictionary, .p M_terminate },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 19680, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"include\" include 7 ; this does not work"},
		{.what Here, .desc "link",.here 19688, .there 360,.type Relativedictionary, .p 19632 },
		{.what Here, .desc "len", .here 19696, .there 360,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 19697, .there 360,.type Chars, .str "include" },
		{.what Here, .desc "cfa", .here 19704, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd C_word"},
		{.what Here, .desc "address", .here 19712, .there 360,.type Relativedictionary, .p C_word },
	{.what Sourceline, .desc "dd M_rpush"},
		{.what Here, .desc "address", .here 19720, .there 360,.type Relativedictionary, .p M_rpush },
	{.what Sourceline, .desc "dd C_input_fetch	; save the old input onto the stack"},
		{.what Here, .desc "address", .here 19728, .there 360,.type Relativedictionary, .p C_input_fetch },
	{.what Sourceline, .desc "dd M_rpop"},
		{.what Here, .desc "address", .here 19736, .there 360,.type Relativedictionary, .p M_rpop },
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 19744, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_ro"},
		{.what Here, .desc "address", .here 19752, .there 360,.type Relativedictionary, .p C_ro },
	{.what Sourceline, .desc "dd C_open_file"},
		{.what Here, .desc "address", .here 19760, .there 360,.type Relativedictionary, .p C_open_file },
	{.what Sourceline, .desc "dd C_qfcheck"},
		{.what Here, .desc "address", .here 19768, .there 360,.type Relativedictionary, .p C_qfcheck },
	{.what Sourceline, .desc "dd MV_Infd		; open the new file"},
		{.what Here, .desc "address", .here 19776, .there 360,.type Relativedictionary, .p MV_Infd },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 19784, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 19792, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"crash\" crash 5"},
		{.what Here, .desc "link",.here 19800, .there 360,.type Relativedictionary, .p 19688 },
		{.what Here, .desc "len", .here 19808, .there 360,.type Byte, .b 0 + 5 },
		{.what Here, .desc "name",.here 19809, .there 360,.type Chars, .str "crash" },
		{.what Here, .desc "cfa", .here 19816, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 19824, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd L251"},
		{.what Here, .desc "address", .here 19832, .there 360,.type Relativedictionary, .p L251 },
	{.what Sourceline, .desc "dd C_count"},
		{.what Here, .desc "address", .here 19840, .there 360,.type Relativedictionary, .p C_count },
	{.what Sourceline, .desc "dd C_type"},
		{.what Here, .desc "address", .here 19848, .there 360,.type Relativedictionary, .p C_type },
	{.what Sourceline, .desc "dd C_cr"},
		{.what Here, .desc "address", .here 19856, .there 360,.type Relativedictionary, .p C_cr },
	{.what Sourceline, .desc "dd C_abort"},
		{.what Here, .desc "address", .here 19864, .there 360,.type Relativedictionary, .p C_abort },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 19872, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"quit\" quit 4 ; interpreter loop"},
		{.what Here, .desc "link",.here 19880, .there 360,.type Relativedictionary, .p 19800 },
		{.what Here, .desc "len", .here 19888, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 19889, .there 360,.type Chars, .str "quit" },
		{.what Here, .desc "cfa", .here 19896, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_reset ; initialize return stack"},
		{.what Here, .desc "address", .here 19904, .there 360,.type Relativedictionary, .p M_reset },
	{.what Sourceline, .desc "dd M_clear	; SP = sstack_end initialize data stack"},
		{.what Here, .desc "address", .here 19912, .there 360,.type Relativedictionary, .p M_clear },
	{.what Sourceline, .desc "L_C_quit:"},
	{.what Sourceline, .desc "dd C_word"},
		{.what Here, .desc "address", .here 19920, .there 360,.type Relativedictionary, .p C_word },
	{.what Sourceline, .desc "dd C_interpret"},
		{.what Here, .desc "address", .here 19928, .there 360,.type Relativedictionary, .p C_interpret },
	{.what Sourceline, .desc "dd M_jump"},
		{.what Here, .desc "address", .here 19936, .there 360,.type Relativedictionary, .p M_jump },
	{.what Sourceline, .desc "dd L_C_quit"},
		{.what Here, .desc "address", .here 19944, .there 360,.type Relativedictionary, .p L_C_quit },
	{.what Sourceline, .desc "dd M_exitcolon	; why is this needed?"},
		{.what Here, .desc "address", .here 19952, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"(abort)\" parenabort 7 ; TODO correct below stack notations"},
		{.what Here, .desc "link",.here 19960, .there 360,.type Relativedictionary, .p 19880 },
		{.what Here, .desc "len", .here 19968, .there 360,.type Byte, .b 0 + 7 },
		{.what Here, .desc "name",.here 19969, .there 360,.type Chars, .str "(abort)" },
		{.what Here, .desc "cfa", .here 19976, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_State	; ( mv_State -- )"},
		{.what Here, .desc "address", .here 19984, .there 360,.type Relativedictionary, .p MV_State },
	{.what Sourceline, .desc "dd C_off	; off sets variable state = 0"},
		{.what Here, .desc "address", .here 19992, .there 360,.type Relativedictionary, .p C_off },
	{.what Sourceline, .desc "dd MC_STDIN"},
		{.what Here, .desc "address", .here 20000, .there 360,.type Relativedictionary, .p MC_STDIN },
	{.what Sourceline, .desc "dd MV_Infd"},
		{.what Here, .desc "address", .here 20008, .there 360,.type Relativedictionary, .p MV_Infd },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 20016, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd MC_STDOUT"},
		{.what Here, .desc "address", .here 20024, .there 360,.type Relativedictionary, .p MC_STDOUT },
	{.what Sourceline, .desc "dd MV_Outfd"},
		{.what Here, .desc "address", .here 20032, .there 360,.type Relativedictionary, .p MV_Outfd },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 20040, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd MC_STDERR"},
		{.what Here, .desc "address", .here 20048, .there 360,.type Relativedictionary, .p MC_STDERR },
	{.what Sourceline, .desc "dd MV_Errfd"},
		{.what Here, .desc "address", .here 20056, .there 360,.type Relativedictionary, .p MV_Errfd },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 20064, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd C_stdinput"},
		{.what Here, .desc "address", .here 20072, .there 360,.type Relativedictionary, .p C_stdinput },
	{.what Sourceline, .desc "dd C_quit	; quit resets stacks and is the interpreter loop"},
		{.what Here, .desc "address", .here 20080, .there 360,.type Relativedictionary, .p C_quit },
	{.what Sourceline, .desc "dd M_exitcolon	; why is this needed? quit does not return unless it breaks"},
		{.what Here, .desc "address", .here 20088, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "dd M_literal	; test code"},
		{.what Here, .desc "address", .here 20096, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 66"},
		{.what Here, .desc "value", .here 20104, .there 360,.type Absolute, .p 66 },
	{.what Sourceline, .desc "dd MV_Wordb"},
		{.what Here, .desc "address", .here 20112, .there 360,.type Relativedictionary, .p MV_Wordb },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 20120, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd MC_STDOUT"},
		{.what Here, .desc "address", .here 20128, .there 360,.type Relativedictionary, .p MC_STDOUT },
	{.what Sourceline, .desc "dd MV_Wordb"},
		{.what Here, .desc "address", .here 20136, .there 360,.type Relativedictionary, .p MV_Wordb },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 20144, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 20152, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd M_syswrite"},
		{.what Here, .desc "address", .here 20160, .there 360,.type Relativedictionary, .p M_syswrite },
	{.what Sourceline, .desc "dd M_drop		; drop the return value of write"},
		{.what Here, .desc "address", .here 20168, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd MC_STDIN"},
		{.what Here, .desc "address", .here 20176, .there 360,.type Relativedictionary, .p MC_STDIN },
	{.what Sourceline, .desc "dd MV_Wordb"},
		{.what Here, .desc "address", .here 20184, .there 360,.type Relativedictionary, .p MV_Wordb },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 20192, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 20200, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd M_sysread"},
		{.what Here, .desc "address", .here 20208, .there 360,.type Relativedictionary, .p M_sysread },
	{.what Sourceline, .desc "dd M_drop		; drop the return value of read"},
		{.what Here, .desc "address", .here 20216, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "CENTRY \"initialize\" initialize 10 ; initialize buffer file names and buffer fds, why not hard code this?"},
		{.what Here, .desc "link",.here 20224, .there 360,.type Relativedictionary, .p 19960 },
		{.what Here, .desc "len", .here 20232, .there 360,.type Byte, .b 0 + 10 },
		{.what Here, .desc "name",.here 20233, .there 360,.type Chars, .str "initialize" },
		{.what Here, .desc "cfa", .here 20240, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd MV_Bufferfds"},
		{.what Here, .desc "address", .here 20248, .there 360,.type Relativedictionary, .p MV_Bufferfds },
	{.what Sourceline, .desc "dd MC_NBUFFERS"},
		{.what Here, .desc "address", .here 20256, .there 360,.type Relativedictionary, .p MC_NBUFFERS },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 20264, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 20272, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_doinit"},
		{.what Here, .desc "address", .here 20280, .there 360,.type Relativedictionary, .p M_doinit },
	{.what Sourceline, .desc "L_C_initialize:"},
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 20288, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 20296, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd -1"},
		{.what Here, .desc "value", .here 20304, .there 360,.type Absolute, .p -1 },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 20312, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 20320, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 20328, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 20336, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd C_cells"},
		{.what Here, .desc "address", .here 20344, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 20352, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_doloop"},
		{.what Here, .desc "address", .here 20360, .there 360,.type Relativedictionary, .p M_doloop },
	{.what Sourceline, .desc "dd L_C_initialize"},
		{.what Here, .desc "address", .here 20368, .there 360,.type Relativedictionary, .p L_C_initialize },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 20376, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd MV_Bufferfilenames"},
		{.what Here, .desc "address", .here 20384, .there 360,.type Relativedictionary, .p MV_Bufferfilenames },
	{.what Sourceline, .desc "dd MC_NBUFFERS"},
		{.what Here, .desc "address", .here 20392, .there 360,.type Relativedictionary, .p MC_NBUFFERS },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 20400, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 20408, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_doinit"},
		{.what Here, .desc "address", .here 20416, .there 360,.type Relativedictionary, .p M_doinit },
	{.what Sourceline, .desc "L_C_initialize_1:"},
	{.what Sourceline, .desc "dd M_dup"},
		{.what Here, .desc "address", .here 20424, .there 360,.type Relativedictionary, .p M_dup },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 20432, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 0"},
		{.what Here, .desc "value", .here 20440, .there 360,.type Absolute, .p 0 },
	{.what Sourceline, .desc "dd M_xswap"},
		{.what Here, .desc "address", .here 20448, .there 360,.type Relativedictionary, .p M_xswap },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 20456, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 20464, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd 1"},
		{.what Here, .desc "value", .here 20472, .there 360,.type Absolute, .p 1 },
	{.what Sourceline, .desc "dd C_cells"},
		{.what Here, .desc "address", .here 20480, .there 360,.type Relativedictionary, .p C_cells },
	{.what Sourceline, .desc "dd M_plus"},
		{.what Here, .desc "address", .here 20488, .there 360,.type Relativedictionary, .p M_plus },
	{.what Sourceline, .desc "dd M_doloop"},
		{.what Here, .desc "address", .here 20496, .there 360,.type Relativedictionary, .p M_doloop },
	{.what Sourceline, .desc "dd L_C_initialize_1"},
		{.what Here, .desc "address", .here 20504, .there 360,.type Relativedictionary, .p L_C_initialize_1 },
	{.what Sourceline, .desc "dd M_drop"},
		{.what Here, .desc "address", .here 20512, .there 360,.type Relativedictionary, .p M_drop },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 20520, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd L_line_filename"},
		{.what Here, .desc "address", .here 20528, .there 360,.type Relativedictionary, .p L_line_filename },
	{.what Sourceline, .desc "dd C_wordfilename_store"},
		{.what Here, .desc "address", .here 20536, .there 360,.type Relativedictionary, .p C_wordfilename_store },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 20544, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd L_word_filename"},
		{.what Here, .desc "address", .here 20552, .there 360,.type Relativedictionary, .p L_word_filename },
	{.what Sourceline, .desc "dd C_linefilename_store"},
		{.what Here, .desc "address", .here 20560, .there 360,.type Relativedictionary, .p C_linefilename_store },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 20568, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd L_doublequote_filename"},
		{.what Here, .desc "address", .here 20576, .there 360,.type Relativedictionary, .p L_doublequote_filename },
	{.what Sourceline, .desc "dd C_doublequotefilename_store"},
		{.what Here, .desc "address", .here 20584, .there 360,.type Relativedictionary, .p C_doublequotefilename_store },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 20592, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd L_closeparen_filename"},
		{.what Here, .desc "address", .here 20600, .there 360,.type Relativedictionary, .p L_closeparen_filename },
	{.what Sourceline, .desc "dd C_closeparenfilename_store"},
		{.what Here, .desc "address", .here 20608, .there 360,.type Relativedictionary, .p C_closeparenfilename_store },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 20616, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "CENTRY \"boot\" boot 4"},
		{.what Here, .desc "link",.here 20624, .there 360,.type Relativedictionary, .p 20224 },
		{.what Here, .desc "len", .here 20632, .there 360,.type Byte, .b 0 + 4 },
		{.what Here, .desc "name",.here 20633, .there 360,.type Chars, .str "boot" },
		{.what Here, .desc "cfa", .here 20640, .there 360,.type Absoluteptr, .ptr colon },
	{.what Sourceline, .desc "dd M_reset ; initialize return stack"},
		{.what Here, .desc "address", .here 20648, .there 360,.type Relativedictionary, .p M_reset },
	{.what Sourceline, .desc "dd M_clear	; SP = sstack_end initialize data stack"},
		{.what Here, .desc "address", .here 20656, .there 360,.type Relativedictionary, .p M_clear },
	{.what Sourceline, .desc "dd M_literal"},
		{.what Here, .desc "address", .here 20664, .there 360,.type Relativedictionary, .p M_literal },
	{.what Sourceline, .desc "dd C_parenabort ; ( (abort) -- )"},
		{.what Here, .desc "address", .here 20672, .there 360,.type Relativedictionary, .p C_parenabort },
	{.what Sourceline, .desc "dd MV_Abortvec	; variable that puts (abort) code address on the stack"},
		{.what Here, .desc "address", .here 20680, .there 360,.type Relativedictionary, .p MV_Abortvec },
	{.what Sourceline, .desc "dd M_store	; variable abortvec = (abort) code address"},
		{.what Here, .desc "address", .here 20688, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd MV_Dp"},
		{.what Here, .desc "address", .here 20696, .there 360,.type Relativedictionary, .p MV_Dp },
	{.what Sourceline, .desc "dd MV_H0	; H0 = here at startup"},
		{.what Here, .desc "address", .here 20704, .there 360,.type Relativedictionary, .p MV_H0 },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 20712, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd C_initialize	; sets up the buffer filenames and buffer fd's"},
		{.what Here, .desc "address", .here 20720, .there 360,.type Relativedictionary, .p C_initialize },
	{.what Sourceline, .desc "dd MC_STDIN"},
		{.what Here, .desc "address", .here 20728, .there 360,.type Relativedictionary, .p MC_STDIN },
	{.what Sourceline, .desc "dd MV_Infd	; might be overwritten by args below"},
		{.what Here, .desc "address", .here 20736, .there 360,.type Relativedictionary, .p MV_Infd },
	{.what Sourceline, .desc "dd M_store	; stdin = 0"},
		{.what Here, .desc "address", .here 20744, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd MC_STDOUT"},
		{.what Here, .desc "address", .here 20752, .there 360,.type Relativedictionary, .p MC_STDOUT },
	{.what Sourceline, .desc "dd MV_Outfd"},
		{.what Here, .desc "address", .here 20760, .there 360,.type Relativedictionary, .p MV_Outfd },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 20768, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd MC_STDERR"},
		{.what Here, .desc "address", .here 20776, .there 360,.type Relativedictionary, .p MC_STDERR },
	{.what Sourceline, .desc "dd MV_Errfd"},
		{.what Here, .desc "address", .here 20784, .there 360,.type Relativedictionary, .p MV_Errfd },
	{.what Sourceline, .desc "dd M_store"},
		{.what Here, .desc "address", .here 20792, .there 360,.type Relativedictionary, .p M_store },
	{.what Sourceline, .desc "dd MV_State"},
		{.what Here, .desc "address", .here 20800, .there 360,.type Relativedictionary, .p MV_State },
	{.what Sourceline, .desc "dd C_off	; off stores 0 at state"},
		{.what Here, .desc "address", .here 20808, .there 360,.type Relativedictionary, .p C_off },
	{.what Sourceline, .desc "dd C_decimal	; decimal sets base = 10"},
		{.what Here, .desc "address", .here 20816, .there 360,.type Relativedictionary, .p C_decimal },
	{.what Sourceline, .desc "dd C_args	; process args"},
		{.what Here, .desc "address", .here 20824, .there 360,.type Relativedictionary, .p C_args },
	{.what Sourceline, .desc "dd C_close_input ; if the args opened an input"},
		{.what Here, .desc "address", .here 20832, .there 360,.type Relativedictionary, .p C_close_input },
	{.what Sourceline, .desc "dd C_stdinput	; read lines from stdin, args can change it later"},
		{.what Here, .desc "address", .here 20840, .there 360,.type Relativedictionary, .p C_stdinput },
	{.what Sourceline, .desc "dd C_quit	; interpreter loop when there are no args or fall through after processing args"},
		{.what Here, .desc "address", .here 20848, .there 360,.type Relativedictionary, .p C_quit },
	{.what Sourceline, .desc "dd M_exitcolon"},
		{.what Here, .desc "address", .here 20856, .there 360,.type Relativedictionary, .p M_exitcolon },
	{.what Sourceline, .desc "L_bin_prefix:"},
	{.what Sourceline, .desc "db \"#n/\""},
		{.what Here, .desc "len", .here 20864, .there 360,.type Byte, .b 3 },
		{.what Here, .desc "name",.here 20865, .there 360,.type Chars, .str "#n/" },
	{.what Sourceline, .desc "L_line_filename:"},
	{.what Sourceline, .desc "db \"/word\""},
		{.what Here, .desc "len", .here 20868, .there 360,.type Byte, .b 5 },
		{.what Here, .desc "name",.here 20869, .there 360,.type Chars, .str "/word" },
	{.what Sourceline, .desc "L_word_filename:"},
	{.what Sourceline, .desc "db \"/line\""},
		{.what Here, .desc "len", .here 20874, .there 360,.type Byte, .b 5 },
		{.what Here, .desc "name",.here 20875, .there 360,.type Chars, .str "/line" },
	{.what Sourceline, .desc "L_doublequote_filename:"},
	{.what Sourceline, .desc "db \"/doublequote\""},
		{.what Here, .desc "len", .here 20880, .there 360,.type Byte, .b 12 },
		{.what Here, .desc "name",.here 20881, .there 360,.type Chars, .str "/doublequote" },
	{.what Sourceline, .desc "L_closeparen_filename:"},
	{.what Sourceline, .desc "db \"/closeparen\""},
		{.what Here, .desc "len", .here 20893, .there 360,.type Byte, .b 11 },
		{.what Here, .desc "name",.here 20894, .there 360,.type Chars, .str "/closeparen" },
	{.what Sourceline, .desc "L137:"},
	{.what Sourceline, .desc "db \"unable to restore input\" ; comments for testing the awk parser"},
		{.what Here, .desc "len", .here 20905, .there 360,.type Byte, .b 23 },
		{.what Here, .desc "name",.here 20906, .there 360,.type Chars, .str "unable to restore input" },
	{.what Sourceline, .desc "L_open_failed:"},
	{.what Sourceline, .desc "db \"open file failed\""},
		{.what Here, .desc "len", .here 20929, .there 360,.type Byte, .b 16 },
		{.what Here, .desc "name",.here 20930, .there 360,.type Chars, .str "open file failed" },
	{.what Sourceline, .desc "L_read_failed:"},
	{.what Sourceline, .desc "db \"read file failed\""},
		{.what Here, .desc "len", .here 20946, .there 360,.type Byte, .b 16 },
		{.what Here, .desc "name",.here 20947, .there 360,.type Chars, .str "read file failed" },
	{.what Sourceline, .desc "L170:"},
	{.what Sourceline, .desc "db \" Q?\""},
		{.what Here, .desc "len", .here 20963, .there 360,.type Byte, .b 3 },
		{.what Here, .desc "name",.here 20964, .there 360,.type Chars, .str " Q?" },
	{.what Sourceline, .desc "L173:"},
	{.what Sourceline, .desc "db \" stack underflow\""},
		{.what Here, .desc "len", .here 20967, .there 360,.type Byte, .b 16 },
		{.what Here, .desc "name",.here 20968, .there 360,.type Chars, .str " stack underflow" },
	{.what Sourceline, .desc "L180:"},
	{.what Sourceline, .desc "db \" I?\""},
		{.what Here, .desc "len", .here 20984, .there 360,.type Byte, .b 3 },
		{.what Here, .desc "name",.here 20985, .there 360,.type Chars, .str " I?" },
	{.what Sourceline, .desc "L_C_compile_5:"},
	{.what Sourceline, .desc "db \" C?\""},
		{.what Here, .desc "len", .here 20988, .there 360,.type Byte, .b 3 },
		{.what Here, .desc "name",.here 20989, .there 360,.type Chars, .str " C?" },
	{.what Sourceline, .desc "L247:"},
	{.what Sourceline, .desc "db \"I/O error\""},
		{.what Here, .desc "len", .here 20992, .there 360,.type Byte, .b 9 },
		{.what Here, .desc "name",.here 20993, .there 360,.type Chars, .str "I/O error" },
	{.what Sourceline, .desc "L251:"},
	{.what Sourceline, .desc "db \"uninitialized execution vector\""},
		{.what Here, .desc "len", .here 21002, .there 360,.type Byte, .b 30 },
		{.what Here, .desc "name",.here 21003, .there 360,.type Chars, .str "uninitialized execution vector" },
	{.what Sourceline, .desc "L255:"},
	{.what Sourceline, .desc "db \" ok\""},
		{.what Here, .desc "len", .here 21033, .there 360,.type Byte, .b 3 },
		{.what Here, .desc "name",.here 21034, .there 360,.type Chars, .str " ok" },
	{.what Sourceline, .desc "L_C_get_too_long:"},
	{.what Sourceline, .desc "db \"input is longer than 4096 bytes without a delimiter\""},
		{.what Here, .desc "len", .here 21037, .there 360,.type Byte, .b 51 },
		{.what Here, .desc "name",.here 21038, .there 360,.type Chars, .str "input is longer than 4096 bytes without a delimiter" },
	{.what Sourceline, .desc "L305:"},
	{.what Sourceline, .desc "db \"read error\""},
		{.what Here, .desc "len", .here 21089, .there 360,.type Byte, .b 10 },
		{.what Here, .desc "name",.here 21090, .there 360,.type Chars, .str "read error" },
	{.what Sourceline, .desc "L_C_long_word:"},
	{.what Sourceline, .desc "db \"word is too long to be interpreted\""},
		{.what Here, .desc "len", .here 21100, .there 360,.type Byte, .b 34 },
		{.what Here, .desc "name",.here 21101, .there 360,.type Chars, .str "word is too long to be interpreted" },
	{.what Here,  .desc "end here", .here 21136, .there 360,.type End },
	{.what There, .desc "end there", .here 21136, .there 360,.type End },
	{.what Dtop, .desc "end dtop", .p 20624 },
};

